{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\core\\\\pages\\\\Private\\\\components\\\\Notes\\\\UserNotes.js\";\nimport React, { useState, useEffect, Fragment } from 'react'; // import Layout from '../core/Layout';\n\nimport axios from 'axios';\nimport { isAuth, getCookie, signout } from '../../../../../auth/helpers';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { List, ListNote } from \"../../../../components/List\";\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { Accordion, Card, Button } from 'react-bootstrap';\n\nconst UserNotes = ({\n  history\n}) => {\n  const _useState = useState({\n    notes: [],\n    title: \"\",\n    category: \"\",\n    body: \"\",\n    _id: \"\",\n    isBookmarked: false,\n    title: \"\",\n    category: \"\",\n    body: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const token = getCookie('token');\n  useEffect(() => {\n    loadProfile();\n  }, []);\n\n  const handleChange = name => event => {\n    console.log(name);\n    setValues(_objectSpread({}, values, {\n      title: title,\n      category: category,\n      body: body,\n      [name]: event.target.value\n    }));\n    console.log(title, body, category);\n  };\n\n  const loadProfile = () => {\n    axios({\n      method: 'GET',\n      url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      const _response$data = response.data,\n            role = _response$data.role,\n            name = _response$data.name,\n            email = _response$data.email,\n            notes = _response$data.notes,\n            _id = _response$data._id;\n      setValues(_objectSpread({}, values, {\n        role,\n        name,\n        email,\n        notes,\n        _id\n      }));\n    }).catch(error => {\n      if (error.response.status === 401) {\n        signout(() => {\n          history.push('/');\n        });\n      }\n    });\n  };\n\n  const name = values.name,\n        notes = values.notes,\n        title = values.title,\n        body = values.body,\n        category = values.category,\n        _id = values._id; //show notes in form\n\n  const handleEditNotes = (noteTitle, noteCategory, noteBody, noteLink, noteDate, noteId) => {\n    handleChange(noteTitle, noteBody, noteCategory);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Title: \" + noteTitle,\n      onChange: handleChange('title'),\n      type: \"text\",\n      name: \"title\",\n      className: \"form-control\",\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"nav-link\",\n      to: '/lesson/' + noteLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Click to go to lesson...\"), React.createElement(\"input\", {\n      placeholder: \"Category: \" + noteCategory,\n      onChange: handleChange('category'),\n      name: \"category\",\n      type: \"text\",\n      className: \"form-control\",\n      id: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: \"note-textbox\",\n      onChange: handleChange('body'),\n      id: \"bodyNotes\",\n      name: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, noteBody), React.createElement(\"div\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Created on: \", convertDate(noteDate)), React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => handleSubmitEdit(noteId, noteLink),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Submit Edit\"))), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning deleteNote-btn\",\n      onClick: () => RemoveNote(noteId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Delete Note\"));\n  }; //convert to date\n\n\n  const convertDate = date => {\n    let arr1 = date.split(\"T\");\n    let arr2 = arr1[0].split(\"-\");\n    let dateyear = arr2[2] + \", \" + arr2[0];\n\n    switch (arr2[1]) {\n      case '01':\n        return \"Jan. \" + dateyear;\n        break;\n\n      case '02':\n        return \"Feb. \" + dateyear;\n        break;\n\n      case '03':\n        return \"March \" + dateyear;\n        break;\n\n      case '04':\n        return \"Apr. \" + dateyear;\n        break;\n\n      case '05':\n        return \"May \" + dateyear;\n        break;\n\n      case '06':\n        return \"June \" + dateyear;\n        break;\n\n      case '07':\n        return \"July \" + dateyear;\n        break;\n\n      case '08':\n        return \"Aug. \" + dateyear;\n        break;\n\n      case '09':\n        return \"Sept. \" + dateyear;\n        break;\n\n      case '10':\n        return \"Oct. \" + dateyear;\n        break;\n\n      case '11':\n        return \"Nov. \" + dateyear;\n        break;\n\n      case '12':\n        return \"Dec. \" + dateyear;\n        break;\n    }\n  };\n\n  const RemoveNote = Note_id => {\n    axios({\n      method: 'DELETE',\n      url: `${process.env.REACT_APP_API}/notes/` + Note_id,\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(response => {\n      console.log('Note was deleted', response);\n      toast.success('Note was Removed!');\n    });\n  };\n\n  const handleSubmitEdit = (Note_id, lessonLink) => {\n    axios({\n      method: \"PUT\",\n      url: process.env.REACT_APP_API + '/notes/' + Note_id,\n      headers: {\n        Authorization: 'Bearer ' + token\n      },\n      data: {\n        title: title,\n        category: category,\n        body: body,\n        Lesson_id: lessonLink,\n        User_id: _id\n      }\n    }).then(response => {\n      console.log(title, body, category);\n      toast.success(`You have updated notes!`);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    id: \"note-name-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \" \", name, \"'s Notes \"), notes.length ? React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, notes.map(note => React.createElement(Accordion, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      width: '66rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"note-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, note.title), React.createElement(\"div\", {\n    className: \"note-category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, note.category), React.createElement(\"div\", {\n    className: \"note-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, convertDate(note.date)))), React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(ListNote, {\n    key: note._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, handleEditNotes(note.title, note.category, note.body, note.Lesson_id, note.date, note._id))))))) : React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"You have no notes saved to your portfolio.\"));\n};\n\nexport default UserNotes;","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/core/pages/Private/components/Notes/UserNotes.js"],"names":["React","useState","useEffect","Fragment","axios","isAuth","getCookie","signout","List","ListNote","Link","toast","Accordion","Card","Button","UserNotes","history","notes","title","category","body","_id","isBookmarked","values","setValues","token","loadProfile","handleChange","name","event","console","log","target","value","method","url","process","env","REACT_APP_API","headers","Authorization","then","response","data","role","email","catch","error","status","push","handleEditNotes","noteTitle","noteCategory","noteBody","noteLink","noteDate","noteId","convertDate","handleSubmitEdit","RemoveNote","date","arr1","split","arr2","dateyear","Note_id","success","lessonLink","Lesson_id","User_id","length","map","note","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\r\n// import Layout from '../core/Layout';\r\nimport axios from 'axios';\r\nimport { isAuth, getCookie, signout } from '../../../../../auth/helpers';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { List, ListNote } from \"../../../../components/List\";\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { Accordion, Card, Button } from 'react-bootstrap'\r\n\r\n\r\n\r\nconst UserNotes = ({ history }) => {\r\n    const [values, setValues] = useState({\r\n        notes: [],\r\n        title: \"\",\r\n        category: \"\",\r\n        body: \"\",\r\n        _id: \"\",\r\n        isBookmarked: false,\r\n        title: \"\",\r\n        category: \"\",\r\n        body: \"\"\r\n    });\r\n\r\n\r\n\r\n    const token = getCookie('token');\r\n\r\n    useEffect(() => {\r\n        loadProfile();\r\n    }, []);\r\n\r\n    const handleChange = (name) => event => {\r\n        console.log(name)\r\n        setValues({ ...values, title: title, category: category, body: body, [name]: event.target.value })\r\n        console.log(title, body, category)\r\n    }\r\n\r\n    const loadProfile = () => {\r\n        axios({\r\n            method: 'GET',\r\n            url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                const { role, name, email, notes, _id } = response.data;\r\n                setValues({ ...values, role, name, email, notes, _id });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 401) {\r\n                    signout(() => {\r\n                        history.push('/');\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const { name, notes, title, body, category, _id } = values;\r\n\r\n    //show notes in form\r\n    const handleEditNotes = (noteTitle, noteCategory, noteBody, noteLink, noteDate, noteId) => {\r\n        handleChange(noteTitle, noteBody, noteCategory);\r\n        return (\r\n            <Fragment>\r\n                <div>\r\n                    <form>\r\n                        <input placeholder={\"Title: \" + noteTitle} onChange={handleChange('title')} type=\"text\" name=\"title\" className=\"form-control\" id=\"title\"></input>\r\n                        <Link className=\"nav-link\" to={'/lesson/' + noteLink}>Click to go to lesson...</Link>\r\n                        <input placeholder={\"Category: \" + noteCategory} onChange={handleChange('category')} name=\"category\" type=\"text\" className=\"form-control\" id=\"category\"></input>\r\n                        <textarea className='note-textbox' onChange={handleChange('body')} id=\"bodyNotes\" name=\"body\">{noteBody}</textarea>\r\n                        <div className='date'>Created on: {convertDate(noteDate)}</div>\r\n                        <button className=\"btn btn-warning\" onClick={() => handleSubmitEdit(noteId, noteLink)} type=\"submit\">Submit Edit</button>\r\n                    </form>\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-warning deleteNote-btn\" onClick={() => RemoveNote(noteId)}>Delete Note</button>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    //convert to date\r\n    const convertDate = (date) => {\r\n        let arr1 = date.split(\"T\")\r\n        let arr2 = arr1[0].split(\"-\")\r\n        let dateyear = arr2[2] + \", \" + arr2[0];\r\n        switch (arr2[1]) {\r\n            case '01': return \"Jan. \" + dateyear;\r\n                break;\r\n            case '02': return \"Feb. \" + dateyear;\r\n                break;\r\n            case '03': return \"March \" + dateyear;\r\n                break;\r\n            case '04': return \"Apr. \" + dateyear;\r\n                break;\r\n            case '05': return \"May \" + dateyear;\r\n                break;\r\n            case '06': return \"June \" + dateyear;\r\n                break;\r\n            case '07': return \"July \" + dateyear;\r\n                break;\r\n            case '08': return \"Aug. \" + dateyear;\r\n                break;\r\n            case '09': return \"Sept. \" + dateyear;\r\n                break;\r\n            case '10': return \"Oct. \" + dateyear;\r\n                break;\r\n            case '11': return \"Nov. \" + dateyear;\r\n                break;\r\n            case '12': return \"Dec. \" + dateyear;\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    const RemoveNote = (Note_id) => {\r\n        axios({\r\n            method: 'DELETE',\r\n            url: `${process.env.REACT_APP_API}/notes/` + Note_id,\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n            .then(response => {\r\n                console.log('Note was deleted', response);\r\n                toast.success('Note was Removed!');\r\n            });\r\n    }\r\n\r\n    const handleSubmitEdit = (Note_id, lessonLink) => {\r\n        axios({\r\n            method: \"PUT\",\r\n            url: process.env.REACT_APP_API + '/notes/' + Note_id,\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            },\r\n            data: { title: title, category: category, body: body, Lesson_id: lessonLink, User_id: _id }\r\n        }).then(response => {\r\n            console.log(title, body, category)\r\n            toast.success(`You have updated notes!`)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h3 id=\"note-name-header\"> {name}'s Notes </h3>\r\n            {notes.length ? (\r\n\r\n                <List>\r\n                    {notes.map(note => (\r\n                        <Accordion>\r\n                            <Card style={{width:'66rem'}}>\r\n                                <Card.Header>\r\n                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                                        <div className=\"note-title\">{note.title}</div>\r\n                                        <div className=\"note-category\" >{note.category}</div>\r\n                                        <div className=\"note-date\" >{convertDate(note.date)}</div>\r\n                                </Accordion.Toggle>\r\n                                </Card.Header>\r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                    <ListNote key={note._id}>\r\n                                        {\r\n                                            handleEditNotes(note.title, note.category, note.body, note.Lesson_id, note.date, note._id)\r\n                                        }\r\n                                    </ListNote>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                    ))}\r\n                </List>\r\n                ) : (\r\n                    <h3>You have no notes saved to your portfolio.</h3>\r\n                )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserNotes;\r\n"]},"metadata":{},"sourceType":"module"}
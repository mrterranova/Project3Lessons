{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\auth\\\\ResetPassword.js\";\nimport React, { useState, useEffect } from 'react';\nimport Layout from \"../core/Layout\";\nimport axios from 'axios';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst ResetPassword = ({\n  match\n}) => {\n  const _useState = useState({\n    name: '',\n    token: '',\n    newPassword: '',\n    email: '',\n    btnText: 'Update Password'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  useEffect(() => {\n    let token = match.params.token;\n  }, []);\n  const name = values.name,\n        email = values.email,\n        btnText = values.btnText;\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n    setValues(_objectSpread({}, values, {\n      btnText: \"Submitting\"\n    }));\n    axios({\n      method: \"PUT\",\n      url: process.env.REACT_APP_API + '/reset-password',\n      data: {\n        email\n      }\n    }).then(response => {\n      console.log(\"Reset Completed\", response);\n      toast.success(response.data.message);\n      setValues(_objectSpread({}, values, {\n        btnText: \"Completed Update\"\n      }));\n    }).catch(error => {\n      console.log('Error in reset password request', error.response.data);\n      setValues(_objectSpread({}, values, {\n        btnText: 'Update Password'\n      }));\n      toast.error(error.response.data.error);\n    });\n  };\n\n  const ResetPasswordForm = () => React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Email: \"), React.createElement(\"input\", {\n    onChange: handleChange('email'),\n    value: email,\n    type: \"email\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-warning\",\n    onClick: handleSubmitForm,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, btnText)));\n\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Reseting Password\"), ResetPasswordForm());\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/auth/ResetPassword.js"],"names":["React","useState","useEffect","Layout","axios","ToastContainer","toast","ResetPassword","match","name","token","newPassword","email","btnText","values","setValues","params","handleChange","event","target","value","handleSubmitForm","preventDefault","method","url","process","env","REACT_APP_API","data","then","response","console","log","success","message","catch","error","ResetPasswordForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Layout from \"../core/Layout\";\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\nconst ResetPassword = ({ match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        token: '', \r\n        newPassword: '',\r\n        email: '',\r\n        btnText: 'Update Password'\r\n    })\r\n\r\n    useEffect (() => {\r\n        let token = match.params.token\r\n    }, [])\r\n\r\n    const { name, email, btnText } = values\r\n\r\n    const handleChange = (name) => event => {\r\n        setValues({ ...values, [name]: event.target.value })\r\n    }\r\n\r\n    const handleSubmitForm = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, btnText: \"Submitting\" })\r\n            axios({\r\n                method: \"PUT\",\r\n                url: process.env.REACT_APP_API + '/reset-password',\r\n                data: {email}\r\n            }).then(response => {\r\n                console.log(\"Reset Completed\", response)\r\n                \r\n                toast.success(response.data.message)\r\n                setValues({...values, btnText: \"Completed Update\"})\r\n\r\n            }).catch(error => {\r\n                console.log('Error in reset password request', error.response.data)\r\n                setValues({ ...values, btnText: 'Update Password' });\r\n                toast.error(error.response.data.error)\r\n            })\r\n    }\r\n\r\n\r\n    const ResetPasswordForm = () => (\r\n        <form>\r\n            <div className=\"form-group\" >\r\n                <label className=\"text-muted\">Email: </label>\r\n                <input onChange={handleChange('email')} value={email} type=\"email\" className=\"form-control\" />\r\n            </div>\r\n            <div>\r\n                <button className=\"btn btn-warning\" onClick={handleSubmitForm} type=\"submit\">{btnText}</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n    return (\r\n        <Layout>\r\n            <ToastContainer />\r\n            <h1>Reseting Password</h1>\r\n            {ResetPasswordForm()}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\core\\\\pages\\\\Admin\\\\components\\\\ui\\\\Button.js\";\nimport React, { Component } from 'react';\nimport cx from 'classnames';\nimport autobind from 'class-autobind';\nimport styles from './Button.css';\nexport default class Button extends Component {\n  constructor() {\n    super(...arguments);\n    autobind(this);\n  }\n\n  render() {\n    let props = this.props;\n\n    let className = props.className,\n        isDisabled = props.isDisabled,\n        focusOnClick = props.focusOnClick,\n        formSubmit = props.formSubmit,\n        otherProps = _objectWithoutProperties(props, [\"className\", \"isDisabled\", \"focusOnClick\", \"formSubmit\"]);\n\n    className = cx(className, styles.root);\n    let onMouseDown = focusOnClick === false ? this._onMouseDownPreventDefault : props.onMouseDown;\n    let type = formSubmit ? 'submit' : 'button';\n    return React.createElement(\"button\", Object.assign({\n      type: type\n    }, otherProps, {\n      onMouseDown: onMouseDown,\n      className: className,\n      disabled: isDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), props.children);\n  }\n\n  _onMouseDownPreventDefault(event) {\n    event.preventDefault();\n    let onMouseDown = this.props.onMouseDown;\n\n    if (onMouseDown != null) {\n      onMouseDown(event);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/core/pages/Admin/components/ui/Button.js"],"names":["React","Component","cx","autobind","styles","Button","constructor","arguments","render","props","className","isDisabled","focusOnClick","formSubmit","otherProps","root","onMouseDown","_onMouseDownPreventDefault","type","children","event","preventDefault"],"mappings":";;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAaA,eAAe,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAG5CK,EAAAA,WAAW,GAAG;AACZ,UAAM,GAAGC,SAAT;AACAJ,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AAEDK,EAAAA,MAAM,GAAG;AAAA,QACFC,KADE,GACO,IADP,CACFA,KADE;;AAAA,QAEFC,SAFE,GAEgED,KAFhE,CAEFC,SAFE;AAAA,QAESC,UAFT,GAEgEF,KAFhE,CAESE,UAFT;AAAA,QAEqBC,YAFrB,GAEgEH,KAFhE,CAEqBG,YAFrB;AAAA,QAEmCC,UAFnC,GAEgEJ,KAFhE,CAEmCI,UAFnC;AAAA,QAEkDC,UAFlD,4BAEgEL,KAFhE;;AAGPC,IAAAA,SAAS,GAAGR,EAAE,CAACQ,SAAD,EAAYN,MAAM,CAACW,IAAnB,CAAd;AACA,QAAIC,WAAW,GAAIJ,YAAY,KAAK,KAAlB,GAA2B,KAAKK,0BAAhC,GAA6DR,KAAK,CAACO,WAArF;AACA,QAAIE,IAAI,GAAGL,UAAU,GAAG,QAAH,GAAc,QAAnC;AACA,WACE;AAAQ,MAAA,IAAI,EAAEK;AAAd,OAAwBJ,UAAxB;AAAoC,MAAA,WAAW,EAAEE,WAAjD;AAA8D,MAAA,SAAS,EAAEN,SAAzE;AAAoF,MAAA,QAAQ,EAAEC,UAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGF,KAAK,CAACU,QADT,CADF;AAKD;;AAEDF,EAAAA,0BAA0B,CAACG,KAAD,EAAe;AACvCA,IAAAA,KAAK,CAACC,cAAN;AADuC,QAElCL,WAFkC,GAEnB,KAAKP,KAFc,CAElCO,WAFkC;;AAGvC,QAAIA,WAAW,IAAI,IAAnB,EAAyB;AACvBA,MAAAA,WAAW,CAACI,KAAD,CAAX;AACD;AACF;;AA3B2C","sourcesContent":["/* @flow */\n\nimport React, {Component} from 'react';\nimport cx from 'classnames';\nimport autobind from 'class-autobind';\n\nimport styles from './Button.css';\n\ntype EventHandler = (event: Event) => any;\n\ntype Props = {\n  children?: ReactNode;\n  className?: string;\n  focusOnClick?: boolean;\n  formSubmit?: boolean;\n  isDisabled?: boolean;\n  onMouseDown?: EventHandler;\n};\n\nexport default class Button extends Component {\n  props: Props;\n\n  constructor() {\n    super(...arguments);\n    autobind(this);\n  }\n\n  render() {\n    let {props} = this;\n    let {className, isDisabled, focusOnClick, formSubmit, ...otherProps} = props;\n    className = cx(className, styles.root);\n    let onMouseDown = (focusOnClick === false) ? this._onMouseDownPreventDefault : props.onMouseDown;\n    let type = formSubmit ? 'submit' : 'button';\n    return (\n      <button type={type} {...otherProps} onMouseDown={onMouseDown} className={className} disabled={isDisabled}>\n        {props.children}\n      </button>\n    );\n  }\n\n  _onMouseDownPreventDefault(event: Event) {\n    event.preventDefault();\n    let {onMouseDown} = this.props;\n    if (onMouseDown != null) {\n      onMouseDown(event);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
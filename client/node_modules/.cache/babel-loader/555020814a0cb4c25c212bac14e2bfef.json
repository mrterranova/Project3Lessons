{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\core\\\\pages\\\\Admin\\\\components\\\\DraftLesson.js\";\nimport React from 'react';\nimport { RichUtils } from 'draft-js';\nimport { Blocks, Data } from './draft';\nimport request from 'superagent';\nimport createToolbarPlugin from 'draft-js-toolbar-plugin';\nexport default class DraftLesson extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.upload = (data, success, failed, progress) => {\n      console.log(data.formData);\n      request.post('/upload').accept('application/json').send(data.formData).on('progress', ({\n        percent\n      }) => {\n        progress(percent);\n      }).end((err, res) => {\n        if (err) {\n          return failed(err);\n        }\n\n        success(res.body.files, 'image');\n      });\n    };\n\n    this.defaultData = blockType => {\n      if (blockType === 'block-image') {\n        return {\n          url: '/whoa.jpg'\n        };\n      }\n\n      return {};\n    };\n\n    var _data = localStorage.getItem(\"data\");\n\n    var oldHash = localStorage.getItem(\"hash\");\n\n    var hash = this.hash = function (s) {\n      return s.split(\"\").reduce(function (a, b) {\n        a = (a << 5) - a + b.charCodeAt(0);\n        return a & a;\n      }, 0);\n    }(JSON.stringify(Data)) + '';\n\n    if (_data && oldHash === hash) {\n      try {\n        _data = JSON.parse(_data);\n      } catch (err) {\n        _data = null;\n        console.error(err);\n      }\n    } else {\n      _data = null;\n    }\n\n    this.state = {\n      data: _data || Data,\n      view: 'edit',\n      saved: false\n    };\n  }\n\n  save() {\n    localStorage.setItem(\"data\", JSON.stringify(this.state.data));\n    localStorage.setItem(\"hash\", this.hash);\n    this.setState({\n      saved: true\n    });\n    setTimeout(() => {\n      this.setState({\n        saved: false\n      });\n    }, 1500);\n  }\n\n  renderSide() {\n    return React.createElement(\"div\", {\n      className: \"sidepanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Drag & Drop one of these\"), Object.keys(Blocks).filter(key => key.indexOf('header-') !== 0 && key !== 'unstyled').concat(['block-image', 'block-table']).map(key => {\n      var startDrag = e => {\n        e.dataTransfer.dropEffect = 'move';\n        e.dataTransfer.setData(\"text\", 'DRAFTJS_BLOCK_TYPE:' + key);\n      };\n\n      return React.createElement(\"div\", {\n        key: key,\n        className: \"item\",\n        draggable: \"true\",\n        onDragStart: startDrag,\n        style: {\n          cursor: \"move\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, key);\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          view = _this$state.view,\n          saved = _this$state.saved;\n    return React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), this.renderSide(), React.createElement(\"div\", {\n      className: \"container-content\",\n      style: {\n        display: view === 'json' ? 'block' : 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"pre\", {\n      style: {\n        whiteSpace: 'pre-wrap',\n        width: '750px',\n        margin: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, JSON.stringify(data, null, 3))), React.createElement(\"div\", {\n      className: \"container-content\",\n      style: {\n        display: view !== 'json' ? 'block' : 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"TeXEditor-root\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"TeXEditor-editor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      onChange: data => this.setState({\n        data\n      }),\n      value: data,\n      blockTypes: Blocks,\n      cleanupTypes: \"*\",\n      sidebar: 0,\n      handleDefaultData: this.defaultData,\n      handleUpload: this.upload,\n      toolbar: {\n        disableItems: ['H5'],\n        textActions: [{\n          button: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, \"Quote\"),\n          label: 'Quote',\n          active: (block, editorState) => block.get('type') === 'blockquote',\n          toggle: (block, action, editorState, setEditorState) => setEditorState(RichUtils.toggleBlockType(editorState, 'blockquote'))\n        }]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/core/pages/Admin/components/DraftLesson.js"],"names":["React","RichUtils","Blocks","Data","request","createToolbarPlugin","DraftLesson","Component","constructor","props","upload","data","success","failed","progress","console","log","formData","post","accept","send","on","percent","end","err","res","body","files","defaultData","blockType","url","localStorage","getItem","oldHash","hash","s","split","reduce","a","b","charCodeAt","JSON","stringify","parse","error","state","view","saved","save","setItem","setState","setTimeout","renderSide","Object","keys","filter","key","indexOf","concat","map","startDrag","e","dataTransfer","dropEffect","setData","cursor","render","display","whiteSpace","width","margin","disableItems","textActions","button","label","active","block","editorState","get","toggle","action","setEditorState","toggleBlockType"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { RichUtils } from 'draft-js';\r\nimport { Blocks, Data } from './draft';\r\nimport request from 'superagent';\r\nimport createToolbarPlugin from 'draft-js-toolbar-plugin';\r\nexport default class DraftLesson extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        var data = localStorage.getItem(\"data\");\r\n        var oldHash = localStorage.getItem(\"hash\");\r\n        var hash = this.hash = function(s){\r\n            return s.split(\"\").reduce(function(a,b){a=((a<<5)-a)+b.charCodeAt(0);return a&a},0);\r\n        }(JSON.stringify(Data))+'';\r\n\r\n        if(data && oldHash === hash){\r\n            try{\r\n                data = JSON.parse(data);\r\n            }\r\n            catch(err){\r\n                data = null;\r\n                console.error(err);\r\n            }\r\n        }\r\n        else{\r\n            data = null;\r\n        }\r\n        this.state = {\r\n            data: data || Data,\r\n            view: 'edit',\r\n            saved: false\r\n        }\r\n    }\r\n\r\n    save(){\r\n        localStorage.setItem(\"data\", JSON.stringify(this.state.data));\r\n        localStorage.setItem(\"hash\", this.hash);\r\n\r\n        this.setState({\r\n            saved: true\r\n        });\r\n        setTimeout(()=>{\r\n            this.setState({\r\n                saved: false\r\n            });\r\n        }, 1500)\r\n    }\r\n\r\n    upload = (data, success, failed, progress) => {\r\n        console.log(data.formData);\r\n        request.post('/upload')\r\n            .accept('application/json')\r\n            .send(data.formData)\r\n            .on('progress', ({ percent }) => {\r\n                progress(percent);\r\n            })\r\n            .end((err, res) => {\r\n                if (err) {\r\n                    return failed(err);\r\n                }\r\n                success(res.body.files, 'image');\r\n            });\r\n    }\r\n\r\n    defaultData = (blockType) => {\r\n        if (blockType === 'block-image') {\r\n            return {\r\n                url: '/whoa.jpg',\r\n            }\r\n        }\r\n        return {};\r\n    }\r\n\r\n    renderSide(){\r\n       return (\r\n           <div className=\"sidepanel\">\r\n               <span className=\"info\">Drag & Drop one of these</span>\r\n               {Object.keys(Blocks).filter(key=>key.indexOf('header-')!==0&&key!=='unstyled').concat(['block-image', 'block-table']).map(key=> {\r\n                   var startDrag = (e)=>{\r\n                       e.dataTransfer.dropEffect = 'move';\r\n                       e.dataTransfer.setData(\"text\", 'DRAFTJS_BLOCK_TYPE:'+key);\r\n                   }\r\n                   return (\r\n                       <div key={key} className=\"item\" draggable=\"true\" onDragStart={startDrag} style={{cursor: \"move\"}}>\r\n                           {key}\r\n                       </div>\r\n                   )\r\n               })}\r\n           </div>\r\n       )\r\n    }\r\n    render() {\r\n        const {data, view, saved} = this.state;\r\n\r\n        return (\r\n            <div className=\"flex-container\">\r\n              <div className=\"head\">\r\n                </div>\r\n                {this.renderSide()}\r\n                <div className=\"container-content\" style={{display: view==='json' ? 'block' : 'none'}}>\r\n                    <pre style={{whiteSpace: 'pre-wrap', width: '750px', margin: 'auto'}}>{JSON.stringify(data, null, 3)}</pre>\r\n                </div>\r\n                <div className=\"container-content\" style={{display: view!=='json' ? 'block' : 'none'}}>\r\n                    <div className=\"TeXEditor-root\">\r\n                        <div className=\"TeXEditor-editor\">\r\n                            <Editor onChange={data=>this.setState({data})}\r\n                                    value={data}\r\n                                    blockTypes={Blocks}\r\n                                    cleanupTypes=\"*\"\r\n                                    sidebar={0}\r\n                                    handleDefaultData={this.defaultData}\r\n                                    handleUpload={this.upload}\r\n                                    toolbar={{\r\n                                      disableItems: ['H5'],\r\n                                      textActions: [\r\n                                      {\r\n                                        button: <span>Quote</span>,\r\n                                        label: 'Quote',\r\n                                        active: (block, editorState) => block.get('type') === 'blockquote',\r\n                                        toggle: (block, action, editorState, setEditorState) => setEditorState(RichUtils.toggleBlockType(\r\n                                          editorState,\r\n                                          'blockquote'\r\n                                        )),\r\n                                      }]\r\n                                    }}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\core\\\\pages\\\\Admin\\\\components\\\\ui\\\\Dropdown.js\";\nimport React, { Component } from 'react';\nimport autobind from 'class-autobind';\nimport cx from 'classnames';\nimport styles from './Dropdown.css';\nexport default class Dropdown extends Component {\n  constructor() {\n    super(...arguments);\n    autobind(this);\n  }\n\n  render() {\n    let _this$props = this.props,\n        choices = _this$props.choices,\n        selectedKey = _this$props.selectedKey,\n        className = _this$props.className,\n        otherProps = _objectWithoutProperties(_this$props, [\"choices\", \"selectedKey\", \"className\"]);\n\n    className = cx(className, styles.root);\n    let selectedItem = selectedKey == null ? null : choices.get(selectedKey);\n    let selectedValue = selectedItem && selectedItem.label || '';\n    return React.createElement(\"span\", {\n      className: className,\n      title: selectedValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"select\", Object.assign({}, otherProps, {\n      value: selectedKey,\n      onChange: this._onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), this._renderChoices()), React.createElement(\"span\", {\n      className: styles.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, selectedValue));\n  }\n\n  _onChange(event) {\n    let value = event.target.value;\n    this.props.onChange(value);\n  }\n\n  _renderChoices() {\n    let choices = this.props.choices;\n    let entries = Array.from(choices.entries());\n    return entries.map(([key, {\n      label,\n      className\n    }]) => React.createElement(\"option\", {\n      key: key,\n      value: key,\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, label));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/core/pages/Admin/components/ui/Dropdown.js"],"names":["React","Component","autobind","cx","styles","Dropdown","constructor","arguments","render","props","choices","selectedKey","className","otherProps","root","selectedItem","get","selectedValue","label","_onChange","_renderChoices","value","event","target","onChange","entries","Array","from","map","key"],"mappings":";;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAOC,MAAP,MAAmB,gBAAnB;AAcA,eAAe,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAG9CK,EAAAA,WAAW,GAAG;AACZ,UAAM,GAAGC,SAAT;AACAL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AAEDM,EAAAA,MAAM,GAAG;AAAA,sBACgD,KAAKC,KADrD;AAAA,QACFC,OADE,eACFA,OADE;AAAA,QACOC,WADP,eACOA,WADP;AAAA,QACoBC,SADpB,eACoBA,SADpB;AAAA,QACkCC,UADlC;;AAEPD,IAAAA,SAAS,GAAGT,EAAE,CAACS,SAAD,EAAYR,MAAM,CAACU,IAAnB,CAAd;AACA,QAAIC,YAAY,GAAIJ,WAAW,IAAI,IAAhB,GAAwB,IAAxB,GAA+BD,OAAO,CAACM,GAAR,CAAYL,WAAZ,CAAlD;AACA,QAAIM,aAAa,GAAGF,YAAY,IAAIA,YAAY,CAACG,KAA7B,IAAsC,EAA1D;AACA,WACE;AAAM,MAAA,SAAS,EAAEN,SAAjB;AAA4B,MAAA,KAAK,EAAEK,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,gDAAYJ,UAAZ;AAAwB,MAAA,KAAK,EAAEF,WAA/B;AAA4C,MAAA,QAAQ,EAAE,KAAKQ,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACG,KAAKC,cAAL,EADH,CADF,EAIE;AAAM,MAAA,SAAS,EAAEhB,MAAM,CAACiB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCJ,aAAhC,CAJF,CADF;AAQD;;AAEDE,EAAAA,SAAS,CAACG,KAAD,EAAgB;AACvB,QAAID,KAAa,GAAGC,KAAK,CAACC,MAAN,CAAaF,KAAjC;AACA,SAAKZ,KAAL,CAAWe,QAAX,CAAoBH,KAApB;AACD;;AAEDD,EAAAA,cAAc,GAAG;AAAA,QACVV,OADU,GACC,KAAKD,KADN,CACVC,OADU;AAEf,QAAIe,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAWjB,OAAO,CAACe,OAAR,EAAX,CAAd;AACA,WAAOA,OAAO,CAACG,GAAR,CAAY,CAAC,CAACC,GAAD,EAAM;AAACX,MAAAA,KAAD;AAAQN,MAAAA;AAAR,KAAN,CAAD,KACjB;AAAQ,MAAA,GAAG,EAAEiB,GAAb;AAAkB,MAAA,KAAK,EAAEA,GAAzB;AAA8B,MAAA,SAAS,EAAEjB,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqDM,KAArD,CADK,CAAP;AAGD;;AAlC6C","sourcesContent":["/* @flow */\nimport React, {Component} from 'react';\nimport autobind from 'class-autobind';\nimport cx from 'classnames';\n\nimport styles from './Dropdown.css';\n\ntype Choice = {\n  label: string;\n  className?: string;\n};\n\ntype Props = {\n  choices: Map<string, Choice>;\n  selectedKey: ?string;\n  onChange: (selectedKey: string) => any;\n  className?: string;\n};\n\nexport default class Dropdown extends Component {\n  props: Props;\n\n  constructor() {\n    super(...arguments);\n    autobind(this);\n  }\n\n  render() {\n    let {choices, selectedKey, className, ...otherProps} = this.props;\n    className = cx(className, styles.root);\n    let selectedItem = (selectedKey == null) ? null : choices.get(selectedKey);\n    let selectedValue = selectedItem && selectedItem.label || '';\n    return (\n      <span className={className} title={selectedValue}>\n        <select {...otherProps} value={selectedKey} onChange={this._onChange}>\n          {this._renderChoices()}\n        </select>\n        <span className={styles.value}>{selectedValue}</span>\n      </span>\n    );\n  }\n\n  _onChange(event: Object) {\n    let value: string = event.target.value;\n    this.props.onChange(value);\n  }\n\n  _renderChoices() {\n    let {choices} = this.props;\n    let entries = Array.from(choices.entries());\n    return entries.map(([key, {label, className}]) => (\n      <option key={key} value={key} className={className}>{label}</option>\n    ));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
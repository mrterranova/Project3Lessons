{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\core\\\\pages\\\\Admin\\\\components\\\\PracticeDraft.js\";\nimport React, { Component } from 'react';\nimport { EditorState, convertToRaw, ContentState, convertFromRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport { Accordion, Card } from 'react-bootstrap';\n\nclass PracticeDraft extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveContent = content => {\n      window.localStorage.setItem('content', JSON.stringify(convertToRaw(content)));\n    };\n\n    this.onEditorStateChange = editorState => {\n      const contentState = editorState.getCurrentContent();\n      this.saveContent(contentState);\n      this.setState({\n        editorState\n      });\n      console.log(contentState);\n    };\n\n    this.state = {};\n\n    const _content = window.localStorage.getItem('content');\n\n    if (_content) {\n      this.state.editorState = EditorState.createWithContent(convertFromRaw(JSON.parse(_content)));\n    } else {\n      this.state.editorState = EditorState.createEmpty();\n    }\n\n    const html = '';\n    const contentBlock = htmlToDraft(html);\n\n    if (contentBlock) {\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      const editorState = EditorState.createWithContent(contentState);\n      this.state = {\n        editorState\n      };\n    }\n  }\n\n  render() {\n    const editorState = this.state.editorState;\n    return React.createElement(\"div\", {\n      className: \"bodyText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Beginning information\"), React.createElement(Accordion.Collapse, {\n      eventKey: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Title of Lesson:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"keyTerms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"textBox\", {\n      type: \"text\",\n      name: \"scriptures\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Word Pad Lessons\"), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"editorState\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      editorState: editorState,\n      wrapperClassName: \"demo-wrapper\",\n      editorClassName: \"demo-editor\",\n      onEditorStateChange: this.onEditorStateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"HTML Raw Data\"), React.createElement(Accordion.Collapse, {\n      eventKey: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      style: {\n        width: '100%',\n        height: '40vh'\n      },\n      editorState: editorState,\n      onEditorStateChange: this.onEditorStateChange,\n      value: draftToHtml(convertToRaw(editorState.getCurrentContent())),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default PracticeDraft;","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/core/pages/Admin/components/PracticeDraft.js"],"names":["React","Component","EditorState","convertToRaw","ContentState","convertFromRaw","Editor","draftToHtml","htmlToDraft","Accordion","Card","PracticeDraft","constructor","props","saveContent","content","window","localStorage","setItem","JSON","stringify","onEditorStateChange","editorState","contentState","getCurrentContent","setState","console","log","state","getItem","createWithContent","parse","createEmpty","html","contentBlock","createFromBlockArray","contentBlocks","render","width","Header","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { EditorState, convertToRaw, ContentState, convertFromRaw } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg'; \r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport {Accordion, Card} from 'react-bootstrap';\r\n\r\n\r\nclass PracticeDraft extends Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this.state = { };\r\n            const content = window.localStorage.getItem('content');\r\n            if (content) {\r\n                this.state.editorState = EditorState.createWithContent(convertFromRaw(JSON.parse(content)));\r\n              } else {\r\n                this.state.editorState = EditorState.createEmpty();\r\n              }\r\n            \r\n            const html = '';\r\n            const contentBlock = htmlToDraft(html);\r\n            if (contentBlock) {\r\n              const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n              const editorState = EditorState.createWithContent(contentState);\r\n              this.state = {\r\n                  editorState,\r\n                };\r\n            }\r\n        }\r\n        \r\n\r\n          saveContent = (content) => {\r\n            window.localStorage.setItem('content', JSON.stringify(convertToRaw(content)));\r\n          }\r\n        \r\n    \r\n      onEditorStateChange: Function = (editorState) => {\r\n        const contentState = editorState.getCurrentContent();\r\n        this.saveContent(contentState);\r\n        this.setState({\r\n          editorState,\r\n        });\r\n        console.log(contentState)\r\n      };\r\n    \r\n      render() {\r\n\r\n        const { editorState } = this.state;\r\n        return (\r\n            <div className=\"bodyText\">\r\n<Accordion defaultActiveKey=\"0\" style={{ width: '100%'}}>\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n      Beginning information\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"1\">\r\n      <Card.Body>\r\n        <label for=\"title\">Title of Lesson:</label>\r\n      <input type=\"text\" name=\"title\" />\r\n      <input type=\"text\" name=\"keyTerms\" />\r\n      <textBox type=\"text\" name=\"scriptures\"></textBox>\r\n        </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n      Word Pad Lessons\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"0\">\r\n      <Card.Body>\r\n      <div className=\"editorState\">\r\n          <Editor\r\n            editorState={editorState}\r\n            wrapperClassName=\"demo-wrapper\"\r\n            editorClassName=\"demo-editor\"\r\n            onEditorStateChange={this.onEditorStateChange}\r\n          /></div>\r\n      </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n  <Card>\r\n    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n      HTML Raw Data\r\n    </Accordion.Toggle>\r\n    <Accordion.Collapse eventKey=\"1\">\r\n      <Card.Body>\r\n      <textarea\r\n          style={{width: '100%', height: '40vh'}}\r\n          editorState = {editorState}\r\n          onEditorStateChange ={this.onEditorStateChange}\r\n          value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n        />\r\n        </Card.Body>\r\n    </Accordion.Collapse>\r\n  </Card>\r\n</Accordion>\r\n        </div>\r\n        )\r\n      }\r\n}\r\n\r\nexport default PracticeDraft;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _draftJs = require('draft-js');\n\nvar _DraftOffsetKey = require('draft-js/lib/DraftOffsetKey');\n\nvar _DraftOffsetKey2 = _interopRequireDefault(_DraftOffsetKey);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Set selection of editor to next/previous block\n\n\nexports.default = function (getEditorState, setEditorState, mode, event) {\n  var editorState = getEditorState();\n  var selectionKey = editorState.getSelection().getAnchorKey();\n  var newActiveBlock = mode === 'up' ? editorState.getCurrentContent().getBlockBefore(selectionKey) : editorState.getCurrentContent().getBlockAfter(selectionKey);\n\n  if (newActiveBlock && newActiveBlock.get('key') === selectionKey) {\n    return;\n  }\n\n  if (newActiveBlock) {\n    // TODO verify that always a key-0-0 exists\n    var offsetKey = _DraftOffsetKey2.default.encode(newActiveBlock.getKey(), 0, 0);\n\n    var node = document.querySelectorAll('[data-offset-key=\"' + offsetKey + '\"]')[0]; // set the native selection to the node so the caret is not in the text and\n    // the selectionState matches the native selection\n\n    var selection = window.getSelection();\n    var range = document.createRange();\n    range.setStart(node, 0);\n    range.setEnd(node, 0);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    var offset = mode === 'up' ? newActiveBlock.getLength() : 0;\n    event.preventDefault();\n    setEditorState(_draftJs.EditorState.forceSelection(editorState, new _draftJs.SelectionState({\n      anchorKey: newActiveBlock.getKey(),\n      anchorOffset: offset,\n      focusKey: newActiveBlock.getKey(),\n      focusOffset: offset,\n      isBackward: false\n    })));\n  }\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/node_modules/draft-js-focus-plugin/lib/modifiers/setSelection.js"],"names":["Object","defineProperty","exports","value","_draftJs","require","_DraftOffsetKey","_DraftOffsetKey2","_interopRequireDefault","obj","__esModule","default","getEditorState","setEditorState","mode","event","editorState","selectionKey","getSelection","getAnchorKey","newActiveBlock","getCurrentContent","getBlockBefore","getBlockAfter","get","offsetKey","encode","getKey","node","document","querySelectorAll","selection","window","range","createRange","setStart","setEnd","removeAllRanges","addRange","offset","getLength","preventDefault","EditorState","forceSelection","SelectionState","anchorKey","anchorOffset","focusKey","focusOffset","isBackward"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,eAAe,GAAGD,OAAO,CAAC,6BAAD,CAA7B;;AAEA,IAAIE,gBAAgB,GAAGC,sBAAsB,CAACF,eAAD,CAA7C;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD,C,CAE/F;;;AACAP,OAAO,CAACS,OAAR,GAAkB,UAAUC,cAAV,EAA0BC,cAA1B,EAA0CC,IAA1C,EAAgDC,KAAhD,EAAuD;AACvE,MAAIC,WAAW,GAAGJ,cAAc,EAAhC;AACA,MAAIK,YAAY,GAAGD,WAAW,CAACE,YAAZ,GAA2BC,YAA3B,EAAnB;AACA,MAAIC,cAAc,GAAGN,IAAI,KAAK,IAAT,GAAgBE,WAAW,CAACK,iBAAZ,GAAgCC,cAAhC,CAA+CL,YAA/C,CAAhB,GAA+ED,WAAW,CAACK,iBAAZ,GAAgCE,aAAhC,CAA8CN,YAA9C,CAApG;;AAEA,MAAIG,cAAc,IAAIA,cAAc,CAACI,GAAf,CAAmB,KAAnB,MAA8BP,YAApD,EAAkE;AAChE;AACD;;AAED,MAAIG,cAAJ,EAAoB;AAClB;AACA,QAAIK,SAAS,GAAGlB,gBAAgB,CAACI,OAAjB,CAAyBe,MAAzB,CAAgCN,cAAc,CAACO,MAAf,EAAhC,EAAyD,CAAzD,EAA4D,CAA5D,CAAhB;;AACA,QAAIC,IAAI,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,uBAAuBL,SAAvB,GAAmC,IAA7D,EAAmE,CAAnE,CAAX,CAHkB,CAIlB;AACA;;AACA,QAAIM,SAAS,GAAGC,MAAM,CAACd,YAAP,EAAhB;AACA,QAAIe,KAAK,GAAGJ,QAAQ,CAACK,WAAT,EAAZ;AACAD,IAAAA,KAAK,CAACE,QAAN,CAAeP,IAAf,EAAqB,CAArB;AACAK,IAAAA,KAAK,CAACG,MAAN,CAAaR,IAAb,EAAmB,CAAnB;AACAG,IAAAA,SAAS,CAACM,eAAV;AACAN,IAAAA,SAAS,CAACO,QAAV,CAAmBL,KAAnB;AAEA,QAAIM,MAAM,GAAGzB,IAAI,KAAK,IAAT,GAAgBM,cAAc,CAACoB,SAAf,EAAhB,GAA6C,CAA1D;AACAzB,IAAAA,KAAK,CAAC0B,cAAN;AACA5B,IAAAA,cAAc,CAACT,QAAQ,CAACsC,WAAT,CAAqBC,cAArB,CAAoC3B,WAApC,EAAiD,IAAIZ,QAAQ,CAACwC,cAAb,CAA4B;AAC1FC,MAAAA,SAAS,EAAEzB,cAAc,CAACO,MAAf,EAD+E;AAE1FmB,MAAAA,YAAY,EAAEP,MAF4E;AAG1FQ,MAAAA,QAAQ,EAAE3B,cAAc,CAACO,MAAf,EAHgF;AAI1FqB,MAAAA,WAAW,EAAET,MAJ6E;AAK1FU,MAAAA,UAAU,EAAE;AAL8E,KAA5B,CAAjD,CAAD,CAAd;AAOD;AACF,CAhCD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _draftJs = require('draft-js');\n\nvar _DraftOffsetKey = require('draft-js/lib/DraftOffsetKey');\n\nvar _DraftOffsetKey2 = _interopRequireDefault(_DraftOffsetKey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Set selection of editor to next/previous block\nexports.default = function (getEditorState, setEditorState, mode, event) {\n  var editorState = getEditorState();\n  var selectionKey = editorState.getSelection().getAnchorKey();\n  var newActiveBlock = mode === 'up' ? editorState.getCurrentContent().getBlockBefore(selectionKey) : editorState.getCurrentContent().getBlockAfter(selectionKey);\n\n  if (newActiveBlock && newActiveBlock.get('key') === selectionKey) {\n    return;\n  }\n\n  if (newActiveBlock) {\n    // TODO verify that always a key-0-0 exists\n    var offsetKey = _DraftOffsetKey2.default.encode(newActiveBlock.getKey(), 0, 0);\n    var node = document.querySelectorAll('[data-offset-key=\"' + offsetKey + '\"]')[0];\n    // set the native selection to the node so the caret is not in the text and\n    // the selectionState matches the native selection\n    var selection = window.getSelection();\n    var range = document.createRange();\n    range.setStart(node, 0);\n    range.setEnd(node, 0);\n    selection.removeAllRanges();\n    selection.addRange(range);\n\n    var offset = mode === 'up' ? newActiveBlock.getLength() : 0;\n    event.preventDefault();\n    setEditorState(_draftJs.EditorState.forceSelection(editorState, new _draftJs.SelectionState({\n      anchorKey: newActiveBlock.getKey(),\n      anchorOffset: offset,\n      focusKey: newActiveBlock.getKey(),\n      focusOffset: offset,\n      isBackward: false\n    })));\n  }\n};"]},"metadata":{},"sourceType":"script"}
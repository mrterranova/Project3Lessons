{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\core\\\\pages\\\\Lesson\\\\UserOptions.js\";\nimport React, { useState, useEffect, Fragment } from 'react'; // import Layout from '../core/Layout';\n\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { Link } from 'react-router-dom';\nimport { isAuth, getCookie } from '../../../auth/helpers';\n\nconst UserNotes = ({\n  history\n}) => {\n  const _useState = useState({\n    title: \"\",\n    category: \"\",\n    body: \"\",\n    UserId: \"\",\n    isBookmarked: false,\n    LessonId: \"\",\n    bookcategory: \"\",\n    NoteId: \"\",\n    hasNote: false,\n    showHideEdit: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const token = getCookie('token');\n  useEffect(() => {\n    loadProfile();\n  }, []);\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      title: title,\n      category: category,\n      body: body,\n      bookcategory: bookcategory,\n      [name]: event.target.value\n    }));\n  };\n\n  const loadProfile = () => {\n    //grabbing the URL from the window\n    const URLarray = window.document.URL.split(\"/\");\n    const URLarrVar = URLarray[URLarray.length - 1];\n    const URL_id = URLarrVar.split(\"?\"); //GET the correct logged user\n\n    axios({\n      method: 'GET',\n      url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      //set all the values of the user\n      console.log(\"URLid\", URL_id[0]);\n      console.log(response.data._id);\n\n      if (response.data.notes.length === 0) {//if the user has notes identify if there are notes that belong to this lesson\n      } else {\n        response.data.notes.map(note => {\n          if (note.Lesson_id === URL_id[0]) {\n            setValues(_objectSpread({}, values, {\n              NoteId: note._id,\n              title: note.title,\n              category: note.category,\n              body: note.body\n            })); //notes that do not belong to this lesson are reported in console.\n          }\n        });\n      } // //if the user has 0 bookmarks return nothing\n      // if (response.data.bookmarks.length === 0) {\n      //     console.log(\"Lesson was not bookmarked\")\n      //     //if the user has bookmarks identify if there are bookmarks that belong to this lesson\n      // } else {\n      //     response.data.bookmarks.map( bookmark => {\n      //         if (response.data.bookmark.Lesson_id === LessonId) {\n      //             setValues({ ...values, bookcategory: bookmark.category, isBookmarked: true, UserId: response.data._id})\n      //             //bookmakrs that belong to this lesson are reported in console.\n      //         }\n      //     })\n      // }\n\n    });\n  };\n\n  const UserId = values.UserId,\n        title = values.title,\n        category = values.category,\n        body = values.body,\n        bookcategory = values.bookcategory,\n        NoteId = values.NoteId; //show notes in form\n\n  const handleEditNotes = () => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Title: \" + title,\n      onChange: handleChange('title'),\n      type: \"text\",\n      name: \"title\",\n      className: \"form-control\",\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"Category: \" + category,\n      onChange: handleChange('category'),\n      name: \"category\",\n      type: \"text\",\n      className: \"form-control\",\n      id: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: \"note-textbox\",\n      onChange: handleChange('body'),\n      id: \"bodyNotes\",\n      name: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, body), React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => handleSubmitEdit(),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Submit Edit\")), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning deleteNote-btn\",\n      onClick: () => RemoveNote(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Delete Note\"));\n  }; //convert to date\n\n\n  const convertDate = date => {\n    let arr1 = date.split(\"T\");\n    let arr2 = arr1[0].split(\"-\");\n    let dateyear = arr2[2] + \", \" + arr2[0];\n\n    switch (arr2[1]) {\n      case '01':\n        return \"Jan. \" + dateyear;\n        break;\n\n      case '02':\n        return \"Feb. \" + dateyear;\n        break;\n\n      case '03':\n        return \"March \" + dateyear;\n        break;\n\n      case '04':\n        return \"Apr. \" + dateyear;\n        break;\n\n      case '05':\n        return \"May \" + dateyear;\n        break;\n\n      case '06':\n        return \"June \" + dateyear;\n        break;\n\n      case '07':\n        return \"July \" + dateyear;\n        break;\n\n      case '08':\n        return \"Aug. \" + dateyear;\n        break;\n\n      case '09':\n        return \"Sept. \" + dateyear;\n        break;\n\n      case '10':\n        return \"Oct. \" + dateyear;\n        break;\n\n      case '11':\n        return \"Nov. \" + dateyear;\n        break;\n\n      case '12':\n        return \"Dec. \" + dateyear;\n        break;\n    }\n  };\n\n  const RemoveNote = Note_id => {\n    axios({\n      method: 'DELETE',\n      url: `${process.env.REACT_APP_API}/notes/` + Note_id,\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(response => {\n      console.log('Note was deleted', response);\n    });\n  }; //handle all edits to the notes as a POST\n\n\n  const handleSubmitEdit = () => {\n    const URLarray = window.document.URL.split(\"/\");\n    const URLarrVar = URLarray[URLarray.length - 1];\n    const URL_id = URLarrVar.split(\"?\");\n    console.log(URL_id[0]);\n    console.log(UserId);\n    console.log(title, body, category);\n    alert(\"stop\");\n    axios({\n      method: \"POST\",\n      url: process.env.REACT_APP_API + '/user/note/' + URL_id[0],\n      headers: {\n        Authorization: 'Bearer ' + token\n      },\n      data: {\n        Lesson_id: URL_id[0],\n        title: title,\n        category: category,\n        body: body,\n        User_id: UserId\n      }\n    }).then(response => {\n      console.log(title, body, category);\n      alert(\"Never stop!\");\n    });\n  }; //toggle to show notes\n\n\n  const getUserNote = () => {\n    console.log(\"You are looking for the notes!\");\n  }; //toggle to addBookmark\n\n\n  const addBookmark = () => {\n    console.log(\"Bookmark time!\");\n  }; //form for handling the note changes\n\n\n  const takeNotes = noteBody => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Title: \" + title,\n      onChange: handleChange('title'),\n      type: \"text\",\n      name: \"title\",\n      className: \"form-control\",\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"Category: \" + category,\n      onChange: handleChange('category'),\n      name: \"category\",\n      type: \"text\",\n      className: \"form-control\",\n      id: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: \"note-textbox\",\n      onChange: handleChange('body'),\n      id: \"bodyNotes\",\n      name: \"body\",\n      placeholder: noteBody.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => handleSubmitEdit(),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Submit Edit\")), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning deleteNote-btn\",\n      onClick: () => RemoveNote(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Delete Note\"));\n  }; // what the user is viewing\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"noteContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, UserId, takeNotes({\n    body\n  }, {\n    UserId\n  })), React.createElement(\"img\", {\n    src: '/images/notes.png',\n    onClick: getUserNote,\n    alt: \"notes\",\n    id: \"notesLessons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }));\n};\n\nexport default UserNotes;","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/core/pages/Lesson/UserOptions.js"],"names":["React","useState","useEffect","Fragment","axios","Link","isAuth","getCookie","UserNotes","history","title","category","body","UserId","isBookmarked","LessonId","bookcategory","NoteId","hasNote","showHideEdit","values","setValues","token","loadProfile","handleChange","name","event","target","value","URLarray","window","document","URL","split","URLarrVar","length","URL_id","method","url","process","env","REACT_APP_API","_id","headers","Authorization","then","response","console","log","data","notes","map","note","Lesson_id","handleEditNotes","handleSubmitEdit","RemoveNote","convertDate","date","arr1","arr2","dateyear","Note_id","alert","User_id","getUserNote","addBookmark","takeNotes","noteBody"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\r\n// import Layout from '../core/Layout';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { isAuth, getCookie } from '../../../auth/helpers';\r\n\r\n\r\n\r\nconst UserNotes = ({ history }) => {\r\n    const [values, setValues] = useState({\r\n        title: \"\",\r\n        category: \"\",\r\n        body: \"\",\r\n        UserId: \"\",\r\n        isBookmarked: false,\r\n        LessonId: \"\",\r\n        bookcategory: \"\",\r\n        NoteId: \"\",\r\n        hasNote: false,\r\n        showHideEdit: false\r\n    });\r\n\r\n    \r\n\r\n    const token = getCookie('token');\r\n\r\n    useEffect(() => {\r\n        loadProfile();\r\n    }, []);\r\n\r\n    const handleChange = (name) => event => {\r\n        setValues({ ...values, title: title, category: category, body: body, bookcategory: bookcategory, [name]: event.target.value })\r\n    }\r\n\r\n    const loadProfile = () => {\r\n        //grabbing the URL from the window\r\n        const URLarray = window.document.URL.split(\"/\")\r\n        const URLarrVar = URLarray[URLarray.length-1]\r\n        const URL_id = URLarrVar.split(\"?\")\r\n\r\n        //GET the correct logged user\r\n        axios({\r\n            method: 'GET',\r\n            url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then(response => {\r\n            //set all the values of the user\r\n            console.log(\"URLid\", URL_id[0])\r\n            console.log(response.data._id)\r\n\r\n                if(response.data.notes.length === 0) {\r\n                    //if the user has notes identify if there are notes that belong to this lesson\r\n                } else { \r\n                    response.data.notes.map ( note => {\r\n                        if (note.Lesson_id === URL_id[0]){\r\n                            setValues({...values, NoteId : note._id, title: note.title, category: note.category, body: note.body})\r\n                            //notes that do not belong to this lesson are reported in console.\r\n                        } \r\n                    })\r\n                }\r\n                // //if the user has 0 bookmarks return nothing\r\n                // if (response.data.bookmarks.length === 0) {\r\n                //     console.log(\"Lesson was not bookmarked\")\r\n                //     //if the user has bookmarks identify if there are bookmarks that belong to this lesson\r\n                // } else {\r\n                //     response.data.bookmarks.map( bookmark => {\r\n                //         if (response.data.bookmark.Lesson_id === LessonId) {\r\n                //             setValues({ ...values, bookcategory: bookmark.category, isBookmarked: true, UserId: response.data._id})\r\n                //             //bookmakrs that belong to this lesson are reported in console.\r\n                //         }\r\n                //     })\r\n                // }\r\n                \r\n            })\r\n    };\r\n\r\n    const { UserId, title, category, body, bookcategory, NoteId } = values;\r\n\r\n    //show notes in form\r\n    const handleEditNotes = () => {\r\n        return (\r\n                <div>\r\n                    <form>\r\n                        <input placeholder={\"Title: \" + title} onChange={handleChange('title')} type=\"text\" name=\"title\" className=\"form-control\" id=\"title\"></input>\r\n                        <input placeholder={\"Category: \" + category} onChange={handleChange('category')} name=\"category\" type=\"text\" className=\"form-control\" id=\"category\"></input>\r\n                        <textarea className='note-textbox' onChange={handleChange('body')} id=\"bodyNotes\" name=\"body\">{body}</textarea>\r\n                        <button className=\"btn btn-warning\" onClick={() => handleSubmitEdit()} type=\"submit\">Submit Edit</button>\r\n                    </form>\r\n                    <button type=\"button\" className=\"btn btn-warning deleteNote-btn\" onClick={() => RemoveNote()}>Delete Note</button>\r\n                </div>\r\n        )\r\n    }\r\n\r\n    //convert to date\r\n    const convertDate = (date) => {\r\n        let arr1 = date.split(\"T\")\r\n        let arr2 = arr1[0].split(\"-\")\r\n        let dateyear = arr2[2] + \", \" + arr2[0];\r\n        switch (arr2[1]) {\r\n            case '01': return \"Jan. \" + dateyear;\r\n                break;\r\n            case '02': return \"Feb. \" + dateyear;\r\n                break;\r\n            case '03': return \"March \" + dateyear;\r\n                break;\r\n            case '04': return \"Apr. \" + dateyear;\r\n                break;\r\n            case '05': return \"May \" + dateyear;\r\n                break;\r\n            case '06': return \"June \" + dateyear;\r\n                break;\r\n            case '07': return \"July \" + dateyear;\r\n                break;\r\n            case '08': return \"Aug. \" + dateyear;\r\n                break;\r\n            case '09': return \"Sept. \" + dateyear;\r\n                break;\r\n            case '10': return \"Oct. \" + dateyear;\r\n                break;\r\n            case '11': return \"Nov. \" + dateyear;\r\n                break;\r\n            case '12': return \"Dec. \" + dateyear;\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    const RemoveNote = (Note_id) => {\r\n        axios({\r\n            method: 'DELETE',\r\n            url: `${process.env.REACT_APP_API}/notes/` + Note_id,\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n            .then(response => {\r\n                console.log('Note was deleted', response);\r\n            });\r\n    }\r\n\r\n    //handle all edits to the notes as a POST\r\n    const handleSubmitEdit = () => {\r\n        const URLarray = window.document.URL.split(\"/\")\r\n        const URLarrVar = URLarray[URLarray.length-1]\r\n        const URL_id = URLarrVar.split(\"?\")\r\n        console.log(URL_id[0])\r\n        console.log(UserId)\r\n        console.log(title, body, category)\r\n        alert(\"stop\")  \r\n        axios({\r\n            method: \"POST\",\r\n            url: process.env.REACT_APP_API + '/user/note/'+ URL_id[0],\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            },\r\n            data: { Lesson_id: URL_id[0], title: title, category: category, body: body, User_id: UserId }\r\n        }).then(response => {\r\n            console.log(title, body, category)\r\n            alert(\"Never stop!\")\r\n        })\r\n    }\r\n\r\n//toggle to show notes\r\n    const getUserNote = () =>{\r\n        console.log(\"You are looking for the notes!\")\r\n    }\r\n \r\n    //toggle to addBookmark\r\n    const addBookmark = () =>{\r\n        console.log(\"Bookmark time!\")\r\n    }\r\n\r\n//form for handling the note changes\r\n    const takeNotes = (noteBody) => {\r\n\r\n        return (\r\n        <div>\r\n            <form>\r\n                <input placeholder={\"Title: \"+ title } onChange={handleChange('title')} type=\"text\" name=\"title\" className=\"form-control\" id=\"title\"></input>\r\n                <input placeholder={\"Category: \"+ category} onChange={handleChange('category')} name=\"category\" type=\"text\" className=\"form-control\" id=\"category\"></input>\r\n                <textarea className='note-textbox' onChange={handleChange('body')} id=\"bodyNotes\" name=\"body\" placeholder={noteBody.body}></textarea>\r\n            \r\n                <button className=\"btn btn-warning\" onClick={() => handleSubmitEdit()} type=\"submit\">Submit Edit</button>\r\n            </form>\r\n            <button type=\"button\" className=\"btn btn-warning deleteNote-btn\" onClick={() => RemoveNote()}>Delete Note</button>\r\n        </div>\r\n        )\r\n       }\r\n// what the user is viewing\r\n    return (\r\n        <div>\r\n        <div className=\"noteContainer\">\r\n            {UserId}\r\n            {takeNotes({body}, {UserId})}\r\n        </div>\r\n         <img src={'/images/notes.png'} onClick={getUserNote} alt=\"notes\" id=\"notesLessons\" />\r\n        </div>\r\n        );\r\n    };\r\n\r\n    export default UserNotes;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\core\\\\pages\\\\Lesson\\\\UserOptions.js\";\nimport React, { useState, useEffect, Fragment } from 'react'; // import Layout from '../core/Layout';\n\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { Link } from 'react-router-dom';\nimport { isAuth, getCookie } from '../../../auth/helpers';\n\nconst UserNotes = ({\n  history\n}, props) => {\n  const _useState = useState({\n    notes: [],\n    title: \"\",\n    category: \"\",\n    body: \"\",\n    _id: \"\",\n    showHideEdit: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const token = getCookie('token');\n  useEffect(() => {\n    loadProfile();\n  }, []);\n\n  const handleChange = name => event => {\n    console.log(name);\n    setValues(_objectSpread({}, values, {\n      title: title,\n      category: category,\n      body: body,\n      [name]: event.target.value\n    }));\n    console.log(title, body, category);\n  };\n\n  const loadProfile = () => {\n    console.log(window.document.URL);\n    const URLarray = window.document.URL.split(\"/\");\n    const URL_id = URLarray[URLarray.length - 1];\n    axios({\n      method: 'GET',\n      url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      console.log(\"PARAMS\");\n      console.log();\n      const _response$data = response.data,\n            role = _response$data.role,\n            name = _response$data.name,\n            email = _response$data.email,\n            notes = _response$data.notes,\n            _id = _response$data._id;\n      setValues(_objectSpread({}, values, {\n        role,\n        name,\n        email,\n        notes,\n        _id\n      }));\n\n      if (response.data.notes.length === 0) {\n        console.log(\"You have no notes in this lesson\");\n      } else {\n        response.data.notes.map(note => {\n          if (note.Lesson_id === URL_id) {\n            setValues(_objectSpread({}, values, {\n              title,\n              category,\n              body\n            }));\n          } else {\n            console.log(\"No notes for this section\");\n          }\n        });\n      }\n    });\n  };\n\n  const name = values.name,\n        notes = values.notes,\n        title = values.title,\n        body = values.body,\n        category = values.category,\n        _id = values._id; //show notes in form\n\n  const handleEditNotes = (noteTitle, noteCategory, noteBody, noteLink, noteDate, noteId) => {\n    handleChange(noteTitle, noteBody, noteCategory);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Title: \" + noteTitle,\n      onChange: handleChange('title'),\n      type: \"text\",\n      name: \"title\",\n      className: \"form-control\",\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"nav-link\",\n      to: '/lesson/' + noteLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Click to go to lesson...\"), React.createElement(\"input\", {\n      placeholder: \"Category: \" + noteCategory,\n      onChange: handleChange('category'),\n      name: \"category\",\n      type: \"text\",\n      className: \"form-control\",\n      id: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: \"note-textbox\",\n      onChange: handleChange('body'),\n      id: \"bodyNotes\",\n      name: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, noteBody), React.createElement(\"div\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Created on: \", convertDate(noteDate)), React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => handleSubmitEdit(noteId, noteLink),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Submit Edit\"))), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning deleteNote-btn\",\n      onClick: () => RemoveNote(noteId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Delete Note\"));\n  }; //convert to date\n\n\n  const convertDate = date => {\n    let arr1 = date.split(\"T\");\n    let arr2 = arr1[0].split(\"-\");\n    let dateyear = arr2[2] + \", \" + arr2[0];\n\n    switch (arr2[1]) {\n      case '01':\n        return \"Jan. \" + dateyear;\n        break;\n\n      case '02':\n        return \"Feb. \" + dateyear;\n        break;\n\n      case '03':\n        return \"March \" + dateyear;\n        break;\n\n      case '04':\n        return \"Apr. \" + dateyear;\n        break;\n\n      case '05':\n        return \"May \" + dateyear;\n        break;\n\n      case '06':\n        return \"June \" + dateyear;\n        break;\n\n      case '07':\n        return \"July \" + dateyear;\n        break;\n\n      case '08':\n        return \"Aug. \" + dateyear;\n        break;\n\n      case '09':\n        return \"Sept. \" + dateyear;\n        break;\n\n      case '10':\n        return \"Oct. \" + dateyear;\n        break;\n\n      case '11':\n        return \"Nov. \" + dateyear;\n        break;\n\n      case '12':\n        return \"Dec. \" + dateyear;\n        break;\n    }\n  };\n\n  const RemoveNote = Note_id => {\n    axios({\n      method: 'DELETE',\n      url: `${process.env.REACT_APP_API}/notes/` + Note_id,\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(response => {\n      console.log('Note was deleted', response);\n    });\n  };\n\n  const handleSubmitEdit = (Note_id, lessonLink) => {\n    axios({\n      method: \"POST\",\n      url: process.env.REACT_APP_API + '/notes/' + Note_id,\n      headers: {\n        Authorization: 'Bearer ' + token\n      },\n      data: {\n        User_id: _id\n      }\n    }).then(response => {\n      console.log(title, body, category);\n    });\n  };\n\n  const getUserNote = () => {\n    console.log(\"You are looking for the notes!\");\n  };\n\n  const addBookmark = () => {\n    console.log(\"Bookmark time!\");\n  };\n\n  const takeNotes = () => {//     <Fragment>\n    //     <div>\n    //         <form>\n    //             <input placeholder={\"Title: \" } onChange={handleChange('title')} type=\"text\" name=\"title\" className=\"form-control\" id=\"title\"></input>\n    //             <input placeholder={\"Category: \"} onChange={handleChange('category')} name=\"category\" type=\"text\" className=\"form-control\" id=\"category\"></input>\n    //             <textarea className='note-textbox' onChange={handleChange('body')} id=\"bodyNotes\" name=\"body\"></textarea>\n    //             <button className=\"btn btn-warning\" onClick={() => handleSubmitEdit()} type=\"submit\">Submit Edit</button>\n    //         </form>\n    //     </div>\n    //     <button type=\"button\" className=\"btn btn-warning deleteNote-btn\" onClick={() => RemoveNote()}>Delete Note</button>\n    // </Fragment>\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"noteContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, title), React.createElement(\"img\", {\n    src: '/images/notes.png',\n    onClick: getUserNote,\n    alt: \"notes\",\n    id: \"notesLessons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: '/images/bookmark.png',\n    onClick: addBookmark,\n    alt: \"bookmark\",\n    id: \"bookmarkLessons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }));\n};\n\nexport default UserNotes;","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/core/pages/Lesson/UserOptions.js"],"names":["React","useState","useEffect","Fragment","axios","Link","isAuth","getCookie","UserNotes","history","props","notes","title","category","body","_id","showHideEdit","values","setValues","token","loadProfile","handleChange","name","event","console","log","target","value","window","document","URL","URLarray","split","URL_id","length","method","url","process","env","REACT_APP_API","headers","Authorization","then","response","data","role","email","map","note","Lesson_id","handleEditNotes","noteTitle","noteCategory","noteBody","noteLink","noteDate","noteId","convertDate","handleSubmitEdit","RemoveNote","date","arr1","arr2","dateyear","Note_id","lessonLink","User_id","getUserNote","addBookmark","takeNotes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\r\n// import Layout from '../core/Layout';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { isAuth, getCookie } from '../../../auth/helpers';\r\n\r\n\r\n\r\nconst UserNotes = ({ history }, props) => {\r\n    const [values, setValues] = useState({\r\n        notes: [],\r\n        title: \"\",\r\n        category: \"\",\r\n        body: \"\",\r\n        _id: \"\",\r\n        showHideEdit: false\r\n    });\r\n\r\n    \r\n\r\n    const token = getCookie('token');\r\n\r\n    useEffect(() => {\r\n        loadProfile();\r\n    }, []);\r\n\r\n    const handleChange = (name) => event => {\r\n        console.log(name)\r\n        setValues({ ...values, title: title, category: category, body: body, [name]: event.target.value })\r\n        console.log(title, body, category)\r\n    }\r\n\r\n    const loadProfile = () => {\r\n        console.log(window.document.URL)\r\n        const URLarray = window.document.URL.split(\"/\")\r\n        const URL_id = URLarray[URLarray.length-1]\r\n        axios({\r\n            method: 'GET',\r\n            url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                console.log(\"PARAMS\")\r\n                console.log( )\r\n                const { role, name, email, notes, _id } = response.data;\r\n                setValues({ ...values, role, name, email, notes, _id});\r\n\r\n                if(response.data.notes.length === 0) {\r\n                    console.log(\"You have no notes in this lesson\")\r\n                } else { \r\n                    response.data.notes.map ( note => {\r\n                        if (note.Lesson_id === URL_id){\r\n                            setValues({...values, title, category, body})\r\n                        } else {\r\n                            console.log(\"No notes for this section\")\r\n                        }\r\n                    })\r\n                }\r\n                \r\n            })\r\n    };\r\n\r\n    const { name, notes, title, body, category, _id } = values;\r\n\r\n    //show notes in form\r\n    const handleEditNotes = (noteTitle, noteCategory, noteBody, noteLink, noteDate, noteId) => {\r\n        handleChange(noteTitle,noteBody,noteCategory);\r\n        return (\r\n            <Fragment>\r\n                <div>\r\n                    <form>\r\n                        <input placeholder={\"Title: \" + noteTitle} onChange={handleChange('title')} type=\"text\" name=\"title\" className=\"form-control\" id=\"title\"></input>\r\n                        <Link className=\"nav-link\" to={'/lesson/' + noteLink}>Click to go to lesson...</Link>\r\n                        <input placeholder={\"Category: \" + noteCategory} onChange={handleChange('category')} name=\"category\" type=\"text\" className=\"form-control\" id=\"category\"></input>\r\n                        <textarea className='note-textbox' onChange={handleChange('body')} id=\"bodyNotes\" name=\"body\">{noteBody}</textarea>\r\n                        <div className='date'>Created on: {convertDate(noteDate)}</div>\r\n                        <button className=\"btn btn-warning\" onClick={() => handleSubmitEdit(noteId, noteLink)} type=\"submit\">Submit Edit</button>\r\n                    </form>\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-warning deleteNote-btn\" onClick={() => RemoveNote(noteId)}>Delete Note</button>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    //convert to date\r\n    const convertDate = (date) => {\r\n        let arr1 = date.split(\"T\")\r\n        let arr2 = arr1[0].split(\"-\")\r\n        let dateyear = arr2[2] + \", \" + arr2[0];\r\n        switch (arr2[1]) {\r\n            case '01': return \"Jan. \" + dateyear;\r\n                break;\r\n            case '02': return \"Feb. \" + dateyear;\r\n                break;\r\n            case '03': return \"March \" + dateyear;\r\n                break;\r\n            case '04': return \"Apr. \" + dateyear;\r\n                break;\r\n            case '05': return \"May \" + dateyear;\r\n                break;\r\n            case '06': return \"June \" + dateyear;\r\n                break;\r\n            case '07': return \"July \" + dateyear;\r\n                break;\r\n            case '08': return \"Aug. \" + dateyear;\r\n                break;\r\n            case '09': return \"Sept. \" + dateyear;\r\n                break;\r\n            case '10': return \"Oct. \" + dateyear;\r\n                break;\r\n            case '11': return \"Nov. \" + dateyear;\r\n                break;\r\n            case '12': return \"Dec. \" + dateyear;\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    const RemoveNote = (Note_id) => {\r\n        axios({\r\n            method: 'DELETE',\r\n            url: `${process.env.REACT_APP_API}/notes/` + Note_id,\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n            .then(response => {\r\n                console.log('Note was deleted', response);\r\n            });\r\n    }\r\n\r\n    const handleSubmitEdit = (Note_id, lessonLink) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: process.env.REACT_APP_API + '/notes/'+ Note_id,\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            },\r\n            data: { User_id: _id }\r\n        }).then(response => {\r\n            console.log(title, body, category)\r\n        })\r\n    }\r\n\r\n\r\n    const getUserNote = () =>{\r\n        console.log(\"You are looking for the notes!\")\r\n    }\r\n \r\n    const addBookmark = () =>{\r\n        console.log(\"Bookmark time!\")\r\n    }\r\n\r\n    const takeNotes = () => {\r\n\r\n    //     <Fragment>\r\n    //     <div>\r\n    //         <form>\r\n    //             <input placeholder={\"Title: \" } onChange={handleChange('title')} type=\"text\" name=\"title\" className=\"form-control\" id=\"title\"></input>\r\n    //             <input placeholder={\"Category: \"} onChange={handleChange('category')} name=\"category\" type=\"text\" className=\"form-control\" id=\"category\"></input>\r\n    //             <textarea className='note-textbox' onChange={handleChange('body')} id=\"bodyNotes\" name=\"body\"></textarea>\r\n    //             <button className=\"btn btn-warning\" onClick={() => handleSubmitEdit()} type=\"submit\">Submit Edit</button>\r\n    //         </form>\r\n    //     </div>\r\n    //     <button type=\"button\" className=\"btn btn-warning deleteNote-btn\" onClick={() => RemoveNote()}>Delete Note</button>\r\n    // </Fragment>\r\n       }\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"noteContainer\">\r\n        {title}\r\n            {/* {takeNotes} */}\r\n        </div>\r\n        <img src={'/images/notes.png'} onClick={getUserNote} alt=\"notes\" id=\"notesLessons\" />\r\n        <img src={'/images/bookmark.png'} onClick={addBookmark} alt=\"bookmark\" id=\"bookmarkLessons\" />\r\n        </div>\r\n        );\r\n    };\r\n\r\n    export default UserNotes;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _draftJs = require('draft-js');\n\nvar _DraftOffsetKey = require('draft-js/lib/DraftOffsetKey');\n\nvar _DraftOffsetKey2 = _interopRequireDefault(_DraftOffsetKey);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Set selection of editor to next/previous block\n\n\nexports.default = function (getEditorState, setEditorState, newActiveBlock) {\n  var editorState = getEditorState(); // TODO verify that always a key-0-0 exists\n\n  var offsetKey = _DraftOffsetKey2.default.encode(newActiveBlock.getKey(), 0, 0);\n\n  var node = document.querySelectorAll('[data-offset-key=\"' + offsetKey + '\"]')[0]; // set the native selection to the node so the caret is not in the text and\n  // the selectionState matches the native selection\n\n  var selection = window.getSelection();\n  var range = document.createRange();\n  range.setStart(node, 0);\n  range.setEnd(node, 0);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  setEditorState(_draftJs.EditorState.forceSelection(editorState, new _draftJs.SelectionState({\n    anchorKey: newActiveBlock.getKey(),\n    anchorOffset: 0,\n    focusKey: newActiveBlock.getKey(),\n    focusOffset: 0,\n    isBackward: false\n  })));\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/node_modules/draft-js-focus-plugin/lib/modifiers/setSelectionToBlock.js"],"names":["Object","defineProperty","exports","value","_draftJs","require","_DraftOffsetKey","_DraftOffsetKey2","_interopRequireDefault","obj","__esModule","default","getEditorState","setEditorState","newActiveBlock","editorState","offsetKey","encode","getKey","node","document","querySelectorAll","selection","window","getSelection","range","createRange","setStart","setEnd","removeAllRanges","addRange","EditorState","forceSelection","SelectionState","anchorKey","anchorOffset","focusKey","focusOffset","isBackward"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,eAAe,GAAGD,OAAO,CAAC,6BAAD,CAA7B;;AAEA,IAAIE,gBAAgB,GAAGC,sBAAsB,CAACF,eAAD,CAA7C;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD,C,CAE/F;;;AACAP,OAAO,CAACS,OAAR,GAAkB,UAAUC,cAAV,EAA0BC,cAA1B,EAA0CC,cAA1C,EAA0D;AAC1E,MAAIC,WAAW,GAAGH,cAAc,EAAhC,CAD0E,CAG1E;;AACA,MAAII,SAAS,GAAGT,gBAAgB,CAACI,OAAjB,CAAyBM,MAAzB,CAAgCH,cAAc,CAACI,MAAf,EAAhC,EAAyD,CAAzD,EAA4D,CAA5D,CAAhB;;AACA,MAAIC,IAAI,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,uBAAuBL,SAAvB,GAAmC,IAA7D,EAAmE,CAAnE,CAAX,CAL0E,CAM1E;AACA;;AACA,MAAIM,SAAS,GAAGC,MAAM,CAACC,YAAP,EAAhB;AACA,MAAIC,KAAK,GAAGL,QAAQ,CAACM,WAAT,EAAZ;AACAD,EAAAA,KAAK,CAACE,QAAN,CAAeR,IAAf,EAAqB,CAArB;AACAM,EAAAA,KAAK,CAACG,MAAN,CAAaT,IAAb,EAAmB,CAAnB;AACAG,EAAAA,SAAS,CAACO,eAAV;AACAP,EAAAA,SAAS,CAACQ,QAAV,CAAmBL,KAAnB;AAEAZ,EAAAA,cAAc,CAACT,QAAQ,CAAC2B,WAAT,CAAqBC,cAArB,CAAoCjB,WAApC,EAAiD,IAAIX,QAAQ,CAAC6B,cAAb,CAA4B;AAC1FC,IAAAA,SAAS,EAAEpB,cAAc,CAACI,MAAf,EAD+E;AAE1FiB,IAAAA,YAAY,EAAE,CAF4E;AAG1FC,IAAAA,QAAQ,EAAEtB,cAAc,CAACI,MAAf,EAHgF;AAI1FmB,IAAAA,WAAW,EAAE,CAJ6E;AAK1FC,IAAAA,UAAU,EAAE;AAL8E,GAA5B,CAAjD,CAAD,CAAd;AAOD,CAtBD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _draftJs = require('draft-js');\n\nvar _DraftOffsetKey = require('draft-js/lib/DraftOffsetKey');\n\nvar _DraftOffsetKey2 = _interopRequireDefault(_DraftOffsetKey);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Set selection of editor to next/previous block\nexports.default = function (getEditorState, setEditorState, newActiveBlock) {\n  var editorState = getEditorState();\n\n  // TODO verify that always a key-0-0 exists\n  var offsetKey = _DraftOffsetKey2.default.encode(newActiveBlock.getKey(), 0, 0);\n  var node = document.querySelectorAll('[data-offset-key=\"' + offsetKey + '\"]')[0];\n  // set the native selection to the node so the caret is not in the text and\n  // the selectionState matches the native selection\n  var selection = window.getSelection();\n  var range = document.createRange();\n  range.setStart(node, 0);\n  range.setEnd(node, 0);\n  selection.removeAllRanges();\n  selection.addRange(range);\n\n  setEditorState(_draftJs.EditorState.forceSelection(editorState, new _draftJs.SelectionState({\n    anchorKey: newActiveBlock.getKey(),\n    anchorOffset: 0,\n    focusKey: newActiveBlock.getKey(),\n    focusOffset: 0,\n    isBackward: false\n  })));\n};"]},"metadata":{},"sourceType":"script"}
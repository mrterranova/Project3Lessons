{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = onDropBlock;\n\nvar _addBlock = require('./addBlock');\n\nvar _addBlock2 = _interopRequireDefault(_addBlock);\n\nvar _removeBlock = require('./removeBlock');\n\nvar _removeBlock2 = _interopRequireDefault(_removeBlock);\n\nvar _draftJs = require('draft-js');\n\nvar _constants = require('../constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction onDropBlock(_ref) {\n  var handleDefaultData = _ref.handleDefaultData;\n  return function onDropBlockInner(selection, dataTransfer, isInternal, _ref2) {\n    var getEditorState = _ref2.getEditorState;\n    var setEditorState = _ref2.setEditorState;\n    var state = getEditorState(); // Get data 'text' (anything else won't move the cursor) and expecting kind of data (text/key)\n\n    var raw = dataTransfer.data.getData('text');\n    var data = raw ? raw.split(':') : [];\n\n    if (data.length !== 2) {\n      return undefined;\n    } // Existing block dropped\n\n\n    if (data[0] === _constants.DRAFTJS_BLOCK_KEY) {\n      var blockKey = data[1]; // Get content, selection, block\n\n      var block = state.getCurrentContent().getBlockForKey(blockKey);\n      var editorStateAfterInsert = (0, _addBlock2.default)(state, selection, block.getType(), _draftJs.Entity.get(block.getEntityAt(0)).data);\n      setEditorState((0, _removeBlock2.default)(editorStateAfterInsert, blockKey));\n    } // New block dropped\n\n\n    if (data[0] === _constants.DRAFTJS_BLOCK_TYPE) {\n      var blockType = data[1]; // Get content, selection, block\n\n      var _editorStateAfterInsert = (0, _addBlock2.default)(state, selection, blockType, handleDefaultData ? handleDefaultData(blockType) : {});\n\n      setEditorState(_editorStateAfterInsert);\n    }\n\n    return true;\n  };\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/node_modules/draft-js-dnd-plugin/lib/modifiers/onDropBlock.js"],"names":["Object","defineProperty","exports","value","default","onDropBlock","_addBlock","require","_addBlock2","_interopRequireDefault","_removeBlock","_removeBlock2","_draftJs","_constants","obj","__esModule","_ref","handleDefaultData","onDropBlockInner","selection","dataTransfer","isInternal","_ref2","getEditorState","setEditorState","state","raw","data","getData","split","length","undefined","DRAFTJS_BLOCK_KEY","blockKey","block","getCurrentContent","getBlockForKey","editorStateAfterInsert","getType","Entity","get","getEntityAt","DRAFTJS_BLOCK_TYPE","blockType","_editorStateAfterInsert"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,WAAlB;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACH,SAAD,CAAvC;;AAEA,IAAII,YAAY,GAAGH,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAII,aAAa,GAAGF,sBAAsB,CAACC,YAAD,CAA1C;;AAEA,IAAIE,QAAQ,GAAGL,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIM,UAAU,GAAGN,OAAO,CAAC,cAAD,CAAxB;;AAEA,SAASE,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEV,IAAAA,OAAO,EAAEU;AAAX,GAArC;AAAwD;;AAE/F,SAAST,WAAT,CAAqBW,IAArB,EAA2B;AACzB,MAAIC,iBAAiB,GAAGD,IAAI,CAACC,iBAA7B;AAEA,SAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAAqCC,YAArC,EAAmDC,UAAnD,EAA+DC,KAA/D,EAAsE;AAC3E,QAAIC,cAAc,GAAGD,KAAK,CAACC,cAA3B;AACA,QAAIC,cAAc,GAAGF,KAAK,CAACE,cAA3B;AAEA,QAAIC,KAAK,GAAGF,cAAc,EAA1B,CAJ2E,CAM3E;;AACA,QAAIG,GAAG,GAAGN,YAAY,CAACO,IAAb,CAAkBC,OAAlB,CAA0B,MAA1B,CAAV;AACA,QAAID,IAAI,GAAGD,GAAG,GAAGA,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAH,GAAoB,EAAlC;;AAEA,QAAIF,IAAI,CAACG,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAOC,SAAP;AACD,KAZ0E,CAc3E;;;AACA,QAAIJ,IAAI,CAAC,CAAD,CAAJ,KAAYd,UAAU,CAACmB,iBAA3B,EAA8C;AAC5C,UAAIC,QAAQ,GAAGN,IAAI,CAAC,CAAD,CAAnB,CAD4C,CAG5C;;AACA,UAAIO,KAAK,GAAGT,KAAK,CAACU,iBAAN,GAA0BC,cAA1B,CAAyCH,QAAzC,CAAZ;AACA,UAAII,sBAAsB,GAAG,CAAC,GAAG7B,UAAU,CAACJ,OAAf,EAAwBqB,KAAxB,EAA+BN,SAA/B,EAA0Ce,KAAK,CAACI,OAAN,EAA1C,EAA2D1B,QAAQ,CAAC2B,MAAT,CAAgBC,GAAhB,CAAoBN,KAAK,CAACO,WAAN,CAAkB,CAAlB,CAApB,EAA0Cd,IAArG,CAA7B;AACAH,MAAAA,cAAc,CAAC,CAAC,GAAGb,aAAa,CAACP,OAAlB,EAA2BiC,sBAA3B,EAAmDJ,QAAnD,CAAD,CAAd;AACD,KAtB0E,CAwB3E;;;AACA,QAAIN,IAAI,CAAC,CAAD,CAAJ,KAAYd,UAAU,CAAC6B,kBAA3B,EAA+C;AAC7C,UAAIC,SAAS,GAAGhB,IAAI,CAAC,CAAD,CAApB,CAD6C,CAG7C;;AACA,UAAIiB,uBAAuB,GAAG,CAAC,GAAGpC,UAAU,CAACJ,OAAf,EAAwBqB,KAAxB,EAA+BN,SAA/B,EAA0CwB,SAA1C,EAAqD1B,iBAAiB,GAAGA,iBAAiB,CAAC0B,SAAD,CAApB,GAAkC,EAAxG,CAA9B;;AACAnB,MAAAA,cAAc,CAACoB,uBAAD,CAAd;AACD;;AAED,WAAO,IAAP;AACD,GAlCD;AAmCD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = onDropBlock;\n\nvar _addBlock = require('./addBlock');\n\nvar _addBlock2 = _interopRequireDefault(_addBlock);\n\nvar _removeBlock = require('./removeBlock');\n\nvar _removeBlock2 = _interopRequireDefault(_removeBlock);\n\nvar _draftJs = require('draft-js');\n\nvar _constants = require('../constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction onDropBlock(_ref) {\n  var handleDefaultData = _ref.handleDefaultData;\n\n  return function onDropBlockInner(selection, dataTransfer, isInternal, _ref2) {\n    var getEditorState = _ref2.getEditorState;\n    var setEditorState = _ref2.setEditorState;\n\n    var state = getEditorState();\n\n    // Get data 'text' (anything else won't move the cursor) and expecting kind of data (text/key)\n    var raw = dataTransfer.data.getData('text');\n    var data = raw ? raw.split(':') : [];\n\n    if (data.length !== 2) {\n      return undefined;\n    }\n\n    // Existing block dropped\n    if (data[0] === _constants.DRAFTJS_BLOCK_KEY) {\n      var blockKey = data[1];\n\n      // Get content, selection, block\n      var block = state.getCurrentContent().getBlockForKey(blockKey);\n      var editorStateAfterInsert = (0, _addBlock2.default)(state, selection, block.getType(), _draftJs.Entity.get(block.getEntityAt(0)).data);\n      setEditorState((0, _removeBlock2.default)(editorStateAfterInsert, blockKey));\n    }\n\n    // New block dropped\n    if (data[0] === _constants.DRAFTJS_BLOCK_TYPE) {\n      var blockType = data[1];\n\n      // Get content, selection, block\n      var _editorStateAfterInsert = (0, _addBlock2.default)(state, selection, blockType, handleDefaultData ? handleDefaultData(blockType) : {});\n      setEditorState(_editorStateAfterInsert);\n    }\n\n    return true;\n  };\n}"]},"metadata":{},"sourceType":"script"}
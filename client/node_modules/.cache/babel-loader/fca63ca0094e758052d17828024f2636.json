{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\core\\\\components\\\\DnR.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nexport const disableSelect = {\n  userSelect: 'none',\n  WebkitUserSelect: 'none',\n  msUserSelect: 'none',\n  MozUserSelect: 'none',\n  OUserSelect: 'none'\n};\nexport const defaultTheme = {\n  title: {\n    userSelect: 'none',\n    WebkitUserSelect: 'none',\n    msUserSelect: 'none',\n    MozUserSelect: 'none',\n    OUserSelect: 'none',\n    overflow: 'hidden',\n    width: '100%',\n    height: 25\n  },\n  frame: {\n    position: 'absolute',\n    margin: 0,\n    padding: 0,\n    overflow: 'hidden'\n  },\n  transition: 'all 0.25s ease-in-out'\n};\n\nfunction prefixedTransition(transition) {\n  return transition ? {\n    transition: transition,\n    WebkitTransition: transition,\n    msTransition: transition,\n    MozTransition: transition,\n    OTransition: transition\n  } : {};\n}\n\nexport default class DnR extends React.Component {\n  constructor(props) {\n    super(props);\n    const _this$props = this.props,\n          transition = _this$props.transition,\n          theme = _this$props.theme;\n    this.cursorX = 0;\n    this.cursorY = 0;\n    this.clicked = null;\n    this.allowTransition = false;\n    this.frameRect = {};\n    this.state = {\n      cursor: 'auto',\n      transition: prefixedTransition(transition ? transition : theme.transition)\n    };\n    this.mouseMoveListener = this._onMove.bind(this);\n    this.mouseUpListener = this._onUp.bind(this);\n  }\n\n  componentDidMount() {\n    const _this$props2 = this.props,\n          initialWidth = _this$props2.initialWidth,\n          initialHeight = _this$props2.initialHeight,\n          initialTop = _this$props2.initialTop,\n          initialLeft = _this$props2.initialLeft,\n          attachedTo = _this$props2.attachedTo;\n    const boundingBox = this.getFrameRect();\n    this.frameRect.width = initialWidth || boundingBox.width;\n    this.frameRect.height = initialHeight || boundingBox.height;\n    this.frameRect.top = initialTop || this.refs.frame.offsetTop;\n    this.frameRect.left = initialLeft || this.refs.frame.offsetLeft;\n    attachedTo.addEventListener('mousemove', this.mouseMoveListener);\n    attachedTo.addEventListener('mouseup', this.mouseUpListener);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.transition !== this.props.transition) {\n      this.setState({\n        transition: prefixedTransition(nextProps.transition)\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.attachedTo.removeEventListener('mousemove', this.mouseMoveListener);\n    this.props.attachedTo.removeEventListener('mouseup', this.mouseUpListener);\n  }\n\n  transform(state, allowTransition = true, updateHistory = true) {\n    const boundingBox = this.getFrameRect();\n    let top = this.refs.frame.offsetTop;\n    let left = this.refs.frame.offsetLeft;\n    let width = boundingBox.width;\n    let height = boundingBox.height;\n\n    if (updateHistory) {\n      this.prevState = {\n        top: top,\n        left: left,\n        width: width,\n        height: height\n      };\n    }\n\n    if (!state) return;\n    this.frameRect.top = typeof state.top === 'number' ? state.top : state.bottom ? state.bottom - (state.height || height) : top;\n    this.frameRect.left = typeof state.left === 'number' ? state.left : state.right ? state.right - (state.width || width) : left;\n    this.frameRect.width = typeof state.width === 'number' ? state.width : typeof state.right === 'number' && typeof state.left === 'number' ? state.right - state.left : typeof state.right === 'number' ? state.right - this.frameRect.left : width;\n    this.frameRect.height = typeof state.height === 'number' ? state.height : typeof state.bottom === 'number' && typeof state.top === 'number' ? state.top - state.bottom : typeof state.bottom === 'number' ? state.bottom - this.frameRect.top : height;\n    this.allowTransition = allowTransition;\n\n    if (this.props.onTransform) {\n      setTimeout(this.props.onTransform.bind(this, this.frameRect, this.prevState));\n    }\n\n    this.forceUpdate();\n  }\n\n  restore(allowTransition = true) {\n    this.transform(this.prevState, allowTransition);\n  }\n\n  minimize(allowTransition = true) {\n    this.transform({\n      width: 0,\n      height: 0\n    }, allowTransition);\n  }\n\n  maximize(allowTransition = true) {\n    this.transform({\n      top: 0,\n      left: 0,\n      width: this.props.attachedTo.innerWidth,\n      height: this.props.attachedTo.innerHeight\n    }, allowTransition);\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          style = _this$props3.style,\n          contentStyle = _this$props3.contentStyle,\n          titleStyle = _this$props3.titleStyle,\n          theme = _this$props3.theme,\n          minWidth = _this$props3.minWidth,\n          minHeight = _this$props3.minHeight,\n          animate = _this$props3.animate,\n          cursorRemap = _this$props3.cursorRemap,\n          children = _this$props3.children,\n          boundary = _this$props3.boundary,\n          onMove = _this$props3.onMove,\n          onResize = _this$props3.onResize;\n\n    const pervFrameRect = _objectSpread({}, this.frameRect);\n\n    if (this.clicked) {\n      let hits = this.hitEdges;\n      const boundingBox = this.clicked.boundingBox;\n\n      if (hits.top || hits.bottom || hits.left || hits.right) {\n        if (hits.right) this.frameRect.width = Math.max(this.cursorX - boundingBox.left, minWidth) + 'px';\n        if (hits.bottom) this.frameRect.height = Math.max(this.cursorY - boundingBox.top, minHeight) + 'px';\n\n        if (hits.left) {\n          let currentWidth = boundingBox.right - this.cursorX;\n\n          if (currentWidth > minWidth) {\n            this.frameRect.width = currentWidth;\n            this.frameRect.left = this.clicked.frameLeft + this.cursorX - this.clicked.x;\n          }\n        }\n\n        if (hits.top) {\n          let currentHeight = boundingBox.bottom - this.cursorY;\n\n          if (currentHeight > minHeight) {\n            this.frameRect.height = currentHeight;\n            this.frameRect.top = this.clicked.frameTop + this.cursorY - this.clicked.y;\n          }\n        }\n      } else if (this.state.cursor === 'move') {\n        this.frameRect.top = this.clicked.frameTop + this.cursorY - this.clicked.y;\n        this.frameRect.left = this.clicked.frameLeft + this.cursorX - this.clicked.x;\n      }\n    }\n\n    if (boundary) {\n      let _this$frameRect = this.frameRect,\n          top = _this$frameRect.top,\n          left = _this$frameRect.left,\n          width = _this$frameRect.width,\n          height = _this$frameRect.height;\n\n      if (typeof boundary.top === 'number' && top < boundary.top) {\n        this.frameRect.top = boundary.top;\n      }\n\n      if (typeof boundary.bottom === 'number' && top + height > boundary.bottom) {\n        this.frameRect.top = boundary.bottom - height;\n\n        if (typeof boundary.top === 'number' && this.frameRect.top < boundary.top) {\n          this.frameRect.top = boundary.top;\n          this.frameRect.height = boundary.bottom - boundary.top;\n        }\n      }\n\n      if (typeof boundary.left === 'number' && left < boundary.left) {\n        this.frameRect.left = boundary.left;\n      }\n\n      if (typeof boundary.right === 'number' && top + height > boundary.right) {\n        this.frameRect.left = boundary.right - width;\n\n        if (typeof boundary.left === 'number' && this.frameRect.left < boundary.left) {\n          this.frameRect.left = boundary.left;\n          this.frameRect.width = boundary.right - boundary.left;\n        }\n      }\n    }\n\n    let cursor = this.state.cursor;\n\n    if (cursorRemap) {\n      let res = cursorRemap.call(this, cursor);\n      if (res && typeof res === 'string') cursor = res;\n    }\n\n    const dnrState = {\n      cursor,\n      clicked: this.clicked,\n      frameRect: this.frameRect,\n      allowTransition: this.allowTransition\n    };\n    let titleBar = React.createElement(\"div\", {\n      ref: \"title\",\n      style: _objectSpread({}, theme.title, {}, titleStyle, {\n        cursor\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, typeof this.props.titleBar !== 'string' ? React.cloneElement(this.props.titleBar, {\n      dnrState\n    }) : this.props.titleBar);\n    const childrenWithProps = React.Children.map(children, function (child) {\n      return typeof child === 'string' ? child : React.cloneElement(child, {\n        dnrState\n      });\n    });\n    let frameTransition = animate && this.allowTransition ? this.state.transition : {};\n\n    if (onMove && (pervFrameRect.top !== this.frameRect.top || pervFrameRect.left !== this.frameRect.left)) {\n      setTimeout(onMove.bind(this, this.frameRect, pervFrameRect));\n    }\n\n    if (onResize && (pervFrameRect.width !== this.frameRect.width || pervFrameRect.height !== this.frameRect.height)) {\n      setTimeout(onResize.bind(this, this.frameRect, pervFrameRect));\n    }\n\n    return React.createElement(\"div\", {\n      ref: \"frame\",\n      onMouseDownCapture: this._onDown.bind(this),\n      onMouseMoveCapture: e => {\n        if (this.clicked !== null) {\n          e.preventDefault();\n        }\n      },\n      style: _objectSpread({}, theme.frame, {}, frameTransition, {\n        cursor: cursor\n      }, style, {}, this.frameRect, {}, this.clicked ? disableSelect : {}),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, titleBar, React.createElement(\"div\", {\n      ref: \"content\",\n      className: \"contentClassName\",\n      style: _objectSpread({\n        position: 'absolute',\n        width: '100%',\n        top: theme.title.height,\n        bottom: 0\n      }, contentStyle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, childrenWithProps));\n  }\n\n  getFrameRect() {\n    return this.refs.frame.getBoundingClientRect();\n  }\n\n  getDOMFrame() {\n    return this.refs.frame;\n  }\n\n  getTitleRect() {\n    return this.refs.title.getBoundingClientRect();\n  }\n\n  _cursorStatus(e) {\n    const boundingBox = this.getFrameRect();\n    this.cursorX = e.clientX;\n    this.cursorY = e.clientY;\n    if (this.clicked) return;\n    let hitRange = this.props.edgeDetectionRange;\n    let hitTop = this.cursorY <= boundingBox.top + hitRange;\n    let hitBottom = this.cursorY >= boundingBox.bottom - hitRange;\n    let hitLeft = this.cursorX <= boundingBox.left + hitRange;\n    let hitRight = this.cursorX >= boundingBox.right - hitRange;\n    let cursor = 'auto';\n\n    if (hitTop || hitBottom || hitLeft || hitRight) {\n      if (hitRight && hitBottom || hitLeft && hitTop) {\n        cursor = 'nwse-resize';\n      } else if (hitRight && hitTop || hitBottom && hitLeft) {\n        cursor = 'nesw-resize';\n      } else if (hitRight || hitLeft) {\n        cursor = 'ew-resize';\n      } else if (hitBottom || hitTop) {\n        cursor = 'ns-resize';\n      }\n\n      e.stopPropagation();\n    } else {\n      const titleBounding = this.getTitleRect();\n\n      if (this.cursorX > titleBounding.left && this.cursorX < titleBounding.right && this.cursorY > titleBounding.top && this.cursorY < titleBounding.bottom) {\n        cursor = 'move';\n      }\n    }\n\n    this.hitEdges = {\n      top: hitTop,\n      bottom: hitBottom,\n      left: hitLeft,\n      right: hitRight\n    };\n\n    if (cursor !== this.state.cursor) {\n      this.setState({\n        cursor: cursor\n      });\n    }\n  }\n\n  _onDown(e) {\n    this.allowTransition = false;\n\n    this._cursorStatus(e);\n\n    const boundingBox = this.getFrameRect();\n    this.clicked = {\n      x: e.clientX,\n      y: e.clientY,\n      boundingBox: boundingBox,\n      frameTop: this.refs.frame.offsetTop,\n      frameLeft: this.refs.frame.offsetLeft\n    };\n  }\n\n  _onUp(e) {\n    this.clicked = null;\n\n    this._cursorStatus(e);\n  }\n\n  _onMove(e) {\n    this._cursorStatus(e);\n\n    if (this.clicked !== null) {\n      this.forceUpdate();\n    }\n  }\n\n}\nDnR.defaultProps = {\n  minWidth: 20,\n  minHeight: 20,\n  edgeDetectionRange: 4,\n  theme: defaultTheme,\n  initialWidth: null,\n  initialHeight: null,\n  initialTop: null,\n  initialLeft: null,\n  animate: true,\n  attachedTo: window\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/core/components/DnR.js"],"names":["React","ReactDOM","disableSelect","userSelect","WebkitUserSelect","msUserSelect","MozUserSelect","OUserSelect","defaultTheme","title","overflow","width","height","frame","position","margin","padding","transition","prefixedTransition","WebkitTransition","msTransition","MozTransition","OTransition","DnR","Component","constructor","props","theme","cursorX","cursorY","clicked","allowTransition","frameRect","state","cursor","mouseMoveListener","_onMove","bind","mouseUpListener","_onUp","componentDidMount","initialWidth","initialHeight","initialTop","initialLeft","attachedTo","boundingBox","getFrameRect","top","refs","offsetTop","left","offsetLeft","addEventListener","componentWillReceiveProps","nextProps","setState","componentWillUnmount","removeEventListener","transform","updateHistory","prevState","bottom","right","onTransform","setTimeout","forceUpdate","restore","minimize","maximize","innerWidth","innerHeight","render","style","contentStyle","titleStyle","minWidth","minHeight","animate","cursorRemap","children","boundary","onMove","onResize","pervFrameRect","hits","hitEdges","Math","max","currentWidth","frameLeft","x","currentHeight","frameTop","y","res","call","dnrState","titleBar","cloneElement","childrenWithProps","Children","map","child","frameTransition","_onDown","e","preventDefault","getBoundingClientRect","getDOMFrame","getTitleRect","_cursorStatus","clientX","clientY","hitRange","edgeDetectionRange","hitTop","hitBottom","hitLeft","hitRight","stopPropagation","titleBounding","defaultProps","window"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nexport const disableSelect = {\r\n  userSelect: 'none',\r\n  WebkitUserSelect: 'none',\r\n  msUserSelect: 'none',\r\n  MozUserSelect: 'none',\r\n  OUserSelect: 'none'\r\n}\r\n\r\nexport const defaultTheme = {\r\n  title: {\r\n    userSelect: 'none',\r\n    WebkitUserSelect: 'none',\r\n    msUserSelect: 'none',\r\n    MozUserSelect: 'none',\r\n    OUserSelect: 'none',\r\n    overflow: 'hidden',\r\n    width: '100%',\r\n    height: 25,\r\n  },\r\n  frame: {\r\n    position: 'absolute',\r\n    margin: 0,\r\n    padding: 0,\r\n    overflow: 'hidden',\r\n  },\r\n  transition: 'all 0.25s ease-in-out'\r\n}\r\n\r\nfunction prefixedTransition(transition) {\r\n  return transition ? {\r\n    transition: transition,\r\n    WebkitTransition: transition,\r\n    msTransition: transition,\r\n    MozTransition: transition,\r\n    OTransition: transition,\r\n  } : {}\r\n}\r\n\r\nexport default class DnR extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const {\r\n      transition,\r\n      theme\r\n    } = this.props\r\n    this.cursorX = 0\r\n    this.cursorY = 0\r\n    this.clicked = null\r\n    this.allowTransition = false\r\n    this.frameRect = {}\r\n    this.state = {\r\n      cursor: 'auto',\r\n      transition: prefixedTransition(transition ? transition : theme.transition)\r\n    };\r\n\r\n    this.mouseMoveListener = this._onMove.bind(this)\r\n    this.mouseUpListener = this._onUp.bind(this)\r\n  }\r\n  componentDidMount() {\r\n    const {\r\n      initialWidth,\r\n      initialHeight,\r\n      initialTop,\r\n      initialLeft,\r\n      attachedTo,\r\n    } = this.props\r\n\r\n    const boundingBox = this.getFrameRect()\r\n    this.frameRect.width = initialWidth || boundingBox.width\r\n    this.frameRect.height = initialHeight || boundingBox.height\r\n    this.frameRect.top = initialTop || this.refs.frame.offsetTop\r\n    this.frameRect.left = initialLeft || this.refs.frame.offsetLeft\r\n\r\n    attachedTo.addEventListener('mousemove', this.mouseMoveListener)\r\n    attachedTo.addEventListener('mouseup', this.mouseUpListener)\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.transition !== this.props.transition){\r\n      this.setState({transition: prefixedTransition(nextProps.transition)})\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.attachedTo.removeEventListener('mousemove', this.mouseMoveListener)\r\n    this.props.attachedTo.removeEventListener('mouseup', this.mouseUpListener)\r\n  }\r\n  transform(state, allowTransition = true, updateHistory = true) {\r\n    const boundingBox = this.getFrameRect()\r\n\r\n    let top = this.refs.frame.offsetTop\r\n    let left = this.refs.frame.offsetLeft\r\n    let width = boundingBox.width\r\n    let height = boundingBox.height\r\n\r\n    if (updateHistory) {\r\n      this.prevState = {\r\n        top: top,\r\n        left: left,\r\n        width: width,\r\n        height: height,\r\n      }\r\n    }\r\n\r\n    if (!state) return;\r\n\r\n    this.frameRect.top = typeof state.top === 'number' ? state.top :\r\n                                state.bottom ? (state.bottom - (state.height || height)) : top\r\n    this.frameRect.left = typeof state.left === 'number' ? state.left :\r\n                                state.right ? (state.right - (state.width || width)) : left\r\n    this.frameRect.width = typeof state.width === 'number' ? state.width :\r\n                                (typeof state.right === 'number' && typeof state.left === 'number') ? state.right - state.left :\r\n                                typeof state.right === 'number' ? state.right - this.frameRect.left : width\r\n    this.frameRect.height = typeof state.height === 'number' ? state.height :\r\n                                (typeof state.bottom === 'number' && typeof state.top === 'number') ? state.top - state.bottom :\r\n                                typeof state.bottom === 'number' ? state.bottom - this.frameRect.top : height\r\n    this.allowTransition = allowTransition\r\n\r\n    if(this.props.onTransform){\r\n      setTimeout(this.props.onTransform.bind(this,this.frameRect, this.prevState))\r\n    }\r\n    this.forceUpdate()\r\n  }\r\n  restore(allowTransition = true) {\r\n    this.transform(this.prevState, allowTransition)\r\n  }\r\n  minimize(allowTransition = true) {\r\n    this.transform({width: 0, height: 0}, allowTransition)\r\n  }\r\n  maximize(allowTransition = true) {\r\n    this.transform({top: 0, left: 0, width: this.props.attachedTo.innerWidth, height: this.props.attachedTo.innerHeight}, allowTransition)\r\n  }\r\n  render() {\r\n    const {\r\n      style,\r\n      contentStyle,\r\n      titleStyle,\r\n      theme,\r\n      minWidth,\r\n      minHeight,\r\n      animate,\r\n      cursorRemap,\r\n      children,\r\n      boundary,\r\n      onMove,\r\n      onResize\r\n    } = this.props\r\n\r\n    const pervFrameRect = {...this.frameRect}\r\n\r\n    if (this.clicked) {\r\n      let hits = this.hitEdges\r\n      const boundingBox = this.clicked.boundingBox\r\n\r\n      if (hits.top || hits.bottom || hits.left || hits.right) {\r\n        if (hits.right) this.frameRect.width = Math.max(this.cursorX - boundingBox.left, minWidth) + 'px'\r\n        if (hits.bottom) this.frameRect.height = Math.max(this.cursorY - boundingBox.top, minHeight) + 'px'\r\n\r\n        if (hits.left) {\r\n          let currentWidth = boundingBox.right - this.cursorX\r\n          if (currentWidth > minWidth) {\r\n            this.frameRect.width = currentWidth\r\n            this.frameRect.left = this.clicked.frameLeft + this.cursorX - this.clicked.x\r\n          }\r\n        }\r\n\r\n        if (hits.top) {\r\n          let currentHeight = boundingBox.bottom - this.cursorY\r\n          if (currentHeight > minHeight) {\r\n            this.frameRect.height = currentHeight\r\n            this.frameRect.top = this.clicked.frameTop + this.cursorY - this.clicked.y\r\n          }\r\n        }\r\n      }\r\n      else if (this.state.cursor === 'move'){\r\n        this.frameRect.top = this.clicked.frameTop + this.cursorY - this.clicked.y\r\n        this.frameRect.left = this.clicked.frameLeft + this.cursorX - this.clicked.x\r\n      }\r\n    }\r\n\r\n    if (boundary) {\r\n      let {\r\n        top,\r\n        left,\r\n        width,\r\n        height\r\n      } = this.frameRect\r\n      if (typeof boundary.top === 'number' && top < boundary.top) {\r\n        this.frameRect.top = boundary.top\r\n      }\r\n      if (typeof boundary.bottom === 'number' && top + height > boundary.bottom) {\r\n        this.frameRect.top = boundary.bottom - height\r\n        if (typeof boundary.top === 'number' && this.frameRect.top < boundary.top) {\r\n          this.frameRect.top = boundary.top\r\n          this.frameRect.height = boundary.bottom - boundary.top\r\n        }\r\n      }\r\n      if (typeof boundary.left === 'number' && left < boundary.left) {\r\n        this.frameRect.left = boundary.left\r\n      }\r\n      if (typeof boundary.right === 'number' && top + height > boundary.right) {\r\n        this.frameRect.left = boundary.right - width\r\n        if (typeof boundary.left === 'number' && this.frameRect.left < boundary.left) {\r\n          this.frameRect.left = boundary.left\r\n          this.frameRect.width = boundary.right - boundary.left\r\n        }\r\n      }\r\n    }\r\n\r\n    let cursor = this.state.cursor\r\n\r\n    if (cursorRemap) {\r\n      let res = cursorRemap.call(this, cursor)\r\n\r\n      if (res && typeof res === 'string') cursor = res\r\n    }\r\n\r\n\r\n    const dnrState = {\r\n      cursor,\r\n      clicked: this.clicked,\r\n      frameRect: this.frameRect,\r\n      allowTransition: this.allowTransition\r\n    }\r\n\r\n    let titleBar = (\r\n        <div ref=\"title\"\r\n          style={{\r\n            ...theme.title,\r\n            ...titleStyle,\r\n            cursor\r\n          }}>\r\n          {typeof this.props.titleBar !== 'string' ?\r\n            React.cloneElement(this.props.titleBar, {dnrState}) : this.props.titleBar}\r\n        </div>)\r\n\r\n    const childrenWithProps = React.Children.map(children, function(child) {\r\n        return typeof child === 'string' ? child : React.cloneElement(child, {dnrState})\r\n    })\r\n\r\n    let frameTransition = (animate && this.allowTransition) ? this.state.transition : {}\r\n\r\n    if(onMove && (pervFrameRect.top !== this.frameRect.top ||\r\n      pervFrameRect.left !== this.frameRect.left)) {\r\n      setTimeout(onMove.bind(this,this.frameRect, pervFrameRect))\r\n    }\r\n\r\n    if(onResize && (pervFrameRect.width !== this.frameRect.width ||\r\n      pervFrameRect.height !== this.frameRect.height)) {\r\n      setTimeout(onResize.bind(this,this.frameRect, pervFrameRect))\r\n    }\r\n    return (\r\n      <div ref=\"frame\"\r\n        onMouseDownCapture={this._onDown.bind(this)}\r\n        onMouseMoveCapture={(e)=>{\r\n          if (this.clicked !== null) {\r\n            e.preventDefault()\r\n          }\r\n        }}\r\n        style={{\r\n          ...theme.frame,\r\n          ...frameTransition,\r\n          cursor:cursor,\r\n          ...style,\r\n          ...this.frameRect,\r\n          ...(this.clicked ? disableSelect : {})\r\n        }}>\r\n        {titleBar}\r\n        <div ref='content'\r\n          className='contentClassName'\r\n          style={{position: 'absolute', width: '100%', top: theme.title.height, bottom: 0, ...contentStyle}}>\r\n          {childrenWithProps}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  getFrameRect() {\r\n    return this.refs.frame.getBoundingClientRect()\r\n  }\r\n  getDOMFrame() {\r\n    return this.refs.frame\r\n  }\r\n  getTitleRect() {\r\n    return this.refs.title.getBoundingClientRect()\r\n  }\r\n  _cursorStatus(e){\r\n    const boundingBox = this.getFrameRect()\r\n    this.cursorX = e.clientX\r\n    this.cursorY = e.clientY\r\n\r\n    if (this.clicked) return\r\n\r\n    let hitRange = this.props.edgeDetectionRange\r\n    let hitTop = this.cursorY <= boundingBox.top + hitRange\r\n    let hitBottom = this.cursorY >= boundingBox.bottom - hitRange\r\n    let hitLeft = this.cursorX <= boundingBox.left + hitRange\r\n    let hitRight = this.cursorX >= boundingBox.right - hitRange\r\n\r\n    let cursor = 'auto'\r\n\r\n    if (hitTop || hitBottom || hitLeft || hitRight){\r\n      if (hitRight && hitBottom || hitLeft && hitTop) {\r\n        cursor = 'nwse-resize'\r\n      } else if (hitRight && hitTop || hitBottom && hitLeft) {\r\n        cursor = 'nesw-resize'\r\n      } else if (hitRight || hitLeft) {\r\n        cursor = 'ew-resize'\r\n      } else if (hitBottom || hitTop) {\r\n        cursor = 'ns-resize'\r\n      }\r\n      e.stopPropagation()\r\n    }\r\n    else {\r\n      const titleBounding = this.getTitleRect()\r\n      if (this.cursorX > titleBounding.left && this.cursorX < titleBounding.right &&\r\n          this.cursorY > titleBounding.top && this.cursorY < titleBounding.bottom) {\r\n        cursor = 'move'\r\n      }\r\n    }\r\n\r\n    this.hitEdges = {\r\n      top: hitTop,\r\n      bottom: hitBottom,\r\n      left: hitLeft,\r\n      right: hitRight\r\n    }\r\n\r\n    if (cursor !== this.state.cursor){\r\n      this.setState({cursor:cursor})\r\n    }\r\n\r\n  }\r\n  _onDown(e){\r\n    this.allowTransition = false\r\n    this._cursorStatus(e)\r\n    const boundingBox = this.getFrameRect()\r\n    this.clicked = {x: e.clientX, y: e.clientY, boundingBox: boundingBox,\r\n                    frameTop: this.refs.frame.offsetTop, frameLeft: this.refs.frame.offsetLeft}\r\n  }\r\n  _onUp(e){\r\n    this.clicked = null\r\n    this._cursorStatus(e)\r\n  }\r\n  _onMove(e){\r\n    this._cursorStatus(e)\r\n    if (this.clicked !== null) {\r\n      this.forceUpdate()\r\n    }\r\n  }\r\n}\r\n\r\n\r\nDnR.defaultProps = {\r\n  minWidth: 20,\r\n  minHeight: 20,\r\n  edgeDetectionRange: 4,\r\n  theme: defaultTheme,\r\n  initialWidth: null,\r\n  initialHeight: null,\r\n  initialTop: null,\r\n  initialLeft: null,\r\n  animate: true,\r\n  attachedTo: window,\r\n}"]},"metadata":{},"sourceType":"module"}
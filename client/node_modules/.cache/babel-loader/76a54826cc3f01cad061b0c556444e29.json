{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\core\\\\pages\\\\Admin\\\\components\\\\ui\\\\PopoverIconButton.js\";\nimport React, { Component } from 'react';\nimport IconButton from './IconButton';\nimport InputPopover from './InputPopover';\nimport autobind from 'class-autobind';\nexport default class PopoverIconButton extends Component {\n  constructor() {\n    super(...arguments);\n    autobind(this);\n  }\n\n  render() {\n    let _this$props = this.props,\n        onTogglePopover = _this$props.onTogglePopover,\n        showPopover = _this$props.showPopover,\n        props = _objectWithoutProperties(_this$props, [\"onTogglePopover\", \"showPopover\"]); // eslint-disable-line no-unused-vars\n\n\n    return React.createElement(IconButton, Object.assign({}, props, {\n      onClick: onTogglePopover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), this._renderPopover());\n  }\n\n  _renderPopover() {\n    if (!this.props.showPopover) {\n      return null;\n    }\n\n    return React.createElement(InputPopover, {\n      defaultValue: this.props.defaultValue,\n      onSubmit: this._onSubmit,\n      onCancel: this._hidePopover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  }\n\n  _onSubmit() {\n    this.props.onSubmit(...arguments);\n  }\n\n  _hidePopover() {\n    if (this.props.showPopover) {\n      this.props.onTogglePopover(...arguments);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/core/pages/Admin/components/ui/PopoverIconButton.js"],"names":["React","Component","IconButton","InputPopover","autobind","PopoverIconButton","constructor","arguments","render","props","onTogglePopover","showPopover","_renderPopover","defaultValue","_onSubmit","_hidePopover","onSubmit"],"mappings":";;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAUA,eAAe,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AAGvDK,EAAAA,WAAW,GAAG;AACZ,UAAM,GAAGC,SAAT;AACAH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AAEDI,EAAAA,MAAM,GAAG;AAAA,sBACwC,KAAKC,KAD7C;AAAA,QACFC,eADE,eACFA,eADE;AAAA,QACeC,WADf,eACeA,WADf;AAAA,QAC+BF,KAD/B,8EACoD;;;AAC3D,WACE,oBAAC,UAAD,oBAAgBA,KAAhB;AAAuB,MAAA,OAAO,EAAEC,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACG,KAAKE,cAAL,EADH,CADF;AAKD;;AAEDA,EAAAA,cAAc,GAAG;AACf,QAAI,CAAC,KAAKH,KAAL,CAAWE,WAAhB,EAA6B;AAC3B,aAAO,IAAP;AACD;;AACD,WACE,oBAAC,YAAD;AACE,MAAA,YAAY,EAAE,KAAKF,KAAL,CAAWI,YAD3B;AAEE,MAAA,QAAQ,EAAE,KAAKC,SAFjB;AAGE,MAAA,QAAQ,EAAE,KAAKC,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAEDD,EAAAA,SAAS,GAAG;AACV,SAAKL,KAAL,CAAWO,QAAX,CAAoB,GAAGT,SAAvB;AACD;;AAEDQ,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKN,KAAL,CAAWE,WAAf,EAA4B;AAC1B,WAAKF,KAAL,CAAWC,eAAX,CAA2B,GAAGH,SAA9B;AACD;AACF;;AAtCsD","sourcesContent":["/* @flow */\n\nimport React, {Component} from 'react';\nimport IconButton from './IconButton';\nimport InputPopover from './InputPopover';\nimport autobind from 'class-autobind';\n\ntype Props = {\n  iconName: string;\n  showPopover: boolean,\n  defaultValue?: string,\n  onTogglePopover: Function,\n  onSubmit: Function;\n};\n\nexport default class PopoverIconButton extends Component {\n  props: Props;\n\n  constructor() {\n    super(...arguments);\n    autobind(this);\n  }\n\n  render() {\n    let {onTogglePopover, showPopover, ...props} = this.props; // eslint-disable-line no-unused-vars\n    return (\n      <IconButton {...props} onClick={onTogglePopover}>\n        {this._renderPopover()}\n      </IconButton>\n    );\n  }\n\n  _renderPopover() {\n    if (!this.props.showPopover) {\n      return null;\n    }\n    return (\n      <InputPopover\n        defaultValue={this.props.defaultValue}\n        onSubmit={this._onSubmit}\n        onCancel={this._hidePopover}\n      />\n    );\n  }\n\n  _onSubmit() {\n    this.props.onSubmit(...arguments);\n  }\n\n  _hidePopover() {\n    if (this.props.showPopover) {\n      this.props.onTogglePopover(...arguments);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
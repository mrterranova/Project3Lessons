{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cleanupTypes = exports.cleanupType = undefined;\n\nvar _onBackspace = require('./utils/onBackspace');\n\nvar _onBackspace2 = _interopRequireDefault(_onBackspace);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n} // Block-Types to be handled will be stored here\n\n\nvar types = [];\n\nvar cleanupEmptyPlugin = function cleanupEmptyPlugin() {\n  var config = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  types = config.types || [];\n  return {\n    handleKeyCommand: function handleKeyCommand(command, _ref) {\n      var getEditorState = _ref.getEditorState;\n      var setEditorState = _ref.setEditorState;\n      var editorState = getEditorState();\n      var newEditorState = null;\n\n      if (command.indexOf('backspace') === 0) {\n        newEditorState = (0, _onBackspace2.default)(editorState, types);\n      }\n\n      if (newEditorState) {\n        setEditorState(newEditorState);\n        return true;\n      }\n\n      return false;\n    }\n  };\n};\n\nexports.default = cleanupEmptyPlugin; // Use this to add one type to the list\n\nvar cleanupType = exports.cleanupType = function cleanupType(item) {\n  return types.push(item);\n}; // Use this to add multiple types to the list\n\n\nvar cleanupTypes = exports.cleanupTypes = function cleanupTypes(items) {\n  var _types;\n\n  return (_types = types).push.apply(_types, _toConsumableArray(items));\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/node_modules/draft-js-cleanup-empty-plugin/lib/index.js"],"names":["Object","defineProperty","exports","value","cleanupTypes","cleanupType","undefined","_onBackspace","require","_onBackspace2","_interopRequireDefault","obj","__esModule","default","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","types","cleanupEmptyPlugin","config","arguments","handleKeyCommand","command","_ref","getEditorState","setEditorState","editorState","newEditorState","indexOf","item","push","items","_types","apply"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,WAAR,GAAsBC,SAA7C;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,qBAAD,CAA1B;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACH,YAAD,CAA1C;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,SAASG,kBAAT,CAA4BC,GAA5B,EAAiC;AAAE,MAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AAAE,SAAK,IAAIG,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGH,KAAK,CAACD,GAAG,CAACK,MAAL,CAA5B,EAA0CF,CAAC,GAAGH,GAAG,CAACK,MAAlD,EAA0DF,CAAC,EAA3D,EAA+D;AAAEC,MAAAA,IAAI,CAACD,CAAD,CAAJ,GAAUH,GAAG,CAACG,CAAD,CAAb;AAAmB;;AAAC,WAAOC,IAAP;AAAc,GAA7H,MAAmI;AAAE,WAAOH,KAAK,CAACK,IAAN,CAAWN,GAAX,CAAP;AAAyB;AAAE,C,CAEnM;;;AACA,IAAIO,KAAK,GAAG,EAAZ;;AACA,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,GAA8B;AACrD,MAAIC,MAAM,GAAGC,SAAS,CAACL,MAAV,IAAoB,CAApB,IAAyBK,SAAS,CAAC,CAAD,CAAT,KAAiBnB,SAA1C,GAAsD,EAAtD,GAA2DmB,SAAS,CAAC,CAAD,CAAjF;AAEAH,EAAAA,KAAK,GAAGE,MAAM,CAACF,KAAP,IAAgB,EAAxB;AACA,SAAO;AACLI,IAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BC,OAA1B,EAAmCC,IAAnC,EAAyC;AACzD,UAAIC,cAAc,GAAGD,IAAI,CAACC,cAA1B;AACA,UAAIC,cAAc,GAAGF,IAAI,CAACE,cAA1B;AAEA,UAAIC,WAAW,GAAGF,cAAc,EAAhC;AACA,UAAIG,cAAc,GAAG,IAArB;;AACA,UAAIL,OAAO,CAACM,OAAR,CAAgB,WAAhB,MAAiC,CAArC,EAAwC;AACtCD,QAAAA,cAAc,GAAG,CAAC,GAAGvB,aAAa,CAACI,OAAlB,EAA2BkB,WAA3B,EAAwCT,KAAxC,CAAjB;AACD;;AAED,UAAIU,cAAJ,EAAoB;AAClBF,QAAAA,cAAc,CAACE,cAAD,CAAd;AACA,eAAO,IAAP;AACD;;AAAA,aAAO,KAAP;AACF;AAfI,GAAP;AAiBD,CArBD;;AAuBA9B,OAAO,CAACW,OAAR,GAAkBU,kBAAlB,C,CAEA;;AAEA,IAAIlB,WAAW,GAAGH,OAAO,CAACG,WAAR,GAAsB,SAASA,WAAT,CAAqB6B,IAArB,EAA2B;AACjE,SAAOZ,KAAK,CAACa,IAAN,CAAWD,IAAX,CAAP;AACD,CAFD,C,CAIA;;;AACA,IAAI9B,YAAY,GAAGF,OAAO,CAACE,YAAR,GAAuB,SAASA,YAAT,CAAsBgC,KAAtB,EAA6B;AACrE,MAAIC,MAAJ;;AAEA,SAAO,CAACA,MAAM,GAAGf,KAAV,EAAiBa,IAAjB,CAAsBG,KAAtB,CAA4BD,MAA5B,EAAoCvB,kBAAkB,CAACsB,KAAD,CAAtD,CAAP;AACD,CAJD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cleanupTypes = exports.cleanupType = undefined;\n\nvar _onBackspace = require('./utils/onBackspace');\n\nvar _onBackspace2 = _interopRequireDefault(_onBackspace);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// Block-Types to be handled will be stored here\nvar types = [];\nvar cleanupEmptyPlugin = function cleanupEmptyPlugin() {\n  var config = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  types = config.types || [];\n  return {\n    handleKeyCommand: function handleKeyCommand(command, _ref) {\n      var getEditorState = _ref.getEditorState;\n      var setEditorState = _ref.setEditorState;\n\n      var editorState = getEditorState();\n      var newEditorState = null;\n      if (command.indexOf('backspace') === 0) {\n        newEditorState = (0, _onBackspace2.default)(editorState, types);\n      }\n\n      if (newEditorState) {\n        setEditorState(newEditorState);\n        return true;\n      }return false;\n    }\n  };\n};\n\nexports.default = cleanupEmptyPlugin;\n\n// Use this to add one type to the list\n\nvar cleanupType = exports.cleanupType = function cleanupType(item) {\n  return types.push(item);\n};\n\n// Use this to add multiple types to the list\nvar cleanupTypes = exports.cleanupTypes = function cleanupTypes(items) {\n  var _types;\n\n  return (_types = types).push.apply(_types, _toConsumableArray(items));\n};"]},"metadata":{},"sourceType":"script"}
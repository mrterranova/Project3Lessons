{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Project3Lessons\\\\client\\\\src\\\\core\\\\pages\\\\Admin\\\\components\\\\PracticeDraft.js\";\nimport React, { Component } from 'react';\nimport { EditorState, convertToRaw, ContentState, convertFromRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport { Accordion, Card } from 'react-bootstrap';\nimport Axios from 'axios';\nimport { isAuth, getCookie } from '../../../../auth/helpers';\nimport { ToastContainer, toast } from 'react-toastify';\n\nclass PracticeDraft extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onEditorStateChange = editorState => {\n      this.setState({\n        editorState\n      });\n    };\n\n    this.state = {\n      values: '',\n      title: '',\n      body: '',\n      keyTerms: '',\n      scriptures: '',\n      editor: '',\n      token: getCookie('token'),\n      authorized: isAuth()._id\n    };\n    const content = window.localStorage.getItem('content');\n\n    if (content) {\n      this.state.editorState = EditorState.createWithContent(convertFromRaw(JSON.parse(content)));\n    } else {\n      this.state.editorState = EditorState.createEmpty();\n    }\n\n    const loadProfile = () => {\n      console.log(this.state.token);\n      Axios({\n        method: 'GET',\n        url: `${process.env.REACT_APP_API}/user/${this.state.authorized}`,\n        headers: {\n          Authorization: `Bearer ${this.state.token}`\n        }\n      }).then(response => {\n        console.log(response);\n      });\n    };\n\n    loadProfile();\n    const html = '';\n    const contentBlock = htmlToDraft(html);\n\n    if (contentBlock) {\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      const editorState = EditorState.createWithContent(contentState);\n      this.state = {\n        editorState\n      };\n    }\n  }\n\n  render() {\n    const handleChange = name => event => {\n      this.setState({\n        title: this.state.title,\n        keyTerms: this.state.keyTerms,\n        scriptures: this.state.scriptures,\n        body: this.state.body,\n        editor: this.state.editor,\n        [name]: event.target.value\n      });\n    };\n\n    const handleSubmit = () => {\n      const token = getCookie('token');\n      Axios({\n        method: 'POST',\n        url: `${process.env.REACT_APP_API}/admin/lesson/post`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        data: {\n          keyTerms: this.state.keyTerms,\n          title: this.state.title,\n          body: this.state.editor,\n          scriptures: this.state.scriptures\n        }\n      }).then(response => {\n        toast.success(\"A new lesson was posted\");\n      });\n    };\n\n    const _this$state = this.state,\n          editorState = _this$state.editorState,\n          token = _this$state.token;\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn-post-lesson\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: () => handleSubmit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bodyText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Start Lesson Here\"), React.createElement(Accordion.Collapse, {\n      eventKey: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Title of Lesson:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"title goes here...\",\n      style: {\n        width: '100%'\n      },\n      onChange: handleChange('title'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Searchable Key Terms:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"keyTerms\",\n      placeholder: \"write keyTerms with # and no spaces...\",\n      style: {\n        width: '100%'\n      },\n      onChange: handleChange('keyTerms'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Scriptures:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      name: \"scriptures\",\n      style: {\n        width: '100%'\n      },\n      onChange: handleChange('scriptures'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Paste from HTML:\"), React.createElement(\"textarea\", {\n      name: \"body\",\n      style: {\n        width: '100%'\n      },\n      onChange: handleChange('body'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Word Pad Lessons\"), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"editorState\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      editorState: editorState,\n      wrapperClassName: \"demo-wrapper\",\n      editorClassName: \"demo-editor\",\n      onEditorStateChange: this.onEditorStateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"HTML Raw Data\"), React.createElement(Accordion.Collapse, {\n      eventKey: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      name: \"editor\",\n      style: {\n        width: '100%',\n        height: '40vh'\n      },\n      editorState: editorState,\n      onEditorStateChange: this.onEditorStateChange,\n      value: draftToHtml(convertToRaw(editorState.getCurrentContent())),\n      onChange: handleChange('editor'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default PracticeDraft;","map":{"version":3,"sources":["C:/Users/User/Desktop/Project3Lessons/client/src/core/pages/Admin/components/PracticeDraft.js"],"names":["React","Component","EditorState","convertToRaw","ContentState","convertFromRaw","Editor","draftToHtml","htmlToDraft","Accordion","Card","Axios","isAuth","getCookie","ToastContainer","toast","PracticeDraft","constructor","props","onEditorStateChange","editorState","setState","state","values","title","body","keyTerms","scriptures","editor","token","authorized","_id","content","window","localStorage","getItem","createWithContent","JSON","parse","createEmpty","loadProfile","console","log","method","url","process","env","REACT_APP_API","headers","Authorization","then","response","html","contentBlock","contentState","createFromBlockArray","contentBlocks","render","handleChange","name","event","target","value","handleSubmit","data","success","width","Header","height","getCurrentContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { EditorState, convertToRaw, ContentState, convertFromRaw } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport { Accordion, Card } from 'react-bootstrap';\r\nimport Axios from 'axios';\r\nimport { isAuth, getCookie } from '../../../../auth/helpers';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\n\r\nclass PracticeDraft extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      values: '', \r\n      title: '',\r\n      body: '',\r\n      keyTerms: '',\r\n      scriptures:'', \r\n      editor:'',  \r\n      token: getCookie('token'), \r\n      authorized: isAuth()._id\r\n    };\r\n    const content = window.localStorage.getItem('content');\r\n    if (content) {\r\n      this.state.editorState = EditorState.createWithContent(convertFromRaw(JSON.parse(content)));\r\n    } else {\r\n      this.state.editorState = EditorState.createEmpty();\r\n    }\r\n    \r\n    const loadProfile = () => {\r\n      console.log(this.state.token)\r\n      Axios({\r\n        method: 'GET',\r\n        url: `${process.env.REACT_APP_API}/user/${this.state.authorized}`,\r\n        headers: {\r\n            Authorization: `Bearer ${this.state.token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n          console.log(response)\r\n      })\r\n    }\r\n\r\n    loadProfile();\r\n\r\n    const html = '';\r\n    const contentBlock = htmlToDraft(html);\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.state = {\r\n        editorState,\r\n      };\r\n    }\r\n  }\r\n\r\n  onEditorStateChange: Function = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n  \r\n  \r\n  render() {\r\n    const handleChange = (name) => event => {\r\n      this.setState({ title: this.state.title, keyTerms: this.state.keyTerms, scriptures: this.state.scriptures, body: this.state.body, editor: this.state.editor, [name]: event.target.value })\r\n  }\r\n\r\n    const handleSubmit = () => {\r\n      const token = getCookie('token')\r\n      Axios({\r\n        method: 'POST',\r\n        url: `${process.env.REACT_APP_API}/admin/lesson/post`,\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        data: { keyTerms: this.state.keyTerms, title: this.state.title, body: this.state.editor, scriptures: this.state.scriptures }\r\n    })\r\n        .then(response => {\r\n          toast.success(\"A new lesson was posted\")\r\n      })\r\n\r\n    }\r\n\r\n    const { editorState, token } = this.state;\r\n    return (\r\n      <form>\r\n        <ToastContainer />\r\n        <div>\r\n          <div className='btn-post-lesson'>\r\n            <input type=\"submit\" onClick={() => handleSubmit()}/>\r\n          </div>\r\n          <div className=\"bodyText\">\r\n            <Accordion defaultActiveKey=\"0\" style={{ width: '100%' }}>\r\n              <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                  Start Lesson Here\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"1\">\r\n                  <Card.Body>\r\n                    <label >Title of Lesson:</label>\r\n                    <br />\r\n                    <input type=\"text\" name=\"title\" placeholder=\"title goes here...\" style={{ width: '100%' }} onChange={handleChange('title')} />\r\n                    <label >Searchable Key Terms:</label>\r\n                    <br />\r\n                    <input type=\"text\" name=\"keyTerms\" placeholder=\"write keyTerms with # and no spaces...\" style={{ width: '100%' }} onChange={handleChange('keyTerms')} />\r\n                    <label >Scriptures:</label>\r\n                    <br />\r\n                    <textarea name=\"scriptures\" style={{ width: '100%' }} onChange={handleChange('scriptures')}></textarea>\r\n                    <label >Paste from HTML:</label>\r\n                    <textarea name=\"body\" style={{ width: '100%' }} onChange={handleChange('body')}></textarea>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n              <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                  Word Pad Lessons\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <Card.Body>\r\n                    <div className=\"editorState\">\r\n                      <Editor\r\n                        editorState={editorState}\r\n                        wrapperClassName=\"demo-wrapper\"\r\n                        editorClassName=\"demo-editor\"\r\n                        onEditorStateChange={this.onEditorStateChange}\r\n                      /></div>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n              <Card>\r\n                <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n                  HTML Raw Data\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"2\">\r\n                  <Card.Body>\r\n                    <textarea\r\n                      name=\"editor\"\r\n                      style={{ width: '100%', height: '40vh' }}\r\n                      editorState={editorState}\r\n                      onEditorStateChange={this.onEditorStateChange}\r\n                      value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n                      onChange= {handleChange('editor')}\r\n                    />\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PracticeDraft;"]},"metadata":{},"sourceType":"module"}
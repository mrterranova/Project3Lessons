{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\core\\\\pages\\\\Lesson\\\\UserBookmark.js\";\nimport React, { useState, useEffect, Fragment } from 'react'; // import Layout from '../core/Layout';\n\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { isAuth, getCookie } from '../../../auth/helpers';\nimport './style.css';\n\nconst UserBookmark = ({\n  history\n}) => {\n  const _useState = useState({\n    lessonName: \"\",\n    UserId: \"\",\n    LessonId: \"\",\n    BookmarkId: \"\",\n    isBookmarked: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const token = getCookie('token');\n\n  const loadProfile = () => {\n    //grabbing the URL from the window\n    const URLarray = window.document.URL.split(\"/\");\n    const URLarrVar = URLarray[URLarray.length - 1];\n    const URL_id = URLarrVar.split(\"?\"); //GET the correct logged user\n\n    axios({\n      method: 'GET',\n      url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      //set all the values of the user\n      if (response.data.notes.length === 0) {//if the user has notes identify if there is a bookmark that belong to this lesson\n      } else {\n        response.data.bookmarks.map(bookmark => {\n          if (bookmark.Lesson_id === URL_id[0]) {\n            setValues(_objectSpread({}, values, {\n              BookmarkId: bookmark._id,\n              isBookmarked: true\n            }));\n          }\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadProfile();\n  }, [loadProfile]);\n  const BookmarkId = values.BookmarkId,\n        isBookmarked = values.isBookmarked,\n        lessonName = values.lessonName; //handle all edits to the bookmark as a POST\n\n  const postBookmark = () => {\n    const URLarray = window.document.URL.split(\"/\");\n    const URLarrVar = URLarray[URLarray.length - 1];\n    const URL_id = URLarrVar.split(\"?\");\n    axios({\n      method: 'GET',\n      url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      const userId = response.data._id;\n      axios({\n        method: 'GET',\n        url: process.env.REACT_APP_API + '/lesson/' + URL_id\n      }).then(res => {\n        const lessonTitle = res.data.title;\n        axios({\n          method: \"POST\",\n          url: process.env.REACT_APP_API + '/user/bookmarks/' + URL_id[0],\n          headers: {\n            Authorization: 'Bearer ' + token\n          },\n          data: {\n            User_id: userId,\n            lesson_title: lessonTitle\n          }\n        }).then(response => {\n          setValues({\n            isBookmarked: true\n          });\n        });\n      });\n    });\n  };\n\n  const deleteBookmark = () => {\n    axios({\n      method: 'DELETE',\n      url: `${process.env.REACT_APP_API}/bookmarks/` + BookmarkId,\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(response => {\n      setValues({\n        isBookmarked: false\n      });\n    });\n  };\n\n  function Image() {\n    if (isBookmarked) {\n      return React.createElement(\"img\", {\n        src: '/images/bookmark-ribbon.png',\n        id: \"bookmark-lesson\",\n        alt: \"bookmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      });\n    } else {\n      return \"\";\n    }\n  }\n\n  function BookmarkButton() {\n    if (isBookmarked) {\n      return \"\";\n    } else {\n      return React.createElement(\"div\", {\n        id: \"btn-bookmark\",\n        onClick: () => postBookmark(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Bookmark\");\n    }\n  }\n\n  function RemoveBookmark() {\n    if (isBookmarked) {\n      return React.createElement(\"button\", {\n        id: \"btn-removeBookmark\",\n        onClick: () => deleteBookmark(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Remove\");\n    } else {\n      return \"\";\n    }\n  } // what the user is viewing\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(BookmarkButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(RemoveBookmark, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"bookmark-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Image, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })));\n};\n\nexport default UserBookmark;","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/core/pages/Lesson/UserBookmark.js"],"names":["React","useState","useEffect","Fragment","axios","isAuth","getCookie","UserBookmark","history","lessonName","UserId","LessonId","BookmarkId","isBookmarked","values","setValues","token","loadProfile","URLarray","window","document","URL","split","URLarrVar","length","URL_id","method","url","process","env","REACT_APP_API","_id","headers","Authorization","then","response","data","notes","bookmarks","map","bookmark","Lesson_id","postBookmark","userId","res","lessonTitle","title","User_id","lesson_title","deleteBookmark","Image","BookmarkButton","RemoveBookmark"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\r\n// import Layout from '../core/Layout';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { isAuth, getCookie } from '../../../auth/helpers';\r\nimport './style.css'\r\n\r\n\r\nconst UserBookmark = ({ history }) => {\r\n    const [values, setValues] = useState({\r\n        lessonName:\"\",\r\n        UserId: \"\",\r\n        LessonId: \"\",\r\n        BookmarkId: \"\", \r\n        isBookmarked: false\r\n    });\r\n\r\n    const token = getCookie('token');\r\n\r\n    \r\n    const loadProfile = () => {\r\n        //grabbing the URL from the window\r\n        const URLarray = window.document.URL.split(\"/\")\r\n        const URLarrVar = URLarray[URLarray.length - 1]\r\n        const URL_id = URLarrVar.split(\"?\")\r\n        \r\n        //GET the correct logged user\r\n        axios({\r\n            method: 'GET',\r\n            url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                //set all the values of the user\r\n                if (response.data.notes.length === 0) {\r\n                    //if the user has notes identify if there is a bookmark that belong to this lesson\r\n                } else {\r\n                    response.data.bookmarks.map(bookmark => {\r\n                        if (bookmark.Lesson_id === URL_id[0]) {\r\n                            setValues({ ...values, BookmarkId:bookmark._id, isBookmarked: true })\r\n                            \r\n                        }\r\n                    })\r\n                }\r\n                \r\n            })\r\n        };\r\n           \r\n        useEffect(() => {\r\n            loadProfile();\r\n        }, [loadProfile]);\r\n\r\n\r\n    const { BookmarkId, isBookmarked, lessonName,  } = values;\r\n\r\n    //handle all edits to the bookmark as a POST\r\n    const postBookmark = () => {\r\n        const URLarray = window.document.URL.split(\"/\")\r\n        const URLarrVar = URLarray[URLarray.length - 1]\r\n        const URL_id = URLarrVar.split(\"?\")\r\n        axios({\r\n            method: 'GET',\r\n            url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                const userId = response.data._id\r\n                axios({\r\n                    method: 'GET',\r\n                    url:process.env.REACT_APP_API+'/lesson/'+URL_id\r\n                }).then( res => {\r\n                    const lessonTitle = res.data.title\r\n                    axios({\r\n                        method: \"POST\",\r\n                        url: process.env.REACT_APP_API + '/user/bookmarks/' + URL_id[0],\r\n                        headers: {\r\n                            Authorization: 'Bearer ' + token\r\n                        },\r\n                        data: { User_id: userId, lesson_title: lessonTitle}\r\n                    }).then(response => {\r\n\r\n                        setValues({ isBookmarked: true})\r\n                    })\r\n                })\r\n            })\r\n    }\r\n\r\n    const deleteBookmark = () => {\r\n            axios({\r\n                method: 'DELETE',\r\n                url: `${process.env.REACT_APP_API}/bookmarks/` + BookmarkId,\r\n                headers: {\r\n                    Authorization: 'Bearer ' + token\r\n                }\r\n            })\r\n                .then(response => {\r\n                    setValues({ isBookmarked: false})\r\n                });\r\n    }\r\n\r\n    function Image() {\r\n        if (isBookmarked) {\r\n            return <img src={'/images/bookmark-ribbon.png'} id=\"bookmark-lesson\" alt=\"bookmark\"/>\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    function BookmarkButton() {\r\n        if (isBookmarked) {\r\n            return \"\"\r\n        } else {\r\n            return <div id=\"btn-bookmark\" onClick={()=>postBookmark()}>Bookmark</div>\r\n        }\r\n    }\r\n\r\n    function RemoveBookmark() {\r\n        if (isBookmarked) {\r\n            return <button id=\"btn-removeBookmark\" onClick={()=>deleteBookmark()}>Remove</button>\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n\r\n    // what the user is viewing\r\n    return (\r\n        <div>\r\n            <BookmarkButton />\r\n            <RemoveBookmark />\r\n        <div id=\"bookmark-container\">\r\n            <Image />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserBookmark;"]},"metadata":{},"sourceType":"module"}
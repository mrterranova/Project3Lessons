{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\core\\\\pages\\\\Private\\\\components\\\\Notes\\\\UserNotes.js\";\nimport React, { useState, useEffect, Fragment } from 'react'; // import Layout from '../core/Layout';\n\nimport axios from 'axios';\nimport { isAuth, getCookie, signout } from '../../../../../auth/helpers';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { List, ListNote } from \"./List\";\nimport { Link } from 'react-router-dom';\n\nconst UserNotes = ({\n  history\n}) => {\n  const _useState = useState({\n    notes: [],\n    showHideEdit: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const token = getCookie('token');\n  useEffect(() => {\n    loadProfile();\n  }, []);\n\n  const loadProfile = () => {\n    axios({\n      method: 'GET',\n      url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      const _response$data = response.data,\n            role = _response$data.role,\n            name = _response$data.name,\n            email = _response$data.email,\n            notes = _response$data.notes;\n      setValues(_objectSpread({}, values, {\n        role,\n        name,\n        email,\n        notes\n      }));\n    }).catch(error => {\n      if (error.response.status === 401) {\n        signout(() => {\n          history.push('/');\n        });\n      }\n    });\n  };\n\n  const name = values.name,\n        notes = values.notes; //show notes in form\n\n  const handleEditNotes = (t, c, b, d) => {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Title: \" + t,\n      type: \"text\",\n      className: \"form-control\",\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"Category: \" + c,\n      type: \"text\",\n      className: \"form-control\",\n      id: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"textArea\", {\n      className: \"note-textbox\",\n      id: \"bodyNotes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, b), React.createElement(\"div\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Created on: \", convertDate(d)), React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Save Edits\")));\n  }; //convert to date\n\n\n  const convertDate = date => {\n    let arr1 = date.split(\"T\");\n    let arr2 = arr1[0].split(\"-\");\n    let dateyear = arr2[2] + \", \" + arr2[0];\n\n    switch (arr2[1]) {\n      case '01':\n        return \"Jan. \" + dateyear;\n        break;\n\n      case '02':\n        return \"Feb. \" + dateyear;\n        break;\n\n      case '03':\n        return \"March \" + dateyear;\n        break;\n\n      case '04':\n        return \"Apr. \" + dateyear;\n        break;\n\n      case '05':\n        return \"May \" + dateyear;\n        break;\n\n      case '06':\n        return \"June \" + dateyear;\n        break;\n\n      case '07':\n        return \"July \" + dateyear;\n        break;\n\n      case '08':\n        return \"Aug. \" + dateyear;\n        break;\n\n      case '09':\n        return \"Sept. \" + dateyear;\n        break;\n\n      case '10':\n        return \"Oct. \" + dateyear;\n        break;\n\n      case '11':\n        return \"Nov. \" + dateyear;\n        break;\n\n      case '12':\n        return \"Dec. \" + dateyear;\n        break;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \" \", name, \"'s Notes \"), notes.length ? React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, notes.map(note => React.createElement(ListNote, {\n    key: note._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"nav-link\",\n    to: '/lesson/' + note.Lesson_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Click to go to lesson...\"), handleEditNotes(note.title, note.category, note.body, note.date)))) : React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"You have no notes saved to your portfolio.\"));\n};\n\nexport default UserNotes;","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/core/pages/Private/components/Notes/UserNotes.js"],"names":["React","useState","useEffect","Fragment","axios","isAuth","getCookie","signout","List","ListNote","Link","UserNotes","history","notes","showHideEdit","values","setValues","token","loadProfile","method","url","process","env","REACT_APP_API","_id","headers","Authorization","then","response","data","role","name","email","catch","error","status","push","handleEditNotes","t","c","b","d","convertDate","date","arr1","split","arr2","dateyear","length","map","note","Lesson_id","title","category","body"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\r\n// import Layout from '../core/Layout';\r\nimport axios from 'axios';\r\nimport { isAuth, getCookie, signout } from '../../../../../auth/helpers';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { List, ListNote } from \"./List\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst UserNotes = ({ history }) => {\r\n    const [values, setValues] = useState({\r\n        notes: [],\r\n        showHideEdit: false\r\n\r\n    });\r\n\r\n    const token = getCookie('token');\r\n\r\n    useEffect(() => {\r\n        loadProfile();\r\n    }, []);\r\n\r\n    const loadProfile = () => {\r\n        axios({\r\n            method: 'GET',\r\n            url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                const { role, name, email, notes } = response.data;\r\n                setValues({ ...values, role, name, email, notes });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 401) {\r\n                    signout(() => {\r\n                        history.push('/');\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const { name, notes } = values;\r\n\r\n    //show notes in form\r\n    const handleEditNotes = (t, c, b, d) => {\r\n        return (\r\n            <Fragment>\r\n                <div>\r\n                    <input placeholder={\"Title: \" + t} type=\"text\" className=\"form-control\" id=\"title\"></input>\r\n                    <input placeholder={\"Category: \" + c} type=\"text\" className=\"form-control\" id=\"category\"></input>\r\n                    <textArea className='note-textbox' id=\"bodyNotes\">{b}</textArea>\r\n                    <div className='date'>Created on: {convertDate(d)}</div>\r\n                    <button type=\"button\">Save Edits</button>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    //convert to date\r\n    const convertDate = (date) => {\r\n        let arr1 = date.split(\"T\")\r\n        let arr2 = arr1[0].split(\"-\")\r\n        let dateyear = arr2[2] + \", \" + arr2[0];\r\n        switch (arr2[1]) {\r\n            case '01': return \"Jan. \" + dateyear;\r\n                break;\r\n            case '02': return \"Feb. \" + dateyear;\r\n                break;\r\n            case '03': return \"March \" + dateyear;\r\n                break;\r\n            case '04': return \"Apr. \" + dateyear;\r\n                break;\r\n            case '05': return \"May \" + dateyear;\r\n                break;\r\n            case '06': return \"June \" + dateyear;\r\n                break;\r\n            case '07': return \"July \" + dateyear;\r\n                break;\r\n            case '08': return \"Aug. \" + dateyear;\r\n                break;\r\n            case '09': return \"Sept. \" + dateyear;\r\n                break;\r\n            case '10': return \"Oct. \" + dateyear;\r\n                break;\r\n            case '11': return \"Nov. \" + dateyear;\r\n                break;\r\n            case '12': return \"Dec. \" + dateyear;\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h3> {name}'s Notes </h3>\r\n            {notes.length ? (\r\n                <List>\r\n                    {notes.map(note => (\r\n                        <ListNote key={note._id}>\r\n                            <Link className=\"nav-link\" to={'/lesson/'+ note.Lesson_id}>Click to go to lesson...</Link>\r\n                            {handleEditNotes(note.title, note.category, note.body, note.date)}\r\n                        </ListNote>\r\n                    ))}\r\n                </List>\r\n            ) : (\r\n                    <h3>You have no notes saved to your portfolio.</h3>\r\n                )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserNotes;\r\n"]},"metadata":{},"sourceType":"module"}
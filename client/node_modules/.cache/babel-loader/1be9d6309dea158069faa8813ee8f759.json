{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (editorState, blockKey) {\n  var content = editorState.getCurrentContent();\n  var beforeKey = content.getKeyBefore(blockKey);\n  var beforeBlock = content.getBlockForKey(beforeKey); // Note: if the focused block is the first block then it is reduced to an\n  // unstyled block with no character\n\n  if (beforeBlock === undefined) {\n    var _targetRange = new _draftJs.SelectionState({\n      anchorKey: blockKey,\n      anchorOffset: 0,\n      focusKey: blockKey,\n      focusOffset: 1\n    }); // change the blocktype and remove the characterList entry with the sticker\n\n\n    content = _draftJs.Modifier.removeRange(content, _targetRange, 'backward');\n    content = _draftJs.Modifier.setBlockType(content, _targetRange, 'unstyled');\n\n    var _newState = _draftJs.EditorState.push(editorState, content, 'remove-block'); // force to new selection\n\n\n    var _newSelection = new _draftJs.SelectionState({\n      anchorKey: blockKey,\n      anchorOffset: 0,\n      focusKey: blockKey,\n      focusOffset: 0\n    });\n\n    return _draftJs.EditorState.forceSelection(_newState, _newSelection);\n  }\n\n  var targetRange = new _draftJs.SelectionState({\n    anchorKey: beforeKey,\n    anchorOffset: beforeBlock.getLength(),\n    focusKey: blockKey,\n    focusOffset: 1\n  });\n  content = _draftJs.Modifier.removeRange(content, targetRange, 'backward');\n\n  var newState = _draftJs.EditorState.push(editorState, content, 'remove-block'); // force to new selection\n\n\n  var newSelection = new _draftJs.SelectionState({\n    anchorKey: beforeKey,\n    anchorOffset: beforeBlock.getLength(),\n    focusKey: beforeKey,\n    focusOffset: beforeBlock.getLength()\n  });\n  return _draftJs.EditorState.forceSelection(newState, newSelection);\n};\n\nvar _draftJs = require('draft-js');","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/node_modules/draft-js-focus-plugin/lib/modifiers/removeBlock.js"],"names":["Object","defineProperty","exports","value","default","editorState","blockKey","content","getCurrentContent","beforeKey","getKeyBefore","beforeBlock","getBlockForKey","undefined","_targetRange","_draftJs","SelectionState","anchorKey","anchorOffset","focusKey","focusOffset","Modifier","removeRange","setBlockType","_newState","EditorState","push","_newSelection","forceSelection","targetRange","getLength","newState","newSelection","require"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIAD,OAAO,CAACE,OAAR,GAAkB,UAAUC,WAAV,EAAuBC,QAAvB,EAAiC;AACjD,MAAIC,OAAO,GAAGF,WAAW,CAACG,iBAAZ,EAAd;AAEA,MAAIC,SAAS,GAAGF,OAAO,CAACG,YAAR,CAAqBJ,QAArB,CAAhB;AACA,MAAIK,WAAW,GAAGJ,OAAO,CAACK,cAAR,CAAuBH,SAAvB,CAAlB,CAJiD,CAMjD;AACA;;AACA,MAAIE,WAAW,KAAKE,SAApB,EAA+B;AAC7B,QAAIC,YAAY,GAAG,IAAIC,QAAQ,CAACC,cAAb,CAA4B;AAC7CC,MAAAA,SAAS,EAAEX,QADkC;AAE7CY,MAAAA,YAAY,EAAE,CAF+B;AAG7CC,MAAAA,QAAQ,EAAEb,QAHmC;AAI7Cc,MAAAA,WAAW,EAAE;AAJgC,KAA5B,CAAnB,CAD6B,CAO7B;;;AACAb,IAAAA,OAAO,GAAGQ,QAAQ,CAACM,QAAT,CAAkBC,WAAlB,CAA8Bf,OAA9B,EAAuCO,YAAvC,EAAqD,UAArD,CAAV;AACAP,IAAAA,OAAO,GAAGQ,QAAQ,CAACM,QAAT,CAAkBE,YAAlB,CAA+BhB,OAA/B,EAAwCO,YAAxC,EAAsD,UAAtD,CAAV;;AACA,QAAIU,SAAS,GAAGT,QAAQ,CAACU,WAAT,CAAqBC,IAArB,CAA0BrB,WAA1B,EAAuCE,OAAvC,EAAgD,cAAhD,CAAhB,CAV6B,CAY7B;;;AACA,QAAIoB,aAAa,GAAG,IAAIZ,QAAQ,CAACC,cAAb,CAA4B;AAC9CC,MAAAA,SAAS,EAAEX,QADmC;AAE9CY,MAAAA,YAAY,EAAE,CAFgC;AAG9CC,MAAAA,QAAQ,EAAEb,QAHoC;AAI9Cc,MAAAA,WAAW,EAAE;AAJiC,KAA5B,CAApB;;AAMA,WAAOL,QAAQ,CAACU,WAAT,CAAqBG,cAArB,CAAoCJ,SAApC,EAA+CG,aAA/C,CAAP;AACD;;AAED,MAAIE,WAAW,GAAG,IAAId,QAAQ,CAACC,cAAb,CAA4B;AAC5CC,IAAAA,SAAS,EAAER,SADiC;AAE5CS,IAAAA,YAAY,EAAEP,WAAW,CAACmB,SAAZ,EAF8B;AAG5CX,IAAAA,QAAQ,EAAEb,QAHkC;AAI5Cc,IAAAA,WAAW,EAAE;AAJ+B,GAA5B,CAAlB;AAOAb,EAAAA,OAAO,GAAGQ,QAAQ,CAACM,QAAT,CAAkBC,WAAlB,CAA8Bf,OAA9B,EAAuCsB,WAAvC,EAAoD,UAApD,CAAV;;AACA,MAAIE,QAAQ,GAAGhB,QAAQ,CAACU,WAAT,CAAqBC,IAArB,CAA0BrB,WAA1B,EAAuCE,OAAvC,EAAgD,cAAhD,CAAf,CAtCiD,CAwCjD;;;AACA,MAAIyB,YAAY,GAAG,IAAIjB,QAAQ,CAACC,cAAb,CAA4B;AAC7CC,IAAAA,SAAS,EAAER,SADkC;AAE7CS,IAAAA,YAAY,EAAEP,WAAW,CAACmB,SAAZ,EAF+B;AAG7CX,IAAAA,QAAQ,EAAEV,SAHmC;AAI7CW,IAAAA,WAAW,EAAET,WAAW,CAACmB,SAAZ;AAJgC,GAA5B,CAAnB;AAMA,SAAOf,QAAQ,CAACU,WAAT,CAAqBG,cAArB,CAAoCG,QAApC,EAA8CC,YAA9C,CAAP;AACD,CAhDD;;AAkDA,IAAIjB,QAAQ,GAAGkB,OAAO,CAAC,UAAD,CAAtB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (editorState, blockKey) {\n  var content = editorState.getCurrentContent();\n\n  var beforeKey = content.getKeyBefore(blockKey);\n  var beforeBlock = content.getBlockForKey(beforeKey);\n\n  // Note: if the focused block is the first block then it is reduced to an\n  // unstyled block with no character\n  if (beforeBlock === undefined) {\n    var _targetRange = new _draftJs.SelectionState({\n      anchorKey: blockKey,\n      anchorOffset: 0,\n      focusKey: blockKey,\n      focusOffset: 1\n    });\n    // change the blocktype and remove the characterList entry with the sticker\n    content = _draftJs.Modifier.removeRange(content, _targetRange, 'backward');\n    content = _draftJs.Modifier.setBlockType(content, _targetRange, 'unstyled');\n    var _newState = _draftJs.EditorState.push(editorState, content, 'remove-block');\n\n    // force to new selection\n    var _newSelection = new _draftJs.SelectionState({\n      anchorKey: blockKey,\n      anchorOffset: 0,\n      focusKey: blockKey,\n      focusOffset: 0\n    });\n    return _draftJs.EditorState.forceSelection(_newState, _newSelection);\n  }\n\n  var targetRange = new _draftJs.SelectionState({\n    anchorKey: beforeKey,\n    anchorOffset: beforeBlock.getLength(),\n    focusKey: blockKey,\n    focusOffset: 1\n  });\n\n  content = _draftJs.Modifier.removeRange(content, targetRange, 'backward');\n  var newState = _draftJs.EditorState.push(editorState, content, 'remove-block');\n\n  // force to new selection\n  var newSelection = new _draftJs.SelectionState({\n    anchorKey: beforeKey,\n    anchorOffset: beforeBlock.getLength(),\n    focusKey: beforeKey,\n    focusOffset: beforeBlock.getLength()\n  });\n  return _draftJs.EditorState.forceSelection(newState, newSelection);\n};\n\nvar _draftJs = require('draft-js');"]},"metadata":{},"sourceType":"script"}
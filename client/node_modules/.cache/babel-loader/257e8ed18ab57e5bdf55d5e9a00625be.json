{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\core\\\\pages\\\\Private\\\\components\\\\Notes\\\\UserNotes.js\";\nimport React, { useState, useEffect } from 'react'; // import Layout from '../core/Layout';\n\nimport axios from 'axios';\nimport { isAuth, getCookie, signout } from '../../../../../auth/helpers';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { List, ListNote } from \"./List\";\n\nconst UserNotes = ({\n  history\n}) => {\n  const _useState = useState({\n    notes: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const token = getCookie('token');\n  useEffect(() => {\n    loadProfile();\n  }, []);\n\n  const handleChange = note => event => {\n    setValues(_objectSpread({}, values, {\n      [note]: event.target.value\n    }));\n  };\n\n  const loadProfile = () => {\n    axios({\n      method: 'GET',\n      url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      console.log('PRIVATE PROFILE UPDATE', response);\n      const _response$data = response.data,\n            role = _response$data.role,\n            name = _response$data.name,\n            email = _response$data.email,\n            notes = _response$data.notes;\n      setValues(_objectSpread({}, values, {\n        role,\n        name,\n        email,\n        notes\n      }));\n    }).catch(error => {\n      console.log('PRIVATE PROFILE UPDATE ERROR', error.response.data.error);\n\n      if (error.response.status === 401) {\n        signout(() => {\n          history.push('/');\n        });\n      }\n    });\n  };\n\n  const name = values.name,\n        notes = values.notes;\n\n  const convertDate = date => {\n    console.log(\"date\", date);\n    let arr1 = date.split(\"T\");\n    let arr2 = arr1[0].split(\"-\");\n    let dateyear = arr2[2] + \", \" + arr2[0];\n    console.log(arr2);\n\n    switch (arr2[1]) {\n      case '01':\n        return \"Jan. \" + dateyear;\n        break;\n\n      case '02':\n        return \"Feb. \" + dateyear;\n        break;\n\n      case '03':\n        return \"March \" + dateyear;\n        break;\n\n      case '04':\n        return \"Apr. \" + dateyear;\n        break;\n\n      case '05':\n        return \"May \" + dateyear;\n        break;\n\n      case '06':\n        return \"June \" + dateyear;\n        break;\n\n      case '07':\n        return \"July \" + dateyear;\n        break;\n\n      case '08':\n        return \"Aug. \" + dateyear;\n        break;\n\n      case '09':\n        return \"Sept. \" + dateyear;\n        break;\n\n      case '10':\n        return \"Oct. \" + dateyear;\n        break;\n\n      case '11':\n        return \"Nov. \" + dateyear;\n        break;\n\n      case '12':\n        return \"Dec. \" + dateyear;\n        break;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \" \", name, \"'s Notes \"), notes.length ? React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, notes.map(note => React.createElement(ListNote, {\n    key: note._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, note.title), React.createElement(\"div\", {\n    className: \"category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, note.category), React.createElement(\"textArea\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, note.body), React.createElement(\"div\", {\n    className: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, convertDate(note.date)), React.createElement(\"div\", {\n    className: \"link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, note.link)))) : React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"You have no notes saved to your portfolio.\"));\n};\n\nexport default UserNotes;","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/core/pages/Private/components/Notes/UserNotes.js"],"names":["React","useState","useEffect","axios","isAuth","getCookie","signout","List","ListNote","UserNotes","history","notes","values","setValues","token","loadProfile","handleChange","note","event","target","value","method","url","process","env","REACT_APP_API","_id","headers","Authorization","then","response","console","log","data","role","name","email","catch","error","status","push","convertDate","date","arr1","split","arr2","dateyear","length","map","title","category","body","link"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import Layout from '../core/Layout';\r\nimport axios from 'axios';\r\nimport { isAuth, getCookie, signout } from '../../../../../auth/helpers';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { List, ListNote } from \"./List\"\r\n\r\n\r\nconst UserNotes = ({ history }) => {\r\n    const [values, setValues] = useState({\r\n        notes: []\r\n    });\r\n\r\n    const token = getCookie('token');\r\n\r\n    useEffect(() => {\r\n        loadProfile();\r\n    }, []);\r\n\r\n    const handleChange = note => event => {\r\n        setValues({ ...values, [note]: event.target.value });\r\n    };\r\n\r\n    const loadProfile = () => {\r\n        axios({\r\n            method: 'GET',\r\n            url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                console.log('PRIVATE PROFILE UPDATE', response);\r\n                const { role, name, email, notes } = response.data;\r\n                setValues({ ...values, role, name, email, notes });\r\n            })\r\n            .catch(error => {\r\n                console.log('PRIVATE PROFILE UPDATE ERROR', error.response.data.error);\r\n                if (error.response.status === 401) {\r\n                    signout(() => {\r\n                        history.push('/');\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const { name, notes } = values;\r\n\r\n    const convertDate = (date) => {\r\n        console.log(\"date\", date)\r\n        let arr1 = date.split(\"T\")\r\n        let arr2 = arr1[0].split(\"-\")\r\n        let dateyear = arr2[2] + \", \" + arr2[0];\r\n        console.log(arr2)\r\n        switch (arr2[1]) {\r\n            case '01': return \"Jan. \" + dateyear;\r\n                break;\r\n            case '02': return \"Feb. \" + dateyear;\r\n                break;\r\n            case '03': return \"March \" + dateyear;\r\n                break;\r\n            case '04': return \"Apr. \" + dateyear;\r\n                break;\r\n            case '05': return \"May \" + dateyear;\r\n                break;\r\n            case '06': return \"June \" + dateyear;\r\n                break;\r\n            case '07': return \"July \" + dateyear;\r\n                break;\r\n            case '08': return \"Aug. \" + dateyear;\r\n                break;\r\n            case '09': return \"Sept. \" + dateyear;\r\n                break;\r\n            case '10': return \"Oct. \" + dateyear;\r\n                break;\r\n            case '11': return \"Nov. \" + dateyear;\r\n                break;\r\n            case '12': return \"Dec. \" + dateyear;\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h3> {name}'s Notes </h3>\r\n            {notes.length ? (\r\n                <List>\r\n                    {notes.map(note => (\r\n                        <ListNote key={note._id}>\r\n                            <div className='title'>{note.title}</div>\r\n                            <div className='category'>{note.category}</div>\r\n                            <textArea>{note.body}</textArea>\r\n                            <div className='date'>{convertDate(note.date)}</div>\r\n                            <div className='link'>{note.link}</div>\r\n                        </ListNote>\r\n                    ))}\r\n                </List>\r\n            ) : (\r\n                    <h3>You have no notes saved to your portfolio.</h3>\r\n                )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserNotes;\r\n"]},"metadata":{},"sourceType":"module"}
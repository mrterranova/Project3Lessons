{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getToolbarActions = exports.getToolbarPosition = exports.shouldRenderToolbar = undefined;\n\nvar _draftJs = require('draft-js');\n\nvar _inlineStyles = require('../actions/inlineStyles');\n\nvar _inlineStyles2 = _interopRequireDefault(_inlineStyles);\n\nvar _custom = require('../actions/custom');\n\nvar _custom2 = _interopRequireDefault(_custom);\n\nvar _getSelection = require('../utils/getSelection');\n\nvar _getSelection2 = _interopRequireDefault(_getSelection);\n\nvar _getSelectionRect = require('../utils/getSelectionRect');\n\nvar _getSelectionRect2 = _interopRequireDefault(_getSelectionRect);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n} // Helper function, is toolbar necessary / is a text selected?\n\n\nvar shouldRenderToolbar = exports.shouldRenderToolbar = function shouldRenderToolbar(editorState) {\n  var selected = (0, _getSelection2.default)();\n  var selectionState = editorState ? editorState.getSelection() : null;\n  return !!selected.rangeCount && !selectionState.isCollapsed();\n}; // Helper function, is toolbar necessary / is a text selected?\n\n\nvar getToolbarPosition = exports.getToolbarPosition = function getToolbarPosition() {\n  return (0, _getSelectionRect2.default)((0, _getSelection2.default)());\n}; // Toggle the block type\n\n/* function toggleBlockType(editorState, setEditorState, blockType) {\n  setEditorState(RichUtils.toggleBlockType(\n    editorState,\n    blockType\n  ));\n} */\n\n\nvar getToolbarActions = exports.getToolbarActions = function getToolbarActions(config, editorState, setEditorState) {\n  var inlineStyles = config.inlineStyles || _inlineStyles2.default;\n  var customActions = config.clearTextActions ? config.textActions || [] : [].concat(_toConsumableArray(_custom2.default), _toConsumableArray(config.textActions || [])); // Get current style to check what actions are toggled\n\n  var currentStyle = editorState.getCurrentInlineStyle(); // Get current block\n\n  var block = editorState.getCurrentContent().getBlockForKey(editorState.getSelection().getStartKey());\n  return [].concat(_toConsumableArray(inlineStyles.map(function (action) {\n    return {\n      icon: action.icon,\n      button: action.button,\n      label: action.label,\n      active: currentStyle.has(action.style),\n      toggle: function toggle() {\n        return setEditorState(_draftJs.RichUtils.toggleInlineStyle(editorState, action.style));\n      }\n    };\n  })), _toConsumableArray(customActions.map(function (action) {\n    return {\n      icon: action.icon,\n      button: action.button,\n      label: action.label,\n      active: typeof action.active === 'function' ? action.active(block, editorState) : action.active,\n      toggle: function toggle() {\n        return action.toggle(block, action, editorState, setEditorState);\n      }\n    };\n  })));\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/node_modules/draft-js-toolbar-plugin/lib/utils/textToolbar.js"],"names":["Object","defineProperty","exports","value","getToolbarActions","getToolbarPosition","shouldRenderToolbar","undefined","_draftJs","require","_inlineStyles","_inlineStyles2","_interopRequireDefault","_custom","_custom2","_getSelection","_getSelection2","_getSelectionRect","_getSelectionRect2","obj","__esModule","default","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","editorState","selected","selectionState","getSelection","rangeCount","isCollapsed","config","setEditorState","inlineStyles","customActions","clearTextActions","textActions","concat","currentStyle","getCurrentInlineStyle","block","getCurrentContent","getBlockForKey","getStartKey","map","action","icon","button","label","active","has","style","toggle","RichUtils","toggleInlineStyle"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getToolbarActions = exports.getToolbarPosition = exports.shouldRenderToolbar = undefined;\n\nvar _draftJs = require('draft-js');\n\nvar _inlineStyles = require('../actions/inlineStyles');\n\nvar _inlineStyles2 = _interopRequireDefault(_inlineStyles);\n\nvar _custom = require('../actions/custom');\n\nvar _custom2 = _interopRequireDefault(_custom);\n\nvar _getSelection = require('../utils/getSelection');\n\nvar _getSelection2 = _interopRequireDefault(_getSelection);\n\nvar _getSelectionRect = require('../utils/getSelectionRect');\n\nvar _getSelectionRect2 = _interopRequireDefault(_getSelectionRect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// Helper function, is toolbar necessary / is a text selected?\nvar shouldRenderToolbar = exports.shouldRenderToolbar = function shouldRenderToolbar(editorState) {\n  var selected = (0, _getSelection2.default)();\n  var selectionState = editorState ? editorState.getSelection() : null;\n  return !!selected.rangeCount && !selectionState.isCollapsed();\n};\n\n// Helper function, is toolbar necessary / is a text selected?\nvar getToolbarPosition = exports.getToolbarPosition = function getToolbarPosition() {\n  return (0, _getSelectionRect2.default)((0, _getSelection2.default)());\n};\n\n// Toggle the block type\n/* function toggleBlockType(editorState, setEditorState, blockType) {\n  setEditorState(RichUtils.toggleBlockType(\n    editorState,\n    blockType\n  ));\n} */\n\nvar getToolbarActions = exports.getToolbarActions = function getToolbarActions(config, editorState, setEditorState) {\n  var inlineStyles = config.inlineStyles || _inlineStyles2.default;\n  var customActions = config.clearTextActions ? config.textActions || [] : [].concat(_toConsumableArray(_custom2.default), _toConsumableArray(config.textActions || []));\n\n  // Get current style to check what actions are toggled\n  var currentStyle = editorState.getCurrentInlineStyle();\n  // Get current block\n  var block = editorState.getCurrentContent().getBlockForKey(editorState.getSelection().getStartKey());\n\n  return [].concat(_toConsumableArray(inlineStyles.map(function (action) {\n    return {\n      icon: action.icon,\n      button: action.button,\n      label: action.label,\n      active: currentStyle.has(action.style),\n      toggle: function toggle() {\n        return setEditorState(_draftJs.RichUtils.toggleInlineStyle(editorState, action.style));\n      }\n    };\n  })), _toConsumableArray(customActions.map(function (action) {\n    return {\n      icon: action.icon,\n      button: action.button,\n      label: action.label,\n      active: typeof action.active === 'function' ? action.active(block, editorState) : action.active,\n      toggle: function toggle() {\n        return action.toggle(block, action, editorState, setEditorState);\n      }\n    };\n  })));\n};"]},"metadata":{},"sourceType":"script"}
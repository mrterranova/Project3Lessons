{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\auth\\\\ResetPassword.js\";\nimport React, { useState, useEffect } from 'react';\nimport jwt from 'jsonwebtoken';\nimport Layout from '../core/Layout';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst Reset = ({\n  match\n}) => {\n  // props.match from react router dom\n  const _useState = useState({\n    name: '',\n    token: '',\n    newPassword: '',\n    buttonText: 'Reset password'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  useEffect(() => {\n    let token = match.params.token;\n\n    let _jwt$decode = jwt.decode(token),\n        name = _jwt$decode.name; // console.log(name);\n\n\n    if (token) {\n      setValues(_objectSpread({}, values, {\n        name,\n        token\n      }));\n    }\n  }, []);\n  const name = values.name,\n        token = values.token,\n        newPassword = values.newPassword,\n        buttonText = values.buttonText;\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      newPassword: event.target.value\n    }));\n  };\n\n  const clickSubmit = event => {\n    event.preventDefault();\n    setValues(_objectSpread({}, values, {\n      buttonText: 'Submitting'\n    }));\n    axios({\n      method: 'PUT',\n      url: `${process.env.REACT_APP_API}/reset-password`,\n      data: {\n        newPassword,\n        resetPasswordLink: token\n      }\n    }).then(response => {\n      console.log('RESET PASSWORD SUCCESS', response);\n      toast.success(response.data.message);\n      setValues(_objectSpread({}, values, {\n        buttonText: 'Done'\n      }));\n    }).catch(error => {\n      console.log('RESET PASSWORD ERROR', error.response.data);\n      toast.error(error.response.data.error);\n      setValues(_objectSpread({}, values, {\n        buttonText: 'Reset password'\n      }));\n    });\n  };\n\n  const passwordResetForm = () => React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    onChange: handleChange,\n    value: newPassword,\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Type new password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: clickSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, buttonText)));\n\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"p-5 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Hey \", name, \", Type your new password\"), ResetPasswordForm()));\n};\n\nexport default Reset;","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/auth/ResetPassword.js"],"names":["React","useState","useEffect","jwt","Layout","axios","ToastContainer","toast","Reset","match","name","token","newPassword","buttonText","values","setValues","params","decode","handleChange","event","target","value","clickSubmit","preventDefault","method","url","process","env","REACT_APP_API","data","resetPasswordLink","then","response","console","log","success","message","catch","error","passwordResetForm","ResetPasswordForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport jwt from 'jsonwebtoken';\r\nimport Layout from '../core/Layout';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\nconst Reset = ({ match }) => {\r\n    // props.match from react router dom\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        token: '',\r\n        newPassword: '',\r\n        buttonText: 'Reset password'\r\n    });\r\n\r\n    useEffect(() => {\r\n        let token = match.params.token;\r\n        let { name } = jwt.decode(token);\r\n        // console.log(name);\r\n        if (token) {\r\n            setValues({ ...values, name, token });\r\n        }\r\n    }, []);\r\n\r\n    const { name, token, newPassword, buttonText } = values;\r\n\r\n    const handleChange = event => {\r\n        setValues({ ...values, newPassword: event.target.value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, buttonText: 'Submitting' });\r\n        axios({\r\n            method: 'PUT',\r\n            url: `${process.env.REACT_APP_API}/reset-password`,\r\n            data: { newPassword, resetPasswordLink: token }\r\n        })\r\n            .then(response => {\r\n                console.log('RESET PASSWORD SUCCESS', response);\r\n                toast.success(response.data.message);\r\n                setValues({ ...values, buttonText: 'Done' });\r\n            })\r\n            .catch(error => {\r\n                console.log('RESET PASSWORD ERROR', error.response.data);\r\n                toast.error(error.response.data.error);\r\n                setValues({ ...values, buttonText: 'Reset password' });\r\n            });\r\n    };\r\n\r\n    const passwordResetForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input\r\n                    onChange={handleChange}\r\n                    value={newPassword}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Type new password\"\r\n                    required\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <button className=\"btn btn-primary\" onClick={clickSubmit}>\r\n                    {buttonText}\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"col-md-6 offset-md-3\">\r\n                <ToastContainer />\r\n                <h1 className=\"p-5 text-center\">Hey {name}, Type your new password</h1>\r\n                {ResetPasswordForm()}\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Reset;"]},"metadata":{},"sourceType":"module"}
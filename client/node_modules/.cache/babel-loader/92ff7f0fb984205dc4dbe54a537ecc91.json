{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\core\\\\pages\\\\Private\\\\components\\\\Notes\\\\UserNotes.js\";\nimport React, { useState, useEffect, Fragment } from 'react'; // import Layout from '../core/Layout';\n\nimport axios from 'axios';\nimport { isAuth, getCookie, signout } from '../../../../../auth/helpers';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { List, ListNote } from \"../List\";\nimport { Link } from 'react-router-dom';\nimport { toast, ToastType } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst UserNotes = ({\n  history\n}) => {\n  const _useState = useState({\n    notes: [],\n    title: \"\",\n    category: \"\",\n    body: \"\",\n    showHideEdit: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const token = getCookie('token');\n  useEffect(() => {\n    loadProfile();\n  }, []);\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      title: title,\n      category: category,\n      body: body,\n      [name]: event.target.value\n    }));\n  };\n\n  const loadProfile = () => {\n    axios({\n      method: 'GET',\n      url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      const _response$data = response.data,\n            role = _response$data.role,\n            name = _response$data.name,\n            email = _response$data.email,\n            notes = _response$data.notes;\n      setValues(_objectSpread({}, values, {\n        role,\n        name,\n        email,\n        notes\n      }));\n    }).catch(error => {\n      if (error.response.status === 401) {\n        signout(() => {\n          history.push('/');\n        });\n      }\n    });\n  };\n\n  const name = values.name,\n        notes = values.notes,\n        title = values.title,\n        body = values.body,\n        category = values.category; //show notes in form\n\n  const handleEditNotes = (t, c, b, l, d, i) => {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Title: \" + t,\n      onChange: handleChange('title'),\n      type: \"text\",\n      name: \"title\",\n      className: \"form-control\",\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"nav-link\",\n      to: '/lesson/' + l,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Click to go to lesson...\"), React.createElement(\"input\", {\n      placeholder: \"Category: \" + c,\n      onChange: handleChange('category'),\n      name: \"category\",\n      type: \"text\",\n      className: \"form-control\",\n      id: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: \"note-textbox\",\n      onChange: handleChange('body'),\n      id: \"bodyNotes\",\n      name: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, b), React.createElement(\"div\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Created on: \", convertDate(d)), React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => handleSubmitEdit(i),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Submit Edit\"))), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"deleteNote-btn\",\n      onClick: () => RemoveNote(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Delete Note\"));\n  }; //convert to date\n\n\n  const convertDate = date => {\n    let arr1 = date.split(\"T\");\n    let arr2 = arr1[0].split(\"-\");\n    let dateyear = arr2[2] + \", \" + arr2[0];\n\n    switch (arr2[1]) {\n      case '01':\n        return \"Jan. \" + dateyear;\n        break;\n\n      case '02':\n        return \"Feb. \" + dateyear;\n        break;\n\n      case '03':\n        return \"March \" + dateyear;\n        break;\n\n      case '04':\n        return \"Apr. \" + dateyear;\n        break;\n\n      case '05':\n        return \"May \" + dateyear;\n        break;\n\n      case '06':\n        return \"June \" + dateyear;\n        break;\n\n      case '07':\n        return \"July \" + dateyear;\n        break;\n\n      case '08':\n        return \"Aug. \" + dateyear;\n        break;\n\n      case '09':\n        return \"Sept. \" + dateyear;\n        break;\n\n      case '10':\n        return \"Oct. \" + dateyear;\n        break;\n\n      case '11':\n        return \"Nov. \" + dateyear;\n        break;\n\n      case '12':\n        return \"Dec. \" + dateyear;\n        break;\n    }\n  };\n\n  const RemoveNote = Note_id => {\n    axios({\n      method: 'DELETE',\n      url: `${process.env.REACT_APP_API}/notes/` + Note_id,\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(response => {\n      console.log('Note was deleted', response);\n      toast.success('Note was Removed!');\n    });\n  };\n\n  const handleSubmitEdit = Note_id => {\n    alert(process.env.REACT_APP_API + '/notes/' + Note_id);\n    alert(\"title\", {\n      title\n    });\n    alert(\"body\", body);\n    alert(\"category\", category);\n    axios({\n      method: \"PUT\",\n      url: process.env.REACT_APP_API + '/notes/' + Note_id,\n      headers: {\n        Authorization: 'Bearer ' + token\n      },\n      data: {\n        title,\n        body,\n        category\n      }\n    }).then(response => {\n      console.log(\"Note changed\", response);\n      alert(title);\n      toast.success(\"Note has changed!\");\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    id: \"note-name-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \" \", name, \"'s Notes \"), notes.length ? React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, notes.map(note => React.createElement(ListNote, {\n    key: note._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, handleEditNotes(note.title, note.category, note.body, note.Lesson_id, note.date, note._id)))) : React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"You have no notes saved to your portfolio.\"));\n};\n\nexport default UserNotes;","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/core/pages/Private/components/Notes/UserNotes.js"],"names":["React","useState","useEffect","Fragment","axios","isAuth","getCookie","signout","List","ListNote","Link","toast","ToastType","UserNotes","history","notes","title","category","body","showHideEdit","values","setValues","token","loadProfile","handleChange","name","event","target","value","method","url","process","env","REACT_APP_API","_id","headers","Authorization","then","response","data","role","email","catch","error","status","push","handleEditNotes","t","c","b","l","d","i","convertDate","handleSubmitEdit","RemoveNote","date","arr1","split","arr2","dateyear","Note_id","console","log","success","alert","length","map","note","Lesson_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\r\n// import Layout from '../core/Layout';\r\nimport axios from 'axios';\r\nimport { isAuth, getCookie, signout } from '../../../../../auth/helpers';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { List, ListNote } from \"../List\";\r\nimport { Link } from 'react-router-dom';\r\nimport { toast, ToastType } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\n\r\n\r\nconst UserNotes = ({ history }) => {\r\n    const [values, setValues] = useState({\r\n        notes: [],\r\n        title: \"\",\r\n        category: \"\",\r\n        body: \"\",\r\n        showHideEdit: false\r\n    });\r\n\r\n    \r\n\r\n    const token = getCookie('token');\r\n\r\n    useEffect(() => {\r\n        loadProfile();\r\n    }, []);\r\n\r\n    const handleChange = (name) => event => {\r\n        setValues({ ...values, title: title, category: category, body: body, [name]: event.target.value })\r\n    }\r\n\r\n    const loadProfile = () => {\r\n        axios({\r\n            method: 'GET',\r\n            url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                const { role, name, email, notes } = response.data;\r\n                setValues({ ...values, role, name, email, notes});\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 401) {\r\n                    signout(() => {\r\n                        history.push('/');\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const { name, notes, title, body, category } = values;\r\n\r\n    //show notes in form\r\n    const handleEditNotes = (t, c, b, l, d, i) => {\r\n        return (\r\n            <Fragment>\r\n                <div>\r\n                    <form>\r\n                        <input placeholder={\"Title: \" + t} onChange={handleChange('title')} type=\"text\" name=\"title\" className=\"form-control\" id=\"title\"></input>\r\n                        <Link className=\"nav-link\" to={'/lesson/' + l}>Click to go to lesson...</Link>\r\n                        <input placeholder={\"Category: \" + c} onChange={handleChange('category')} name=\"category\" type=\"text\" className=\"form-control\" id=\"category\"></input>\r\n                        <textarea className='note-textbox' onChange={handleChange('body')} id=\"bodyNotes\" name=\"body\">{b}</textarea>\r\n                        <div className='date'>Created on: {convertDate(d)}</div>\r\n                        <button className=\"btn btn-warning\" onClick={() => handleSubmitEdit(i)} type=\"submit\">Submit Edit</button>\r\n                    </form>\r\n                </div>\r\n                <button type=\"button\" className=\"deleteNote-btn\" onClick={() => RemoveNote(i)}>Delete Note</button>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    //convert to date\r\n    const convertDate = (date) => {\r\n        let arr1 = date.split(\"T\")\r\n        let arr2 = arr1[0].split(\"-\")\r\n        let dateyear = arr2[2] + \", \" + arr2[0];\r\n        switch (arr2[1]) {\r\n            case '01': return \"Jan. \" + dateyear;\r\n                break;\r\n            case '02': return \"Feb. \" + dateyear;\r\n                break;\r\n            case '03': return \"March \" + dateyear;\r\n                break;\r\n            case '04': return \"Apr. \" + dateyear;\r\n                break;\r\n            case '05': return \"May \" + dateyear;\r\n                break;\r\n            case '06': return \"June \" + dateyear;\r\n                break;\r\n            case '07': return \"July \" + dateyear;\r\n                break;\r\n            case '08': return \"Aug. \" + dateyear;\r\n                break;\r\n            case '09': return \"Sept. \" + dateyear;\r\n                break;\r\n            case '10': return \"Oct. \" + dateyear;\r\n                break;\r\n            case '11': return \"Nov. \" + dateyear;\r\n                break;\r\n            case '12': return \"Dec. \" + dateyear;\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    const RemoveNote = (Note_id) => {\r\n        axios({\r\n            method: 'DELETE',\r\n            url: `${process.env.REACT_APP_API}/notes/` + Note_id,\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n            .then(response => {\r\n                console.log('Note was deleted', response);\r\n                toast.success('Note was Removed!');\r\n            });\r\n    }\r\n\r\n    const handleSubmitEdit = (Note_id) => {\r\n        alert(process.env.REACT_APP_API + '/notes/'+ Note_id)\r\n        alert(\"title\", {title})\r\n        alert(\"body\", body)\r\n        alert(\"category\", category)\r\n        axios({\r\n            method: \"PUT\",\r\n            url: process.env.REACT_APP_API + '/notes/'+ Note_id,\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            },\r\n            data: {title, body, category}\r\n        }).then(response => {\r\n            console.log(\"Note changed\", response)\r\n            alert(title)\r\n            toast.success(\"Note has changed!\")\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n            <div className=\"container\">\r\n                <h3 id=\"note-name-header\"> {name}'s Notes </h3>\r\n                {notes.length ? (\r\n                    <List>\r\n                        {notes.map(note => (\r\n                            <ListNote key={note._id}>\r\n                                {\r\n                                handleEditNotes(note.title, note.category, note.body, note.Lesson_id, note.date, note._id)\r\n                                }\r\n                            </ListNote>\r\n                        ))}\r\n                    </List>\r\n                ) : (\r\n                        <h3>You have no notes saved to your portfolio.</h3>\r\n                    )}\r\n\r\n            </div>\r\n        );\r\n    };\r\n\r\n    export default UserNotes;\r\n"]},"metadata":{},"sourceType":"module"}
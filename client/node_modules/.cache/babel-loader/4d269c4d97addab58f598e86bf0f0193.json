{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\core\\\\pages\\\\Admin\\\\components\\\\ui\\\\InputPopover.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport IconButton from './IconButton';\nimport ButtonGroup from './ButtonGroup';\nimport autobind from 'class-autobind';\nimport cx from 'classnames';\nimport styles from './InputPopover.css';\nexport default class InputPopover extends Component {\n  constructor() {\n    super(...arguments);\n    autobind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this._onDocumentClick);\n    document.addEventListener('keydown', this._onDocumentKeydown);\n\n    if (this._inputRef) {\n      this._inputRef.focus();\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this._onDocumentClick);\n    document.removeEventListener('keydown', this._onDocumentKeydown);\n  }\n\n  render() {\n    let props = this.props;\n    let className = cx(props.className, styles.root);\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.inner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: this._setInputRef,\n      defaultValue: props.defaultValue,\n      type: \"text\",\n      placeholder: \"https://example.com/\",\n      className: styles.input,\n      onKeyPress: this._onInputKeyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(ButtonGroup, {\n      className: styles.buttonGroup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      label: \"Cancel\",\n      iconName: \"cancel\",\n      onClick: props.onCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(IconButton, {\n      label: \"Submit\",\n      iconName: \"accept\",\n      onClick: this._onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))));\n  }\n\n  _setInputRef(inputElement) {\n    this._inputRef = inputElement;\n  }\n\n  _onInputKeyPress(event) {\n    if (event.which === 13) {\n      // Avoid submitting a <form> somewhere up the element tree.\n      event.preventDefault();\n\n      this._onSubmit();\n    }\n  }\n\n  _onSubmit() {\n    let value = this._inputRef ? this._inputRef.value : '';\n    this.props.onSubmit(value);\n  }\n\n  _onDocumentClick(event) {\n    let rootNode = ReactDOM.findDOMNode(this);\n\n    if (!rootNode.contains(event.target)) {\n      // Here we pass the event so the parent can manage focus.\n      this.props.onCancel(event);\n    }\n  }\n\n  _onDocumentKeydown(event) {\n    if (event.keyCode === 27) {\n      this.props.onCancel();\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/core/pages/Admin/components/ui/InputPopover.js"],"names":["React","Component","ReactDOM","IconButton","ButtonGroup","autobind","cx","styles","InputPopover","constructor","arguments","componentDidMount","document","addEventListener","_onDocumentClick","_onDocumentKeydown","_inputRef","focus","componentWillUnmount","removeEventListener","render","props","className","root","inner","_setInputRef","defaultValue","input","_onInputKeyPress","buttonGroup","onCancel","_onSubmit","inputElement","event","which","preventDefault","value","onSubmit","rootNode","findDOMNode","contains","target","keyCode"],"mappings":"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","sourcesContent":["/* @flow */\nimport React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport IconButton from './IconButton';\nimport ButtonGroup from './ButtonGroup';\nimport autobind from 'class-autobind';\nimport cx from 'classnames';\n\nimport styles from './InputPopover.css';\n\ntype Props = {\n  className?: string;\n  defaultValue?: string;\n  onCancel: () => any;\n  onSubmit: (value: string) => any;\n};\n\nexport default class InputPopover extends Component {\n  props: Props;\n  _inputRef: ?Object;\n\n  constructor() {\n    super(...arguments);\n    autobind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this._onDocumentClick);\n    document.addEventListener('keydown', this._onDocumentKeydown);\n    if (this._inputRef) {\n      this._inputRef.focus();\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this._onDocumentClick);\n    document.removeEventListener('keydown', this._onDocumentKeydown);\n  }\n\n  render() {\n    let {props} = this;\n    let className = cx(props.className, styles.root);\n    return (\n      <div className={className}>\n        <div className={styles.inner}>\n          <input\n            ref={this._setInputRef}\n            defaultValue={props.defaultValue}\n            type=\"text\"\n            placeholder=\"https://example.com/\"\n            className={styles.input}\n            onKeyPress={this._onInputKeyPress}\n          />\n          <ButtonGroup className={styles.buttonGroup}>\n            <IconButton\n              label=\"Cancel\"\n              iconName=\"cancel\"\n              onClick={props.onCancel}\n            />\n            <IconButton\n              label=\"Submit\"\n              iconName=\"accept\"\n              onClick={this._onSubmit}\n            />\n          </ButtonGroup>\n        </div>\n      </div>\n    );\n  }\n\n  _setInputRef(inputElement: Object) {\n    this._inputRef = inputElement;\n  }\n\n  _onInputKeyPress(event: Object) {\n    if (event.which === 13) {\n      // Avoid submitting a <form> somewhere up the element tree.\n      event.preventDefault();\n      this._onSubmit();\n    }\n  }\n\n  _onSubmit() {\n    let value = this._inputRef ? this._inputRef.value : '';\n    this.props.onSubmit(value);\n  }\n\n  _onDocumentClick(event: Object) {\n    let rootNode = ReactDOM.findDOMNode(this);\n    if (!rootNode.contains(event.target)) {\n      // Here we pass the event so the parent can manage focus.\n      this.props.onCancel(event);\n    }\n  }\n\n  _onDocumentKeydown(event: Object) {\n    if (event.keyCode === 27) {\n      this.props.onCancel();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
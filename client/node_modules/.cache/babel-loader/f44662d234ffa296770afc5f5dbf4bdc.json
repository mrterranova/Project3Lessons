{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MERN Passport\\\\client\\\\src\\\\core\\\\pages\\\\Lesson\\\\UserOptions.js\";\nimport React, { useState, useEffect, Fragment } from 'react'; // import Layout from '../core/Layout';\n\nimport axios from 'axios';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { Link } from 'react-router-dom';\nimport { isAuth, getCookie } from '../../../auth/helpers';\n\nconst UserNotes = ({\n  history\n}) => {\n  const _useState = useState({\n    title: \"\",\n    category: \"\",\n    body: \"\",\n    _id: \"\",\n    isBookmarked: false,\n    LessonId: \"\",\n    showHideEdit: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const token = getCookie('token');\n  useEffect(() => {\n    loadProfile();\n  }, []);\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      title: title,\n      category: category,\n      body: body,\n      [name]: event.target.value\n    }));\n    console.log(\"title\", title);\n    console.log(\"category\", category);\n    console.log(\"body\", body);\n  };\n\n  const loadProfile = () => {\n    const URLarray = window.document.URL.split(\"/\");\n    const URLarrVar = URLarray[URLarray.length - 1];\n    const URLvar = URLarrVar.split(\"?\");\n    console.log(URLvar);\n    const URL_id = URLvar[0];\n    axios({\n      method: 'GET',\n      url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      const _response$data = response.data,\n            role = _response$data.role,\n            name = _response$data.name,\n            email = _response$data.email,\n            notes = _response$data.notes,\n            _id = _response$data._id;\n      setValues(_objectSpread({}, values, {\n        role,\n        name,\n        email,\n        notes,\n        _id,\n        LessonId: URL_id\n      }));\n\n      if (response.data.notes.length === 0) {\n        console.log(\"No notes located for this lesson\");\n      } else {\n        response.data.notes.map(note => {\n          if (note.Lesson_id === URL_id) {\n            setValues(_objectSpread({}, values, {\n              title: note.title,\n              category: note.category,\n              body: note.body\n            }));\n          } else {\n            console.log(\"No notes located for this lesson\");\n          }\n        });\n      }\n\n      if (response.data.bookmarks.length === 0) {\n        console.log(\"Lesson was not bookmarked\");\n      } else {\n        response.data.bookmarks.map(bookmark => {\n          if (response.data.bookmark.Lesson_id === URL_id) {\n            setValues(_objectSpread({}, values, {\n              category: bookmark.category,\n              isBookmarked: true\n            }));\n          } else {\n            console.log(\"Lesson was not bookmarked\");\n          }\n        });\n      }\n    });\n  };\n\n  const nTitle = values.nTitle,\n        nBody = values.nBody,\n        nCategory = values.nCategory,\n        _id = values._id,\n        title = values.title,\n        category = values.category,\n        body = values.body,\n        LessonId = values.LessonId; //show notes in form\n\n  const handleEditNotes = (noteTitle, noteCategory, noteBody, noteLink, noteDate, noteId) => {\n    handleChange(noteTitle, noteBody, noteCategory);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Title: \" + noteTitle,\n      onChange: handleChange('title'),\n      type: \"text\",\n      name: \"title\",\n      className: \"form-control\",\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"nav-link\",\n      to: '/lesson/' + noteLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Click to go to lesson...\"), React.createElement(\"input\", {\n      placeholder: \"Category: \" + noteCategory,\n      onChange: handleChange('category'),\n      name: \"category\",\n      type: \"text\",\n      className: \"form-control\",\n      id: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: \"note-textbox\",\n      onChange: handleChange('body'),\n      id: \"bodyNotes\",\n      name: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, noteBody), React.createElement(\"div\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Created on: \", convertDate(noteDate)), React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => handleSubmitEdit(noteId, noteLink),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Submit Edit\"))), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning deleteNote-btn\",\n      onClick: () => RemoveNote(noteId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Delete Note\"));\n  }; //convert to date\n\n\n  const convertDate = date => {\n    let arr1 = date.split(\"T\");\n    let arr2 = arr1[0].split(\"-\");\n    let dateyear = arr2[2] + \", \" + arr2[0];\n\n    switch (arr2[1]) {\n      case '01':\n        return \"Jan. \" + dateyear;\n        break;\n\n      case '02':\n        return \"Feb. \" + dateyear;\n        break;\n\n      case '03':\n        return \"March \" + dateyear;\n        break;\n\n      case '04':\n        return \"Apr. \" + dateyear;\n        break;\n\n      case '05':\n        return \"May \" + dateyear;\n        break;\n\n      case '06':\n        return \"June \" + dateyear;\n        break;\n\n      case '07':\n        return \"July \" + dateyear;\n        break;\n\n      case '08':\n        return \"Aug. \" + dateyear;\n        break;\n\n      case '09':\n        return \"Sept. \" + dateyear;\n        break;\n\n      case '10':\n        return \"Oct. \" + dateyear;\n        break;\n\n      case '11':\n        return \"Nov. \" + dateyear;\n        break;\n\n      case '12':\n        return \"Dec. \" + dateyear;\n        break;\n    }\n  };\n\n  const RemoveNote = Note_id => {\n    axios({\n      method: 'DELETE',\n      url: `${process.env.REACT_APP_API}/notes/` + Note_id,\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(response => {\n      console.log('Note was deleted', response);\n    });\n  };\n\n  const handleSubmitEdit = () => {\n    console.log(\"LessonId\", LessonId, \"UserId\", _id, \"cat\", category, \"body\", body, \"title\", title);\n    alert(\"stop\"); // axios({\n    //     method: \"POST\",\n    //     url: process.env.REACT_APP_API + '/user/note/',\n    //     headers: {\n    //         Authorization: 'Bearer ' + token\n    //     },\n    //     data: { title: title, category: category, body: body, User_id: _id, Lesson_id: URL_id }\n    // }).then(response => {\n    //     console.log(title, body, category)\n    // })\n  };\n\n  const getUserNote = () => {\n    console.log(\"You are looking for the notes!\");\n  };\n\n  const addBookmark = () => {\n    console.log(\"Bookmark time!\");\n  };\n\n  const takeNotes = () => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Title: \" + title,\n      onChange: handleChange('title'),\n      type: \"text\",\n      name: \"title\",\n      className: \"form-control\",\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"Category: \" + category,\n      onChange: handleChange('category'),\n      name: \"category\",\n      type: \"text\",\n      className: \"form-control\",\n      id: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: \"note-textbox\",\n      onChange: handleChange('body'),\n      id: \"bodyNotes\",\n      name: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, body), React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => handleSubmitEdit(),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Submit Edit\")), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning deleteNote-btn\",\n      onClick: () => RemoveNote(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Delete Note\"));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"noteContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, takeNotes()), React.createElement(\"div\", {\n    className: \"bookmarkedPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: '/images/notes.png',\n    onClick: getUserNote,\n    alt: \"notes\",\n    id: \"notesLessons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: '/images/bookmark.png',\n    onClick: addBookmark,\n    alt: \"bookmark\",\n    id: \"bookmarkLessons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }));\n};\n\nexport default UserNotes;","map":{"version":3,"sources":["C:/Users/User/Desktop/MERN Passport/client/src/core/pages/Lesson/UserOptions.js"],"names":["React","useState","useEffect","Fragment","axios","Link","isAuth","getCookie","UserNotes","history","title","category","body","_id","isBookmarked","LessonId","showHideEdit","values","setValues","token","loadProfile","handleChange","name","event","target","value","console","log","URLarray","window","document","URL","split","URLarrVar","length","URLvar","URL_id","method","url","process","env","REACT_APP_API","headers","Authorization","then","response","data","role","email","notes","map","note","Lesson_id","bookmarks","bookmark","nTitle","nBody","nCategory","handleEditNotes","noteTitle","noteCategory","noteBody","noteLink","noteDate","noteId","convertDate","handleSubmitEdit","RemoveNote","date","arr1","arr2","dateyear","Note_id","alert","getUserNote","addBookmark","takeNotes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\r\n// import Layout from '../core/Layout';\r\nimport axios from 'axios';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { isAuth, getCookie } from '../../../auth/helpers';\r\n\r\n\r\n\r\nconst UserNotes = ({ history }) => {\r\n    const [values, setValues] = useState({\r\n        title: \"\",\r\n        category: \"\",\r\n        body: \"\",\r\n        _id: \"\",\r\n        isBookmarked: false,\r\n        LessonId: \"\",\r\n        showHideEdit: false\r\n    });\r\n\r\n    \r\n\r\n    const token = getCookie('token');\r\n\r\n    useEffect(() => {\r\n        loadProfile();\r\n    }, []);\r\n\r\n    const handleChange = (name) => event => {\r\n        setValues({ ...values, title: title, category: category, body: body, [name]: event.target.value })\r\n        console.log(\"title\", title)\r\n        console.log(\"category\", category)\r\n        console.log(\"body\", body)\r\n    }\r\n\r\n    const loadProfile = () => {\r\n        const URLarray = window.document.URL.split(\"/\")\r\n        const URLarrVar = URLarray[URLarray.length-1]\r\n        const URLvar = URLarrVar.split(\"?\")\r\n        console.log(URLvar)\r\n        const URL_id = URLvar[0]\r\n        axios({\r\n            method: 'GET',\r\n            url: `${process.env.REACT_APP_API}/user/${isAuth()._id}`,\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n            .then(response => {\r\n                const { role, name, email, notes, _id } = response.data;\r\n                setValues({ ...values, role, name, email, notes, _id, LessonId : URL_id});\r\n\r\n                if(response.data.notes.length === 0) {\r\n                    console.log(\"No notes located for this lesson\")\r\n                } else { \r\n                    response.data.notes.map ( note => {\r\n                        if (note.Lesson_id === URL_id){\r\n                            setValues({...values, title: note.title, category: note.category, body: note.body})\r\n                        } else {\r\n                            console.log(\"No notes located for this lesson\")\r\n                        }\r\n                    })\r\n                }\r\n                if (response.data.bookmarks.length === 0) {\r\n                    console.log(\"Lesson was not bookmarked\")\r\n                } else {\r\n                    response.data.bookmarks.map( bookmark => {\r\n                        if (response.data.bookmark.Lesson_id === URL_id) {\r\n                            setValues({ ...values, category: bookmark.category, isBookmarked: true})\r\n                        } else {\r\n                            console.log(\"Lesson was not bookmarked\")\r\n                        }\r\n                    })\r\n                }\r\n                \r\n            })\r\n    };\r\n\r\n    const { nTitle, nBody, nCategory, _id, title, category,body, LessonId } = values;\r\n\r\n    //show notes in form\r\n    const handleEditNotes = (noteTitle, noteCategory, noteBody, noteLink, noteDate, noteId) => {\r\n        handleChange(noteTitle,noteBody,noteCategory);\r\n        return (\r\n            <Fragment>\r\n                <div>\r\n                    <form>\r\n                        <input placeholder={\"Title: \" + noteTitle} onChange={handleChange('title')} type=\"text\" name=\"title\" className=\"form-control\" id=\"title\"></input>\r\n                        <Link className=\"nav-link\" to={'/lesson/' + noteLink}>Click to go to lesson...</Link>\r\n                        <input placeholder={\"Category: \" + noteCategory} onChange={handleChange('category')} name=\"category\" type=\"text\" className=\"form-control\" id=\"category\"></input>\r\n                        <textarea className='note-textbox' onChange={handleChange('body')} id=\"bodyNotes\" name=\"body\">{noteBody}</textarea>\r\n                        <div className='date'>Created on: {convertDate(noteDate)}</div>\r\n                        <button className=\"btn btn-warning\" onClick={() => handleSubmitEdit(noteId, noteLink)} type=\"submit\">Submit Edit</button>\r\n                    </form>\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-warning deleteNote-btn\" onClick={() => RemoveNote(noteId)}>Delete Note</button>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    //convert to date\r\n    const convertDate = (date) => {\r\n        let arr1 = date.split(\"T\")\r\n        let arr2 = arr1[0].split(\"-\")\r\n        let dateyear = arr2[2] + \", \" + arr2[0];\r\n        switch (arr2[1]) {\r\n            case '01': return \"Jan. \" + dateyear;\r\n                break;\r\n            case '02': return \"Feb. \" + dateyear;\r\n                break;\r\n            case '03': return \"March \" + dateyear;\r\n                break;\r\n            case '04': return \"Apr. \" + dateyear;\r\n                break;\r\n            case '05': return \"May \" + dateyear;\r\n                break;\r\n            case '06': return \"June \" + dateyear;\r\n                break;\r\n            case '07': return \"July \" + dateyear;\r\n                break;\r\n            case '08': return \"Aug. \" + dateyear;\r\n                break;\r\n            case '09': return \"Sept. \" + dateyear;\r\n                break;\r\n            case '10': return \"Oct. \" + dateyear;\r\n                break;\r\n            case '11': return \"Nov. \" + dateyear;\r\n                break;\r\n            case '12': return \"Dec. \" + dateyear;\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    const RemoveNote = (Note_id) => {\r\n        axios({\r\n            method: 'DELETE',\r\n            url: `${process.env.REACT_APP_API}/notes/` + Note_id,\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            }\r\n        })\r\n            .then(response => {\r\n                console.log('Note was deleted', response);\r\n            });\r\n    }\r\n\r\n    const handleSubmitEdit = () => {\r\n        console.log(\"LessonId\", LessonId, \"UserId\", _id, \"cat\", category, \"body\", body, \"title\", title)\r\n        alert(\"stop\")\r\n        \r\n        // axios({\r\n        //     method: \"POST\",\r\n        //     url: process.env.REACT_APP_API + '/user/note/',\r\n        //     headers: {\r\n        //         Authorization: 'Bearer ' + token\r\n        //     },\r\n        //     data: { title: title, category: category, body: body, User_id: _id, Lesson_id: URL_id }\r\n        // }).then(response => {\r\n        //     console.log(title, body, category)\r\n        // })\r\n    }\r\n\r\n\r\n    const getUserNote = () =>{\r\n        console.log(\"You are looking for the notes!\")\r\n    }\r\n \r\n    const addBookmark = () =>{\r\n        console.log(\"Bookmark time!\")\r\n    }\r\n\r\n    const takeNotes = () => {\r\n        return (\r\n        <div>\r\n            <form>\r\n                <input placeholder={\"Title: \"+ title } onChange={handleChange('title')} type=\"text\" name=\"title\" className=\"form-control\" id=\"title\"></input>\r\n                <input placeholder={\"Category: \"+category} onChange={handleChange('category')} name=\"category\" type=\"text\" className=\"form-control\" id=\"category\"></input>\r\n                <textarea className='note-textbox' onChange={handleChange('body')} id=\"bodyNotes\" name=\"body\">{body}</textarea>\r\n                <button className=\"btn btn-warning\" onClick={() => handleSubmitEdit()} type=\"submit\">Submit Edit</button>\r\n            </form>\r\n            <button type=\"button\" className=\"btn btn-warning deleteNote-btn\" onClick={() => RemoveNote()}>Delete Note</button>\r\n        </div>\r\n        )\r\n       }\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"noteContainer\">\r\n            {takeNotes()}\r\n        </div>\r\n        <div className=\"bookmarkedPage\">\r\n\r\n        </div>\r\n        <img src={'/images/notes.png'} onClick={getUserNote} alt=\"notes\" id=\"notesLessons\" />\r\n        <img src={'/images/bookmark.png'} onClick={addBookmark} alt=\"bookmark\" id=\"bookmarkLessons\" />\r\n        </div>\r\n        );\r\n    };\r\n\r\n    export default UserNotes;"]},"metadata":{},"sourceType":"module"}